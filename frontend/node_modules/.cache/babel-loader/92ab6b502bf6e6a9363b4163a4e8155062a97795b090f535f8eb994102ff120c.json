{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/ProductManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport productService from \"../services/productService\"; // Corrected import path\nimport './ProductManagement.css';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductManagement = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [addFileError, setAddFileError] = useState(null);\n  const [addingProduct, setAddingProduct] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n  const fileInputRef = useRef(null);\n  const [editingProductId, setEditingProductId] = useState(null); // Track the product being edited\n  const [uploadError, setUploadError] = useState(''); // State for upload error message\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [addLoading, setAddLoading] = useState(false);\n  const [sortField, setSortField] = useState(\"productName\"); // Default sort field\n  const [sortOrder, setSortOrder] = useState(\"Ascending\");\n  const [newProduct, setNewProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n  const [addProduct, setAddProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const data = await productService.getAllProducts();\n        setProducts(Array.isArray(data) ? data : data.products || []);\n      } catch (err) {\n        console.error(\"Error fetching products:\", err);\n        setError(err.message || \"Failed to fetch products.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    async function fetchCategories() {\n      try {\n        setCategoriesLoading(true);\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        console.log('Categories data:', data); // Debug log\n\n        // Extract the categories array from the response\n        if (data && data.success && Array.isArray(data.categories)) {\n          setCategories(data.categories);\n        } else {\n          setCategories([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching categories:\", err);\n        setCategories([]);\n      } finally {\n        setCategoriesLoading(false);\n      }\n    }\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  const sortProducts = (products, field, order) => {\n    return [...products].sort((a, b) => {\n      let comparison = 0;\n      if (field === \"productName\") {\n        comparison = a.productName.localeCompare(b.productName);\n      } else if (field === \"productPrice\") {\n        comparison = a.productPrice - b.productPrice;\n      } else if (field === \"productStorage\") {\n        comparison = a.productStorage - b.productStorage;\n      } else if (field === \"categoryName\") {\n        const nameA = a.category ? a.category.name : \"\";\n        const nameB = b.category ? b.category.name : \"\";\n        comparison = nameA.localeCompare(nameB);\n      }\n      return order === \"Ascending\" ? comparison : -comparison;\n    });\n  };\n  const handleSort = field => {\n    const newSortOrder = sortField === field && sortOrder === \"Ascending\" ? \"Descending\" : \"Ascending\";\n    setSortField(field);\n    setSortOrder(newSortOrder);\n    const sortedProducts = sortProducts(products, field, newSortOrder);\n    setProducts(sortedProducts);\n  };\n  const handleDelete = async productId => {\n    try {\n      // Call the delete API\n      const response = await productService.deleteProduct(productId);\n\n      // Instead of filtering out the product, fetch the updated product list\n      const data = await productService.getAllProducts();\n      setProducts(Array.isArray(data) ? data : data.products || []);\n\n      // Reset editing state if needed\n      if (editingProductId === productId) {\n        setEditingProductId(null);\n      }\n    } catch (err) {\n      console.error(\"Error deleting product:\", err);\n      setError(err.message || \"Failed to delete product.\");\n    }\n  };\n  const handleUpdate = async productId => {\n    setUpdateLoading(true);\n    try {\n      // First, check if category is being updated\n      const originalProduct = products.find(p => p.productID === productId);\n      const originalCategoryName = originalProduct.category ? originalProduct.category.name : '';\n\n      // If category name has changed, update it using the dedicated endpoint\n      if (newProduct.categoryName && newProduct.categoryName !== originalCategoryName) {\n        await productService.updateCategory(productId, newProduct.categoryName);\n      }\n\n      // Create a copy of newProduct without categoryName for the general update\n      const productDataForUpdate = {\n        ...newProduct\n      };\n      delete productDataForUpdate.categoryName; // Remove categoryName as it's handled separately\n\n      // Then update the rest of the product data\n      const response = await productService.updateProduct(productId, productDataForUpdate);\n\n      // Fetch the updated product to ensure we have the latest data\n      const updatedProductResponse = await productService.getProductById(productId);\n      const updatedProduct = updatedProductResponse.product;\n\n      // Update the products list with the updated product\n      setProducts(products.map(product => product.productID === productId ? updatedProduct : product));\n      setEditingProductId(null); // Reset editing state\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error updating product:\", err);\n      setError(err.message || \"Failed to update product.\");\n    }\n    setUpdateLoading(false);\n  };\n  const handleEdit = product => {\n    setNewProduct({\n      productID: product.productID,\n      productName: product.productName,\n      productDescription: product.productDescription,\n      productPrice: product.productPrice,\n      productStorage: product.productStorage,\n      categoryName: product.category ? product.category.name : '',\n      productImage: product.productImages || [] // Reset images array since we can't edit existing images directly\n    });\n    setFileError(null);\n    setEditingProductId(product.productID);\n    setUploadError('');\n  };\n  const handleFileChange = e => {\n    const newFiles = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setFileError(null);\n    if (newFiles.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n    newFiles.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setNewProduct({\n      ...newProduct,\n      productImage: validFiles\n    });\n    // handleUpdate(productId);\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n  const handleFileChangeAdd = e => {\n    const files = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setAddFileError(null);\n    if (files.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setAddFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n    files.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setAddProduct({\n      ...addProduct,\n      productImage: validFiles\n    });\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n  const handleDeleteImage = (imageIndex, isAddForm = false) => {\n    if (isAddForm) {\n      const updatedImages = addProduct.productImage.filter((_, index) => index !== imageIndex);\n      setAddProduct({\n        ...addProduct,\n        productImage: updatedImages\n      });\n    } else {\n      const updatedImages = newProduct.productImage.filter((_, index) => index !== imageIndex);\n      console.log(updatedImages);\n      setNewProduct({\n        ...newProduct,\n        productImage: updatedImages\n      });\n    }\n    setUploadError(''); // Clear error message when an image is deleted\n  };\n  useEffect(() => {\n    console.log('Updated newProduct:', newProduct);\n  }, [newProduct]);\n  const handleAddProduct = async () => {\n    setAddLoading(true);\n    try {\n      const response = await productService.addProduct(addProduct);\n      // Add the new product to the list\n      setProducts([...products, response.product]);\n      // Reset the form\n      setAddProduct({\n        productID: '',\n        productName: '',\n        productDescription: '',\n        productPrice: '',\n        productStorage: '',\n        categoryName: '',\n        productImage: []\n      });\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error adding product:\", err);\n      setError(err.message || \"Failed to add product.\");\n    }\n    setAddLoading(false);\n  };\n  const handleToggleAddProduct = () => {\n    setAddingProduct(prevState => !prevState); // Toggle the state\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n    message: \"Loading your shopping cart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-form-button\",\n      onClick: handleToggleAddProduct,\n      children: addingProduct ? 'Hide Add Product Form' : 'Show Add Product Form'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), addingProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productID,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productID: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productName,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productDescription,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productDescription: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: addProduct.productPrice,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productPrice: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: addProduct.productStorage,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productStorage: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: addProduct.categoryName,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          categoryName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), categories && categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No categories available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/jpeg,image/jpg,image/png\",\n        onChange: handleFileChangeAdd,\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [Array.isArray(addProduct.productImage) && addProduct.productImage.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteImage(index, true),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)), setAddFileError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: addFileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: addLoading ? \"Adding...\" : \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"productName\"),\n            children: [\"Name \", sortField === \"productName\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sort-arrow\",\n              children: sortOrder === \"Ascending\" ? \"↑\" : \"↓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"productDescription\"),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"productPrice\"),\n            children: [\"Price \", sortField === \"productPrice\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sort-arrow\",\n              children: sortOrder === \"Ascending\" ? \"↑\" : \"↓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"productStorage\"),\n            children: [\"Stock \", sortField === \"productStorage\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sort-arrow\",\n              children: sortOrder === \"Ascending\" ? \"↑\" : \"↓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort(\"categoryName\"),\n            children: [\"Category \", sortField === \"categoryName\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sort-arrow\",\n              children: sortOrder === \"Ascending\" ? \"↑\" : \"↓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", product.productPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category ? product.category.name : \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => console.log(\"Edit\", product.productID),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => console.log(\"Delete\", product.productID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, product.productID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), editingProductId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Update Product: \", newProduct.productName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProduct.productName,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProduct.productDescription,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productDescription: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.productPrice,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productPrice: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.productStorage,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productStorage: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newProduct.categoryName,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          categoryName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), categories && categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No categories available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/jpeg,image/jpg,image/png\",\n        onChange: handleFileChange,\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [Array.isArray(newProduct.productImage) && newProduct.productImage.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteImage(index, false),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, this)), setFileError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdate(editingProductId),\n        children: updateLoading ? \"Updating...\" : \"Confirm Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductManagement, \"tbGqsv1TaHlYLWnlrxQ3jZLomis=\");\n_c = ProductManagement;\nexport default ProductManagement;\nvar _c;\n$RefreshReg$(_c, \"ProductManagement\");","map":{"version":3,"names":["React","useRef","useEffect","useState","productService","LoadingSpinner","jsxDEV","_jsxDEV","ProductManagement","_s","products","setProducts","loading","setLoading","error","setError","fileError","setFileError","addFileError","setAddFileError","addingProduct","setAddingProduct","categories","setCategories","categoriesLoading","setCategoriesLoading","fileInputRef","editingProductId","setEditingProductId","uploadError","setUploadError","updateLoading","setUpdateLoading","addLoading","setAddLoading","sortField","setSortField","sortOrder","setSortOrder","newProduct","setNewProduct","productID","productName","productDescription","productPrice","productStorage","categoryName","productImage","addProduct","setAddProduct","fetchProducts","data","getAllProducts","Array","isArray","err","console","message","fetchCategories","response","fetch","json","log","success","sortProducts","field","order","sort","a","b","comparison","localeCompare","nameA","category","name","nameB","handleSort","newSortOrder","sortedProducts","handleDelete","productId","deleteProduct","handleUpdate","originalProduct","find","p","originalCategoryName","updateCategory","productDataForUpdate","updateProduct","updatedProductResponse","getProductById","updatedProduct","product","map","handleEdit","productImages","handleFileChange","e","newFiles","from","target","files","validFiles","errorMessage","length","current","value","forEach","file","isValidType","includes","type","isValidSize","size","push","handleFileChangeAdd","handleDeleteImage","imageIndex","isAddForm","updatedImages","filter","_","index","handleAddProduct","handleToggleAddProduct","prevState","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onChange","_id","disabled","multiple","accept","ref","image","toFixed","src","alt","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/ProductManagement.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport productService from \"../services/productService\"; // Corrected import path\nimport './ProductManagement.css';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst ProductManagement = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [addFileError, setAddFileError] = useState(null);\n  const [addingProduct, setAddingProduct] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n  const fileInputRef = useRef(null);\n  const [editingProductId, setEditingProductId] = useState(null); // Track the product being edited\n  const [uploadError, setUploadError] = useState(''); // State for upload error message\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [addLoading, setAddLoading] = useState(false);\n  const [sortField, setSortField] = useState(\"productName\"); // Default sort field\n  const [sortOrder, setSortOrder] = useState(\"Ascending\");\n  \n  const [newProduct, setNewProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n\n  const [addProduct, setAddProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const data = await productService.getAllProducts();\n        setProducts(Array.isArray(data) ? data : data.products || []);\n      } catch (err) {\n        console.error(\"Error fetching products:\", err);\n        setError(err.message || \"Failed to fetch products.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    async function fetchCategories() {\n      try {\n        setCategoriesLoading(true);\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        console.log('Categories data:', data); // Debug log\n        \n        // Extract the categories array from the response\n        if (data && data.success && Array.isArray(data.categories)) {\n          setCategories(data.categories);\n        } else {\n          setCategories([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching categories:\", err);\n        setCategories([]);\n      } finally {\n        setCategoriesLoading(false);\n      }\n    }\n    \n    fetchProducts();\n    fetchCategories();\n  }, []);\n\n  const sortProducts = (products, field, order) => {\n    return [...products].sort((a, b) => {\n      let comparison = 0;\n      if (field === \"productName\") {\n        comparison = a.productName.localeCompare(b.productName);\n      } else if (field === \"productPrice\") {\n        comparison = a.productPrice - b.productPrice;\n      } else if (field === \"productStorage\") {\n        comparison = a.productStorage - b.productStorage;\n      } else if (field === \"categoryName\") {\n        const nameA = a.category ? a.category.name : \"\";\n        const nameB = b.category ? b.category.name : \"\";\n        comparison = nameA.localeCompare(nameB);\n      }\n      return order === \"Ascending\" ? comparison : -comparison;\n    });\n  };\n\n  const handleSort = (field) => {\n    const newSortOrder =\n      sortField === field && sortOrder === \"Ascending\" ? \"Descending\" : \"Ascending\";\n    setSortField(field);\n    setSortOrder(newSortOrder);\n\n    const sortedProducts = sortProducts(products, field, newSortOrder);\n    setProducts(sortedProducts);\n  };\n\n  const handleDelete = async (productId) => {\n    try {\n      // Call the delete API\n      const response = await productService.deleteProduct(productId);\n      \n      // Instead of filtering out the product, fetch the updated product list\n      const data = await productService.getAllProducts();\n      setProducts(Array.isArray(data) ? data : data.products || []);\n      \n      // Reset editing state if needed\n      if (editingProductId === productId) {\n        setEditingProductId(null);\n      }\n    } catch (err) {\n      console.error(\"Error deleting product:\", err);\n      setError(err.message || \"Failed to delete product.\");\n    }\n  };\n  \n  \n\n  const handleUpdate = async (productId) => {\n    setUpdateLoading(true);\n    try {\n      // First, check if category is being updated\n      const originalProduct = products.find(p => p.productID === productId);\n      const originalCategoryName = originalProduct.category ? originalProduct.category.name : '';\n      \n      // If category name has changed, update it using the dedicated endpoint\n      if (newProduct.categoryName && newProduct.categoryName !== originalCategoryName) {\n        await productService.updateCategory(productId, newProduct.categoryName);\n      }\n      \n      // Create a copy of newProduct without categoryName for the general update\n      const productDataForUpdate = { ...newProduct };\n      delete productDataForUpdate.categoryName; // Remove categoryName as it's handled separately\n      \n      // Then update the rest of the product data\n      const response = await productService.updateProduct(productId, productDataForUpdate);\n      \n      // Fetch the updated product to ensure we have the latest data\n      const updatedProductResponse = await productService.getProductById(productId);\n      const updatedProduct = updatedProductResponse.product;\n      \n      // Update the products list with the updated product\n      setProducts(products.map(product => \n        product.productID === productId ? updatedProduct : product\n      ));\n      \n      setEditingProductId(null); // Reset editing state\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error updating product:\", err);\n      setError(err.message || \"Failed to update product.\");\n    }\n    setUpdateLoading(false);\n  };\n\n  const handleEdit = (product) => {\n    setNewProduct({\n      productID: product.productID,\n      productName: product.productName,\n      productDescription: product.productDescription,\n      productPrice: product.productPrice,\n      productStorage: product.productStorage,\n      categoryName: product.category ? product.category.name : '',\n      productImage: product.productImages || []// Reset images array since we can't edit existing images directly\n    });\n    setFileError(null);\n    setEditingProductId(product.productID);\n    setUploadError('');\n  };\n\n  const handleFileChange = (e) => {\n    const newFiles = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n        setFileError(null);\n\n    if (newFiles.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n\n    newFiles.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setNewProduct({ ...newProduct, productImage: validFiles });\n    // handleUpdate(productId);\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n\n  };\n \n  const handleFileChangeAdd = (e) => {\n    const files = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setAddFileError(null);\n\n    if (files.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setAddFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n\n    files.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n\n    setAddProduct({ ...addProduct, productImage: validFiles });\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n\n  const handleDeleteImage = (imageIndex, isAddForm = false) => {\n    if (isAddForm) {\n      const updatedImages = addProduct.productImage.filter((_, index) => index !== imageIndex);\n      setAddProduct({ ...addProduct, productImage: updatedImages });\n    } else {\n      const updatedImages = newProduct.productImage.filter((_, index) => index !== imageIndex);\n      console.log(updatedImages);\n      setNewProduct({ ...newProduct, productImage: updatedImages});\n    }\n    setUploadError(''); // Clear error message when an image is deleted\n  };\n\n  useEffect(() => {\n    console.log('Updated newProduct:', newProduct);\n  }, [newProduct]);\n\n  const handleAddProduct = async () => {\n    setAddLoading(true);\n    try {\n      const response = await productService.addProduct(addProduct);\n      // Add the new product to the list\n      setProducts([...products, response.product]);\n      // Reset the form\n      setAddProduct({\n        productID: '',\n        productName: '',\n        productDescription: '',\n        productPrice: '',\n        productStorage: '',\n        categoryName: '',\n        productImage: []\n      });\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error adding product:\", err);\n      setError(err.message || \"Failed to add product.\");\n    }\n    setAddLoading(false);\n  };\n\n  const handleToggleAddProduct = () => {\n    setAddingProduct(prevState => !prevState); // Toggle the state\n  };\n\n  if (loading) return <LoadingSpinner message=\"Loading your shopping cart...\" />;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"product-management-container\">\n      <section className=\"spacing\"></section>\n      <h1>Product Management</h1>\n      <button \n        className=\"toggle-form-button\"\n        onClick={handleToggleAddProduct}\n      >\n        {addingProduct ? 'Hide Add Product Form' : 'Show Add Product Form'}\n      </button>\n      \n      {/* Add New Product Form */}\n      {addingProduct && (<div className=\"add-product-form\">\n        <h2>Add New Product</h2>\n        <label>Product ID:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productID}\n          onChange={(e) => setAddProduct({ ...addProduct, productID: e.target.value })}\n        />\n        <label>Product Name:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productName}\n          onChange={(e) => setAddProduct({ ...addProduct, productName: e.target.value })}\n        />\n        <label>Product Description:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productDescription}\n          onChange={(e) => setAddProduct({ ...addProduct, productDescription: e.target.value })}\n        />\n        <label>Product Price:</label>\n        <input\n          type=\"number\"\n          value={addProduct.productPrice}\n          onChange={(e) => setAddProduct({ ...addProduct, productPrice: e.target.value })}\n        />\n        <label>Product Stock:</label>\n        <input\n          type=\"number\"\n          value={addProduct.productStorage}\n          onChange={(e) => setAddProduct({ ...addProduct, productStorage: e.target.value })}\n        />\n        \n        <label>Category:</label>\n        <select\n          value={addProduct.categoryName}\n          onChange={(e) => setAddProduct({ ...addProduct, categoryName: e.target.value })}\n        >\n          <option value=\"\">Select a category</option>\n          {categories && categories.length > 0 ? (\n            categories.map(category => (\n              <option key={category._id} value={category.name}>\n                {category.name}\n              </option>\n            ))\n          ) : (\n            <option disabled>No categories available</option>\n          )}\n        </select>\n        \n        <label>Upload Images:</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/jpeg,image/jpg,image/png\"\n          onChange={handleFileChangeAdd}\n          ref={fileInputRef}\n        />\n        <div className=\"image-preview\">\n          {Array.isArray(addProduct.productImage) && addProduct.productImage.map((image, index) => (\n            <div key={index}>\n              <span>{image.name}</span>\n              <button onClick={() => handleDeleteImage(index, true)}>Delete</button>\n            </div>\n          ))}\n        {setAddFileError && <p>{addFileError}</p>}\n        </div>\n\n        {uploadError && <div className=\"error-message\">{uploadError}</div>} {/* Error message for invalid uploads */}\n        \n        <button onClick={handleAddProduct}>{addLoading?\"Adding...\":\"Add Product\"}</button>\n      </div>)}\n\n      {/* Existing Products Table */}\n      <table className=\"product-table\">\n        <thead>\n          <tr>\n            <th onClick={() => handleSort(\"productName\")}>\n              Name {sortField === \"productName\" && (\n    <span className=\"sort-arrow\">{sortOrder === \"Ascending\" ? \"↑\" : \"↓\"}</span>\n  )}\n</th>\n            <th onClick={() => handleSort(\"productDescription\")}>\n              Description\n            </th>\n            <th onClick={() => handleSort(\"productPrice\")}>\n              Price {sortField === \"productPrice\" && (\n    <span className=\"sort-arrow\">{sortOrder === \"Ascending\" ? \"↑\" : \"↓\"}</span>\n  )}\n</th>\n            <th onClick={() => handleSort(\"productStorage\")}>\n              Stock {sortField === \"productStorage\" && (\n    <span className=\"sort-arrow\">{sortOrder === \"Ascending\" ? \"↑\" : \"↓\"}</span>\n  )}\n</th>\n            <th onClick={() => handleSort(\"categoryName\")}>\n              Category {sortField === \"categoryName\" && (\n    <span className=\"sort-arrow\">{sortOrder === \"Ascending\" ? \"↑\" : \"↓\"}</span>\n  )}\n</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <tr key={product.productID}>\n              <td>{product.productName}</td>\n              <td>{product.productDescription}</td>\n              <td>${product.productPrice.toFixed(2)}</td>\n              <td>{product.productStorage}</td>\n              <td>{product.category ? product.category.name : \"None\"}</td>\n              <td>\n                <button onClick={() => console.log(\"Edit\", product.productID)}>\n                  Update\n                </button>\n                <button onClick={() => console.log(\"Delete\", product.productID)}>\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Update Product Form */}\n      {editingProductId && (\n        <div className=\"update-product-form\">\n          <h2>Update Product: {newProduct.productName}</h2>\n          <label>Update Name:</label>\n          <input\n            type=\"text\"\n            value={newProduct.productName}\n            onChange={(e) => setNewProduct({ ...newProduct, productName: e.target.value })}\n          />\n          <label>Update Description:</label>\n          <input\n            type=\"text\"\n            value={newProduct.productDescription}\n            onChange={(e) => setNewProduct({ ...newProduct, productDescription: e.target.value })}\n          />\n          <label>Update Price:</label>\n          <input\n            type=\"number\"\n            value={newProduct.productPrice}\n            onChange={(e) => setNewProduct({ ...newProduct, productPrice: e.target.value })}\n          />\n          <label>Update Stock:</label>\n          <input\n            type=\"number\"\n            value={newProduct.productStorage}\n            onChange={(e) => setNewProduct({ ...newProduct, productStorage: e.target.value })}\n          />\n          \n          <label>Update Category:</label>\n          <select\n            value={newProduct.categoryName}\n            onChange={(e) => setNewProduct({ ...newProduct, categoryName: e.target.value })}\n          >\n            <option value=\"\">Select a category</option>\n            {categories && categories.length > 0 ? (\n              categories.map(category => (\n                <option key={category._id} value={category.name}>\n                  {category.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No categories available</option>\n            )}\n          </select>\n          \n          <label>Upload Images:</label>\n          <input\n            type=\"file\"\n            multiple\n            accept=\"image/jpeg,image/jpg,image/png\"\n            onChange={handleFileChange}\n            ref={fileInputRef}\n          />\n          <div className=\"image-preview\">\n            {Array.isArray(newProduct.productImage) && newProduct.productImage.map((image, index) => (\n              <div key={index}>\n                <p>{index}</p>\n                <img src = {image} alt={image.name}/>\n                <button onClick={() => handleDeleteImage(index, false)}>Delete</button>\n              </div>\n            ))}\n            {setFileError && <p>{fileError}</p>}\n          </div>\n\n          {uploadError && <div className=\"error-message\">{uploadError}</div>} {/* Error message for invalid uploads */}\n          \n          <button onClick={() => handleUpdate(editingProductId)}>{updateLoading ? \"Updating...\":\"Confirm Update\"}</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}