{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Reservations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Reservations.css\";\nimport StepIndicator from \"./StepIndicator\";\nimport cartService from \"../services/cartService\"; // Import the cart service\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reservations = ({\n  username: propUsername\n}) => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.cartItems) || []);\n  const [username, setUsername] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [checkoutError, setCheckoutError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [timerId, setTimerId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Add shipping information state\n  const [shippingInfo, setShippingInfo] = useState({\n    name: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"HK\"\n  });\n\n  // Calculate total with correct calculation using quantity and unitPrice\n  const totalPrice = cartItems.reduce((total, item) => {\n    var _item$productId;\n    const quantity = Number(item.quantity) || 1;\n    const unitPrice = ((_item$productId = item.productId) === null || _item$productId === void 0 ? void 0 : _item$productId.productPrice) || 0;\n    const subtotal = unitPrice * quantity;\n    return total + subtotal;\n  }, 0).toFixed(2);\n\n  // Fetch cart items from API\n  const fetchCartItems = async user => {\n    if (!user) return;\n    try {\n      setIsLoading(true);\n      const response = await cartService.getCart(user);\n      if (response && response.cart && response.cart.items) {\n        setCartItems(response.cart.items);\n      }\n    } catch (error) {\n      console.error(\"Error fetching cart items:\", error);\n      setCheckoutError(\"Some product in cart is offlined. We will direct to shopping cart\");\n\n      // Add a short delay before redirecting to cart page\n      setTimeout(() => {\n        navigate(\"/cart\");\n      }, 2000); // 2 second delay to allow user to see the error message\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Set up username and cart items on component mount\n  useEffect(() => {\n    var _location$state2, _location$state3;\n    // First priority: Use username from props if available\n    let currentUsername = \"\";\n    if (propUsername) {\n      currentUsername = propUsername;\n      setUsername(propUsername);\n    }\n    // Second priority: Try from location state\n    else if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.username) {\n      currentUsername = location.state.username;\n      setUsername(location.state.username);\n    }\n    // Third priority: Try from localStorage directly\n    else if (localStorage.getItem(\"username\")) {\n      currentUsername = localStorage.getItem(\"username\");\n      setUsername(currentUsername);\n    }\n    // If all else fails, use a fallback for development\n    else {\n      if (process.env.NODE_ENV === \"development\") {\n        currentUsername = \"testuser\";\n        setUsername(currentUsername);\n      }\n    }\n\n    // If we have a username, fetch cart items from API\n    if (currentUsername) {\n      fetchCartItems(currentUsername);\n    }\n    // If we still have location state cart items, use those while API loads\n    else if ((_location$state3 = location.state) !== null && _location$state3 !== void 0 && _location$state3.cartItems && location.state.cartItems.length > 0) {\n      setCartItems(location.state.cartItems);\n    }\n  }, [propUsername, location.state]);\n\n  // Rest of the component remains the same...\n\n  // Function to start the countdown timer (15 minutes = 900 seconds)\n  const startCheckoutTimer = () => {\n    let secondsLeft = 15 * 60;\n    setTimeLeft(secondsLeft);\n    const timer = setInterval(() => {\n      secondsLeft -= 1;\n      setTimeLeft(secondsLeft);\n      if (secondsLeft <= 0) {\n        clearInterval(timer);\n        removeReservation();\n        alert(\"Checkout time expired. Your reservation has been released.\");\n        navigate(\"/cart\");\n      }\n    }, 1000);\n    setTimerId(timer);\n    return timer;\n  };\n\n  // Function to clear the timer\n  const clearCheckoutTimer = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      setTimerId(null);\n      setTimeLeft(null);\n    }\n  };\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    if (seconds === null) return \"\";\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Remove reservation if user cancels or timeout\n  const removeReservation = async () => {\n    if (!username) {\n      console.error(\"Cannot remove reservation: No username available\");\n      return;\n    }\n    try {\n      await axios.post(`/api/checkout/remove-reservation/${username}`);\n    } catch (error) {\n      console.error(\"Failed to remove reservation:\", error);\n    }\n  };\n\n  // Helper function to simplify cart items for API\n  const prepareCartItemsForAPI = items => {\n    return items.map(item => {\n      // Create a simplified version of the item\n      return {\n        productId: typeof item.productId === \"object\" ? item.productId._id : item.productId,\n        productName: typeof item.productId === \"object\" ? item.productId.productName : item.productName,\n        productPrice: Number(item.productPrice) || 0,\n        quantity: Number(item.quantity) || 1\n      };\n    });\n  };\n\n  // Handle shipping form input changes\n  const handleShippingInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setShippingInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Validate shipping form\n  const validateShippingInfo = () => {\n    const {\n      name,\n      address,\n      city,\n      state,\n      zipCode\n    } = shippingInfo;\n    if (!name.trim()) return \"Name is required\";\n    if (!address.trim()) return \"Address is required\";\n    return null;\n  };\n  const handleCheckout = async () => {\n    // Use the username state which was set from props\n    let checkoutUsername = username;\n    if (!checkoutUsername) {\n      // Prompt the user for their username as a last resort\n      const promptedUsername = prompt(\"Please enter your username to continue with checkout:\");\n      if (promptedUsername && promptedUsername.trim()) {\n        checkoutUsername = promptedUsername.trim();\n        setUsername(checkoutUsername);\n        console.log(\"Using prompted username:\", checkoutUsername);\n      } else {\n        setCheckoutError(\"No username available. Please log in first.\");\n        return;\n      }\n    }\n    if (cartItems.length === 0) {\n      alert(\"Your cart is empty\");\n      return;\n    }\n\n    // Validate shipping information\n    const shippingError = validateShippingInfo();\n    if (shippingError) {\n      setCheckoutError(shippingError);\n      return;\n    }\n    setIsProcessing(true);\n    setCheckoutError(null);\n    try {\n      // Prepare simplified cart items for API\n      const simplifiedCartItems = prepareCartItemsForAPI(cartItems);\n      const initiateResponse = await axios.post(`/api/checkout/initiate-checkout/${checkoutUsername}`, {\n        items: simplifiedCartItems,\n        totalAmount: parseFloat(totalPrice)\n      });\n      if (initiateResponse.data.success) {\n        // Start the 15-minute countdown\n        startCheckoutTimer();\n\n        // Step 2: Create PayPal order with the shipping info from form\n        const formattedShippingInfo = {\n          name: shippingInfo.name,\n          address: shippingInfo.address\n        };\n        console.log(\"Creating PayPal order with:\", {\n          username: checkoutUsername,\n          shippingInfo: formattedShippingInfo\n        });\n        const createOrderResponse = await axios.post(`/api/checkout/create-paypal-order`, {\n          username: checkoutUsername,\n          shippingInfo: formattedShippingInfo\n        });\n        if (createOrderResponse.data.success) {\n          // Get the PayPal order ID from the response\n          const orderId = createOrderResponse.data.paypalOrderId;\n          if (orderId) {\n            // Determine the PayPal URL\n            let paypalUrl;\n            if (createOrderResponse.data.approvalUrl) {\n              paypalUrl = createOrderResponse.data.approvalUrl;\n            } else {\n              paypalUrl = `https://www.sandbox.paypal.com/checkoutnow?token=${orderId}`;\n            }\n\n            // Open PayPal in a new window instead of redirecting\n            const paypalWindow = window.open(paypalUrl, \"_blank\");\n\n            // If popup is blocked, provide a fallback\n            if (!paypalWindow || paypalWindow.closed || typeof paypalWindow.closed === \"undefined\") {\n              setCheckoutError(\"Popup blocked! Please allow popups, refresh and try again!\");\n              // Create a clickable link as fallback\n              const linkElement = document.createElement(\"a\");\n              linkElement.href = paypalUrl;\n              linkElement.target = \"_blank\";\n              linkElement.textContent = \"Open PayPal in a new window\";\n              linkElement.className = \"paypal-fallback-link\";\n              const errorDiv = document.querySelector(\".error-message\");\n              if (errorDiv) {\n                errorDiv.appendChild(document.createElement(\"br\"));\n                errorDiv.appendChild(linkElement);\n              }\n            } else {\n              // Set up polling to check when the PayPal window is closed\n              const pollTimer = setInterval(() => {\n                if (paypalWindow.closed) {\n                  clearInterval(pollTimer);\n\n                  // When PayPal window is closed, check if payment was completed\n                  // We'll do this by attempting to process the payment\n                  processPayment(checkoutUsername, orderId);\n                }\n              }, 200);\n\n              // Also set a timeout to stop polling after 15 minutes (same as reservation timeout)\n              setTimeout(() => {\n                clearInterval(pollTimer);\n                if (!paypalWindow.closed) {\n                  paypalWindow.close();\n                }\n                setCheckoutError(\"Payment session timed out. Please try again.\");\n                setIsProcessing(false);\n              }, 15 * 60 * 1000); // 15 minutes\n            }\n          } else {\n            throw new Error(\"No PayPal order ID returned from server\");\n          }\n        } else {\n          throw new Error(createOrderResponse.data.message || \"Failed to create PayPal order\");\n        }\n      } else {\n        throw new Error(\"Sorry, items were sold out\");\n      }\n    } catch (error) {\n      console.error(\"Checkout error:\", error);\n      let errorMessage = \"An error occurred during checkout\";\n      if (error.response) {\n        // The server responded with an error status code\n        console.error(\"Error response:\", error.response);\n        if (error.response.data && error.response.data.error) {\n          // If the server sent a specific error message\n          errorMessage = error.response.data.error;\n        } else if (error.response.data && error.response.data.message) {\n          // Alternative error message format\n          errorMessage = error.response.data.message;\n        } else {\n          // Generic error with status code\n          errorMessage = `Server error (${error.response.status}): Please try again later`;\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = \"No response received from server. Please check your connection.\";\n      } else {\n        // Something happened in setting up the request\n        errorMessage = error.message || \"Unknown error occurred\";\n      }\n      setCheckoutError(errorMessage);\n      clearCheckoutTimer();\n      setIsProcessing(false);\n    }\n  };\n\n  // Function to process payment after PayPal window is closed\n  const processPayment = async (checkoutUsername, orderId) => {\n    try {\n      setIsProcessing(true);\n      console.log(\"Processing payment for:\", checkoutUsername, \"with PayPal order ID:\", orderId);\n      const processResponse = await axios.post(`/api/checkout/process-payment`, {\n        username: checkoutUsername,\n        paypalOrderId: orderId\n      });\n      if (processResponse.data.success) {\n        // Payment successfully processed\n        clearCheckoutTimer(); // Clear the reservation timer\n\n        // Clear the cart in localStorage and state\n        localStorage.removeItem(\"cart\");\n        setCartItems([]);\n        alert(\"Payment successful! Thank you for your order.\");\n\n        // Redirect to order confirmation page\n        setTimeout(() => {\n          navigate(\"/CheckoutFinish\", {\n            state: {\n              orderId: processResponse.data.orderId,\n              orderDetails: processResponse.data.orderDetails // Pass the complete order details\n              // Include any other necessary data\n            },\n            search: `?token=${processResponse.data.orderId}` // Add the token as a query parameter\n          });\n        }); // Short delay to show success message\n      } else {\n        throw new Error(processResponse.data.message || \"Failed to process payment\");\n      }\n    } catch (error) {\n      console.error(\"Payment processing error:\", error);\n      let errorMessage = \"An error occurred while processing your payment\";\n      if (error.response) {\n        var _error$response$data;\n        errorMessage = `Server error: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`;\n      } else if (error.request) {\n        errorMessage = \"No response received from server. Please check your connection.\";\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n      setCheckoutError(errorMessage);\n\n      // Attempt to clean up reservations on error\n      try {\n        await axios.post(`/api/checkout/remove-reservation/${checkoutUsername}`);\n      } catch (cleanupError) {\n        console.error(\"Failed to clean up reservations:\", cleanupError);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Clean up timer when component unmounts\n  useEffect(() => {\n    return () => {\n      clearCheckoutTimer();\n    };\n  }, []);\n\n  // Handle cancellation of checkout\n  const handleCancel = () => {\n    if (window.confirm(\"Are you sure you want to cancel your reservation?\")) {\n      removeReservation();\n      clearCheckoutTimer();\n      navigate(\"/cart\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StepIndicator, {\n      currentStep: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Reservations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), timeLeft && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-timer\",\n        children: [\"Time remaining: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this), checkoutError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: checkoutError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cart Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading cart items...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this) : cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your cart is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"cart-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Subtotal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: cartItems.map((item, index) => {\n                var _item$productId2, _item$productId3;\n                const productName = item.productName || ((_item$productId2 = item.productId) === null || _item$productId2 === void 0 ? void 0 : _item$productId2.productName) || \"Unknown Product\";\n                const quantity = Number(item.quantity) || 1;\n                // fetch unit price of products\n                const unitPrice = ((_item$productId3 = item.productId) === null || _item$productId3 === void 0 ? void 0 : _item$productId3.productPrice) || 0;\n                // Calculate subtotal of each product\n                const productSubtotal = Number(unitPrice * quantity).toFixed(2);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", unitPrice.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"$\", productSubtotal]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  className: \"total-label\",\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"total-price\",\n                  children: [\"$\", totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Shipping Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                value: shippingInfo.name,\n                onChange: handleShippingInfoChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Street Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                name: \"address\",\n                value: shippingInfo.address,\n                onChange: handleShippingInfoChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkout-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"checkout-button\",\n              onClick: handleCheckout,\n              disabled: isProcessing,\n              children: isProcessing ? \"Processing...\" : \"Proceed to PayPal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: handleCancel,\n              disabled: isProcessing,\n              children: \"Cancel Reservation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Reservations, \"bITGxejS5d0LO33+e6U6p7d5OY4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Reservations;\nexport default Reservations;\nvar _c;\n$RefreshReg$(_c, \"Reservations\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","StepIndicator","cartService","jsxDEV","_jsxDEV","Fragment","_Fragment","Reservations","username","propUsername","_s","_location$state","location","navigate","cartItems","setCartItems","state","setUsername","isProcessing","setIsProcessing","checkoutError","setCheckoutError","timeLeft","setTimeLeft","timerId","setTimerId","isLoading","setIsLoading","shippingInfo","setShippingInfo","name","address","city","zipCode","country","totalPrice","reduce","total","item","_item$productId","quantity","Number","unitPrice","productId","productPrice","subtotal","toFixed","fetchCartItems","user","response","getCart","cart","items","error","console","setTimeout","_location$state2","_location$state3","currentUsername","localStorage","getItem","process","env","NODE_ENV","length","startCheckoutTimer","secondsLeft","timer","setInterval","clearInterval","removeReservation","alert","clearCheckoutTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","post","prepareCartItemsForAPI","map","_id","productName","handleShippingInfoChange","e","value","target","prev","validateShippingInfo","trim","handleCheckout","checkoutUsername","promptedUsername","prompt","log","shippingError","simplifiedCartItems","initiateResponse","totalAmount","parseFloat","data","success","formattedShippingInfo","createOrderResponse","orderId","paypalOrderId","paypalUrl","approvalUrl","paypalWindow","window","open","closed","linkElement","document","createElement","href","textContent","className","errorDiv","querySelector","appendChild","pollTimer","processPayment","close","Error","message","errorMessage","status","request","processResponse","removeItem","orderDetails","search","_error$response$data","cleanupError","handleCancel","confirm","children","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","index","_item$productId2","_item$productId3","productSubtotal","colSpan","htmlFor","type","id","onChange","required","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Reservations.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Reservations.css\";\nimport StepIndicator from \"./StepIndicator\";\nimport cartService from \"../services/cartService\"; // Import the cart service\n\nconst Reservations = ({ username: propUsername }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [cartItems, setCartItems] = useState(location.state?.cartItems || []);\n  const [username, setUsername] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [checkoutError, setCheckoutError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [timerId, setTimerId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Add shipping information state\n  const [shippingInfo, setShippingInfo] = useState({\n    name: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"HK\",\n  });\n\n  // Calculate total with correct calculation using quantity and unitPrice\n  const totalPrice = cartItems\n    .reduce((total, item) => {\n      const quantity = Number(item.quantity) || 1;\n      const unitPrice = item.productId?.productPrice || 0;\n      const subtotal = unitPrice * quantity;\n      return total + subtotal;\n    }, 0)\n    .toFixed(2);\n\n  // Fetch cart items from API\n  const fetchCartItems = async (user) => {\n    if (!user) return;\n    \n    try {\n      setIsLoading(true);\n      const response = await cartService.getCart(user);\n      \n      if (response && response.cart && response.cart.items) {\n        setCartItems(response.cart.items);\n      }\n    } catch (error) {\n      console.error(\"Error fetching cart items:\", error);\n      setCheckoutError(\"Some product in cart is offlined. We will direct to shopping cart\");\n      \n      // Add a short delay before redirecting to cart page\n      setTimeout(() => {\n        navigate(\"/cart\");\n      }, 2000); // 2 second delay to allow user to see the error message\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n\n  // Set up username and cart items on component mount\n  useEffect(() => {\n    // First priority: Use username from props if available\n    let currentUsername = \"\";\n    \n    if (propUsername) {\n      currentUsername = propUsername;\n      setUsername(propUsername);\n    }\n    // Second priority: Try from location state\n    else if (location.state?.username) {\n      currentUsername = location.state.username;\n      setUsername(location.state.username);\n    }\n    // Third priority: Try from localStorage directly\n    else if (localStorage.getItem(\"username\")) {\n      currentUsername = localStorage.getItem(\"username\");\n      setUsername(currentUsername);\n    }\n    // If all else fails, use a fallback for development\n    else {\n      if (process.env.NODE_ENV === \"development\") {\n        currentUsername = \"testuser\";\n        setUsername(currentUsername);\n      }\n    }\n\n    // If we have a username, fetch cart items from API\n    if (currentUsername) {\n      fetchCartItems(currentUsername);\n    }\n    // If we still have location state cart items, use those while API loads\n    else if (location.state?.cartItems && location.state.cartItems.length > 0) {\n      setCartItems(location.state.cartItems);\n    }\n  }, [propUsername, location.state]);\n\n  // Rest of the component remains the same...\n  \n  // Function to start the countdown timer (15 minutes = 900 seconds)\n  const startCheckoutTimer = () => {\n    let secondsLeft = 15 * 60;\n    setTimeLeft(secondsLeft);\n\n    const timer = setInterval(() => {\n      secondsLeft -= 1;\n      setTimeLeft(secondsLeft);\n\n      if (secondsLeft <= 0) {\n        clearInterval(timer);\n        removeReservation();\n        alert(\"Checkout time expired. Your reservation has been released.\");\n        navigate(\"/cart\");\n      }\n    }, 1000);\n\n    setTimerId(timer);\n    return timer;\n  };\n\n  // Function to clear the timer\n  const clearCheckoutTimer = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      setTimerId(null);\n      setTimeLeft(null);\n    }\n  };\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    if (seconds === null) return \"\";\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, \"0\")}:${secs\n      .toString()\n      .padStart(2, \"0\")}`;\n  };\n\n  // Remove reservation if user cancels or timeout\n  const removeReservation = async () => {\n    if (!username) {\n      console.error(\"Cannot remove reservation: No username available\");\n      return;\n    }\n\n    try {\n      await axios.post(`/api/checkout/remove-reservation/${username}`);\n    } catch (error) {\n      console.error(\"Failed to remove reservation:\", error);\n    }\n  };\n\n  // Helper function to simplify cart items for API\n  const prepareCartItemsForAPI = (items) => {\n    return items.map((item) => {\n      // Create a simplified version of the item\n      return {\n        productId:\n          typeof item.productId === \"object\"\n            ? item.productId._id\n            : item.productId,\n        productName:\n          typeof item.productId === \"object\"\n            ? item.productId.productName\n            : item.productName,\n        productPrice: Number(item.productPrice) || 0,\n        quantity: Number(item.quantity) || 1,\n      };\n    });\n  };\n\n  // Handle shipping form input changes\n  const handleShippingInfoChange = (e) => {\n    const { name, value } = e.target;\n    setShippingInfo((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Validate shipping form\n  const validateShippingInfo = () => {\n    const { name, address, city, state, zipCode } = shippingInfo;\n    if (!name.trim()) return \"Name is required\";\n    if (!address.trim()) return \"Address is required\";\n\n    return null;\n  };\n\n  const handleCheckout = async () => {\n    // Use the username state which was set from props\n    let checkoutUsername = username;\n\n    if (!checkoutUsername) {\n      // Prompt the user for their username as a last resort\n      const promptedUsername = prompt(\n        \"Please enter your username to continue with checkout:\"\n      );\n      if (promptedUsername && promptedUsername.trim()) {\n        checkoutUsername = promptedUsername.trim();\n        setUsername(checkoutUsername);\n        console.log(\"Using prompted username:\", checkoutUsername);\n      } else {\n        setCheckoutError(\"No username available. Please log in first.\");\n        return;\n      }\n    }\n\n    if (cartItems.length === 0) {\n      alert(\"Your cart is empty\");\n      return;\n    }\n\n    // Validate shipping information\n    const shippingError = validateShippingInfo();\n    if (shippingError) {\n      setCheckoutError(shippingError);\n      return;\n    }\n\n    setIsProcessing(true);\n    setCheckoutError(null);\n\n    try {\n      // Prepare simplified cart items for API\n      const simplifiedCartItems = prepareCartItemsForAPI(cartItems);\n\n      const initiateResponse = await axios.post(\n        `/api/checkout/initiate-checkout/${checkoutUsername}`,\n        {\n          items: simplifiedCartItems,\n          totalAmount: parseFloat(totalPrice),\n        }\n      );\n\n      if (initiateResponse.data.success) {\n        // Start the 15-minute countdown\n        startCheckoutTimer();\n\n        // Step 2: Create PayPal order with the shipping info from form\n        const formattedShippingInfo = {\n          name: shippingInfo.name,\n          address: shippingInfo.address,\n        };\n\n        console.log(\"Creating PayPal order with:\", {\n          username: checkoutUsername,\n          shippingInfo: formattedShippingInfo,\n        });\n\n        const createOrderResponse = await axios.post(\n          `/api/checkout/create-paypal-order`,\n          {\n            username: checkoutUsername,\n            shippingInfo: formattedShippingInfo,\n          }\n        );\n\n        if (createOrderResponse.data.success) {\n          // Get the PayPal order ID from the response\n          const orderId = createOrderResponse.data.paypalOrderId;\n\n          if (orderId) {\n            // Determine the PayPal URL\n            let paypalUrl;\n            if (createOrderResponse.data.approvalUrl) {\n              paypalUrl = createOrderResponse.data.approvalUrl;\n            } else {\n              paypalUrl = `https://www.sandbox.paypal.com/checkoutnow?token=${orderId}`;\n            }\n\n            // Open PayPal in a new window instead of redirecting\n            const paypalWindow = window.open(paypalUrl, \"_blank\");\n\n            // If popup is blocked, provide a fallback\n            if (\n              !paypalWindow ||\n              paypalWindow.closed ||\n              typeof paypalWindow.closed === \"undefined\"\n            ) {\n              setCheckoutError(\n                \"Popup blocked! Please allow popups, refresh and try again!\"\n              );\n              // Create a clickable link as fallback\n              const linkElement = document.createElement(\"a\");\n              linkElement.href = paypalUrl;\n              linkElement.target = \"_blank\";\n              linkElement.textContent = \"Open PayPal in a new window\";\n              linkElement.className = \"paypal-fallback-link\";\n\n              const errorDiv = document.querySelector(\".error-message\");\n              if (errorDiv) {\n                errorDiv.appendChild(document.createElement(\"br\"));\n                errorDiv.appendChild(linkElement);\n              }\n            } else {\n              // Set up polling to check when the PayPal window is closed\n              const pollTimer = setInterval(() => {\n                if (paypalWindow.closed) {\n                  clearInterval(pollTimer);\n\n                  // When PayPal window is closed, check if payment was completed\n                  // We'll do this by attempting to process the payment\n                  processPayment(checkoutUsername, orderId);\n                }\n              }, 200);\n\n              // Also set a timeout to stop polling after 15 minutes (same as reservation timeout)\n              setTimeout(() => {\n                clearInterval(pollTimer);\n                if (!paypalWindow.closed) {\n                  paypalWindow.close();\n                }\n                setCheckoutError(\n                  \"Payment session timed out. Please try again.\"\n                );\n                setIsProcessing(false);\n              }, 15 * 60 * 1000); // 15 minutes\n            }\n          } else {\n            throw new Error(\"No PayPal order ID returned from server\");\n          }\n        } else {\n          throw new Error(\n            createOrderResponse.data.message || \"Failed to create PayPal order\"\n          );\n        }\n      } else {\n        throw new Error(\"Sorry, items were sold out\");\n      }\n    } catch (error) {\n      console.error(\"Checkout error:\", error);\n\n      let errorMessage = \"An error occurred during checkout\";\n\n      if (error.response) {\n        // The server responded with an error status code\n        console.error(\"Error response:\", error.response);\n\n        if (error.response.data && error.response.data.error) {\n          // If the server sent a specific error message\n          errorMessage = error.response.data.error;\n        } else if (error.response.data && error.response.data.message) {\n          // Alternative error message format\n          errorMessage = error.response.data.message;\n        } else {\n          // Generic error with status code\n          errorMessage = `Server error (${error.response.status}): Please try again later`;\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage =\n          \"No response received from server. Please check your connection.\";\n      } else {\n        // Something happened in setting up the request\n        errorMessage = error.message || \"Unknown error occurred\";\n      }\n\n      setCheckoutError(errorMessage);\n      clearCheckoutTimer();\n      setIsProcessing(false);\n    }\n  };\n\n  // Function to process payment after PayPal window is closed\n  const processPayment = async (checkoutUsername, orderId) => {\n    try {\n      setIsProcessing(true);\n\n      console.log(\n        \"Processing payment for:\",\n        checkoutUsername,\n        \"with PayPal order ID:\",\n        orderId\n      );\n\n      const processResponse = await axios.post(\n        `/api/checkout/process-payment`,\n        {\n          username: checkoutUsername,\n          paypalOrderId: orderId,\n        }\n      );\n\n      if (processResponse.data.success) {\n        // Payment successfully processed\n        clearCheckoutTimer(); // Clear the reservation timer\n\n        // Clear the cart in localStorage and state\n        localStorage.removeItem(\"cart\");\n        setCartItems([]);\n\n        alert(\"Payment successful! Thank you for your order.\");\n\n        // Redirect to order confirmation page\n        setTimeout(() => {\n          navigate(\"/CheckoutFinish\", {\n            state: {\n              orderId: processResponse.data.orderId,\n              orderDetails: processResponse.data.orderDetails, // Pass the complete order details\n              // Include any other necessary data\n            },\n            search: `?token=${processResponse.data.orderId}`, // Add the token as a query parameter\n          });\n        }); // Short delay to show success message\n      } else {\n        throw new Error(\n          processResponse.data.message || \"Failed to process payment\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Payment processing error:\", error);\n\n      let errorMessage = \"An error occurred while processing your payment\";\n      if (error.response) {\n        errorMessage = `Server error: ${error.response.status} - ${\n          error.response.data?.message || error.message\n        }`;\n      } else if (error.request) {\n        errorMessage =\n          \"No response received from server. Please check your connection.\";\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n\n      setCheckoutError(errorMessage);\n\n      // Attempt to clean up reservations on error\n      try {\n        await axios.post(\n          `/api/checkout/remove-reservation/${checkoutUsername}`\n        );\n      } catch (cleanupError) {\n        console.error(\"Failed to clean up reservations:\", cleanupError);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Clean up timer when component unmounts\n  useEffect(() => {\n    return () => {\n      clearCheckoutTimer();\n    };\n  }, []);\n\n  // Handle cancellation of checkout\n  const handleCancel = () => {\n    if (window.confirm(\"Are you sure you want to cancel your reservation?\")) {\n      removeReservation();\n      clearCheckoutTimer();\n      navigate(\"/cart\");\n    }\n  };\n\n  return (\n    <>\n      <StepIndicator currentStep={2} />\n      <div className=\"reservations-container\">\n        <h1>Your Reservations</h1>\n\n        {timeLeft && (\n          <div className=\"checkout-timer\">\n            Time remaining: <span className=\"timer\">{formatTime(timeLeft)}</span>\n          </div>\n        )}\n        {checkoutError && <div className=\"error-message\">{checkoutError}</div>}\n        <div className=\"cart-summary\">\n          <h2>Cart Summary</h2>\n          {isLoading ? (\n            <p>Loading cart items...</p>\n          ) : cartItems.length === 0 ? (\n            <p>Your cart is empty</p>\n          ) : (\n            <>\n              <table className=\"cart-table\">\n                <thead>\n                  <tr>\n                    <th>Product</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Subtotal</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cartItems.map((item, index) => {\n                    const productName =\n                      item.productName ||\n                      item.productId?.productName ||\n                      \"Unknown Product\";\n                    const quantity = Number(item.quantity) || 1;\n                    // fetch unit price of products\n                    const unitPrice = item.productId?.productPrice || 0;\n                    // Calculate subtotal of each product\n                    const productSubtotal = Number(unitPrice * quantity).toFixed(2);\n\n                    return (\n                      <tr key={index}>\n                        <td>{productName}</td>\n                        <td>${unitPrice.toFixed(2)}</td>\n                        <td>{quantity}</td>\n                        <td>${productSubtotal}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"3\" className=\"total-label\">\n                      Total:\n                    </td>\n                    <td className=\"total-price\">${totalPrice}</td>\n                  </tr>\n                </tfoot>\n              </table>\n\n              {/* Shipping Information Form */}\n              <div className=\"shipping-form\">\n                <h3>Shipping Information</h3>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Full Name:</label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={shippingInfo.name}\n                    onChange={handleShippingInfoChange}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"address\">Street Address:</label>\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    value={shippingInfo.address}\n                    onChange={handleShippingInfoChange}\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"checkout-actions\">\n                <button\n                  className=\"checkout-button\"\n                  onClick={handleCheckout}\n                  disabled={isProcessing}\n                >\n                  {isProcessing ? \"Processing...\" : \"Proceed to PayPal\"}\n                </button>\n\n                <button\n                  className=\"cancel-button\"\n                  onClick={handleCancel}\n                  disabled={isProcessing}\n                >\n                  Cancel Reservation\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Reservations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}