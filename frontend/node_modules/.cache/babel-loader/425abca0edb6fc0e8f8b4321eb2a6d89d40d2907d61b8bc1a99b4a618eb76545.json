{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Order.jsx\",\n  _s = $RefreshSig$();\n// src/components/Order.jsx\nimport React, { useState, useEffect } from \"react\";\nimport orderService from \"../services/orderService\"; // Service to fetch orders\nimport productService from \"../services/productService\"; // Service to fetch orders\nimport \"./Order.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = username => {\n  _s();\n  const [orders, setOrders] = useState([]); // State to store orders\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  //const [username, setUsername] = useState(null); // State for userId\n  const [token, setToken] = useState(null); // State for token\n  const [allProducts, setAllProducts] = useState([]);\n  const [filterId, setFilterId] = useState(\"\"); // State for filter input\n  const [filteredOrder, setFilteredOrder] = useState(null); // State for filtered order\n  const [statusMessage, setStatusMessage] = useState(\"\"); // State for status\n  const [currentStatusFilter, setCurrentStatusFilter] = useState(\"All\"); // State for status filter\n\n  // useEffect(() => {\n  //   const storedUser = localStorage.getItem(\"user\");\n  //   if (storedUser) {\n  //     const userData = JSON.parse(storedUser);\n  //     console.log(\"User data from local storage:\", userData);\n  //     setUsername(userData.username); // Set username\n  //     setToken(userData.token); // Set token\n  //   } else {\n  //     console.error(\"No user data found in local storage\");\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"Username before API call:\", username.username);\n    console.log(\"Username:\", username); // Log username for debugging\n    console.log(\"Token:\", token); // Log token for debugging\n\n    // Ensure username and token are defined\n    if (username.username) {\n      const fetchOrders = async () => {\n        try {\n          const data = await orderService.getOrdersByUserId(username.username);\n          console.log(\"Fetched orders:\", data);\n          //console.log(\"Check order status:\", data.productId)\n          setOrders(data);\n        } catch (err) {\n          console.error(\"Error fetching orders:\", err.message);\n          setError(err.message || \"Failed to fetch orders\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchOrders(); // Call fetch function\n    } else {\n      setLoading(false); // Stop loading if username/token are not set\n    }\n  }, [username.username]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await productService.getAllProducts();\n        console.log(\"Fetched products:\", productsData); // Debugging\n        console.log(\"Check Products:\", productsData.products);\n\n        // Ensure productsData contains a valid products array\n        if (productsData && Array.isArray(productsData.products)) {\n          //setAllProducts(productsData.products); // Store all products\n          setAllProducts(productsData.products); // Store all products\n        } else {\n          console.error(\"Fetched productsData.products is not an array:\", productsData.products);\n          setAllProducts([]); // Fallback to empty array\n        }\n      } catch (err) {\n        console.error(\"Error fetching products:\", err.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleFilter = async () => {\n    if (!filterId.trim()) {\n      setError(\"Please enter a valid Order ID.\"); // Set an error message\n      return; // Exit the function if the input is empty\n    }\n    try {\n      const order = await orderService.getOrderById(filterId);\n      if (!order) {\n        setError(\"Order not found.\"); // Set error if order is not found\n        setFilteredOrder(null); // Reset filtered order\n        return; // Exit the function\n      }\n      setFilteredOrder(order); // Set the filtered order\n      setError(null); // Reset error state\n    } catch (err) {\n      setError(err.message || \"Failed to fetch order\");\n      setFilteredOrder(null); // Reset filtered order on error\n    }\n  };\n  const handleUpdateStatus = async orderId => {\n    try {\n      const updatedOrder = await orderService.updateOrderStatus(orderId, true); // Set status to true\n\n      setOrders(prevOrders => prevOrders.map(order => order.orderId === updatedOrder.orderId ? updatedOrder : order));\n      setStatusMessage(\"Order status updated successfully!\");\n      console.log('Order Staus:', updatedOrder.products);\n      console.log('Order Staus:', updatedOrder.products[0].status);\n\n      // Update the filtered order if it matches the updated order\n      if (filteredOrder && filteredOrder.orderId === updatedOrder.orderId) {\n        setFilteredOrder(updatedOrder); // Update filtered order with the new status\n        setOrders(updatedOrder);\n      }\n      setStatusMessage(\"Order status updated successfully!\");\n      console.log('Updated Order:', updatedOrder);\n      console.log('Updated Order Order', orders);\n      //console.log('Updated Order Advanced', orders.products[0].productId._id);\n    } catch (err) {\n      setError(err.message || \"Failed to update order status\");\n      setStatusMessage(\"\"); // Clear status message on error\n    }\n  };\n  const toggleStatusFilter = () => {\n    setCurrentStatusFilter(prev => prev === \"Received\" ? \"Shipping\" : \"Received\");\n  };\n  const ErrorPopup = ({\n    message,\n    onClose\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this);\n  };\n  const closePopup = () => {\n    setError(null); // Close the pop-up\n  };\n  const filteredOrders = currentStatusFilter === \"All\" ? orders : orders.filter(order => order.products[0].status === (currentStatusFilter === \"Received\"));\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading orders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 21\n  }, this);\n  if (orders.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No orders found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleStatusFilter,\n      children: currentStatusFilter === \"Received\" ? \"Show Shipping\" : \"Show Received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Order ID\",\n        value: filterId,\n        onChange: e => setFilterId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        disabled: !filterId.trim(),\n        children: \"Get Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      message: error,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), \" \", filteredOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtered-order\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filtered Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", filteredOrder.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", filteredOrder.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", filteredOrder.totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shipping Status: \", filteredOrder.products[0].status ? 'Received' : 'Shipping']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Date: \", new Date(filteredOrder.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredOrder.products.map((product, productIndex) => {\n          const productId = filteredOrder.products[0].productId._id || filteredOrder.products[0].productId;\n          const foundProduct = allProducts.find(p => p._id === productId);\n          console.log(\"Filter Order:\", filteredOrder ? 'Received' : 'Shipping');\n          console.log('Check status:', filteredOrder.products[0].status);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Product Name: \", foundProduct.productName, \" - Quantity: \", product.quantity || 1]\n          }, `${filteredOrder.orderId}-${productIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), filteredOrder.products[0].status === false &&\n      /*#__PURE__*/\n      // Hide button when status is true\n      _jsxDEV(\"div\", {\n        className: \"status-update\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateStatus(filteredOrder.orderId),\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: orders.filter(order => {\n        if (currentStatusFilter === \"All\") return true; // Show all orders\n        return order.products[0].status === (currentStatusFilter === \"Received\"); // Filter by status\n      }).\n      // orders.map((order) => (\n      map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Order ID: \", order.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", order.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", order.totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Shipping Status: \", order.products[0].status ? 'Received' : 'Shipping']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order Date: \", new Date(order.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Products:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.products.map((product, productIndex) => {\n            const productId = order.products[0].productId._id || order.products[0].productId;\n            const foundProduct = allProducts.find(p => p._id === productId);\n            //console.log('Check product Status:',order.products[0].productId._id);\n            console.log('Check All Product productID:', allProducts[0].productID);\n            console.log('Check All Product ._id:', allProducts[0]._id);\n            console.log('Check All Product:', allProducts);\n            console.log('Check Found Product:', foundProduct);\n            console.log('Check Order .products[0].productId', order.products[0].productId._id);\n            console.log('Check Order', order);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Product Name: \", foundProduct.productName, \" - Quantity: \", product.quantity || 1, product.status === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-update\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateStatus(order.orderId),\n                  children: \"Update Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)]\n            }, `${order.orderId}-${productIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, order.orderId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"/FpYCyDzFwv+37cp8gXUMNuq6+I=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","orderService","productService","jsxDEV","_jsxDEV","Order","username","_s","orders","setOrders","loading","setLoading","error","setError","token","setToken","allProducts","setAllProducts","filterId","setFilterId","filteredOrder","setFilteredOrder","statusMessage","setStatusMessage","currentStatusFilter","setCurrentStatusFilter","console","log","fetchOrders","data","getOrdersByUserId","err","message","fetchProducts","productsData","getAllProducts","products","Array","isArray","handleFilter","trim","order","getOrderById","handleUpdateStatus","orderId","updatedOrder","updateOrderStatus","prevOrders","map","status","toggleStatusFilter","prev","ErrorPopup","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","closePopup","filteredOrders","filter","length","type","placeholder","value","onChange","e","target","disabled","userId","totalPrice","toFixed","Date","createdAt","toLocaleString","product","productIndex","productId","_id","foundProduct","find","p","productName","quantity","productID","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Order.jsx"],"sourcesContent":["// src/components/Order.jsx\nimport React, { useState, useEffect } from \"react\";\nimport orderService from \"../services/orderService\"; // Service to fetch orders\nimport productService from \"../services/productService\"; // Service to fetch orders\nimport \"./Order.css\";\n\nconst Order = (username) => {\n  const [orders, setOrders] = useState([]); // State to store orders\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  //const [username, setUsername] = useState(null); // State for userId\n  const [token, setToken] = useState(null); // State for token\n  const [allProducts, setAllProducts] = useState([]);\n  const [filterId, setFilterId] = useState(\"\"); // State for filter input\n  const [filteredOrder, setFilteredOrder] = useState(null); // State for filtered order\n  const [statusMessage, setStatusMessage] = useState(\"\"); // State for status\n  const [currentStatusFilter, setCurrentStatusFilter] = useState(\"All\"); // State for status filter\n\n  // useEffect(() => {\n  //   const storedUser = localStorage.getItem(\"user\");\n  //   if (storedUser) {\n  //     const userData = JSON.parse(storedUser);\n  //     console.log(\"User data from local storage:\", userData);\n  //     setUsername(userData.username); // Set username\n  //     setToken(userData.token); // Set token\n  //   } else {\n  //     console.error(\"No user data found in local storage\");\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"Username before API call:\", username.username);\n    console.log(\"Username:\", username); // Log username for debugging\n    console.log(\"Token:\", token); // Log token for debugging\n\n    // Ensure username and token are defined\n    if (username.username ) {\n      const fetchOrders = async () => {\n          try {\n              const data = await orderService.getOrdersByUserId(username.username);\n              console.log(\"Fetched orders:\", data);\n              //console.log(\"Check order status:\", data.productId)\n              setOrders(data);\n          } catch (err) {\n              console.error(\"Error fetching orders:\", err.message);\n              setError(err.message || \"Failed to fetch orders\");\n          } finally {\n              setLoading(false);\n          }\n      };\n\n      fetchOrders(); // Call fetch function\n  } else {\n      setLoading(false); // Stop loading if username/token are not set\n  }\n}, [username.username]);\n\nuseEffect(() => {\n  const fetchProducts = async () => {\n    \n      try {\n          const productsData = await productService.getAllProducts();\n          console.log(\"Fetched products:\", productsData); // Debugging\n          console.log(\"Check Products:\", productsData.products)\n\n          // Ensure productsData contains a valid products array\n          if (productsData && Array.isArray(productsData.products)) {\n              //setAllProducts(productsData.products); // Store all products\n              setAllProducts(productsData.products); // Store all products\n\n          } else {\n              console.error(\"Fetched productsData.products is not an array:\", productsData.products);\n              setAllProducts([]); // Fallback to empty array\n          }\n      } catch (err) {\n          console.error(\"Error fetching products:\", err.message);\n      }\n  \n  };\n  fetchProducts();\n\n}, []);\n\nconst handleFilter = async () => {\n  if (!filterId.trim()) {\n    setError(\"Please enter a valid Order ID.\"); // Set an error message\n    return; // Exit the function if the input is empty\n  }\n  try {\n    const order = await orderService.getOrderById(filterId);\n    if (!order) {\n      setError(\"Order not found.\"); // Set error if order is not found\n      setFilteredOrder(null); // Reset filtered order\n      return; // Exit the function\n    }\n    setFilteredOrder(order); // Set the filtered order\n    setError(null); // Reset error state\n  } catch (err) {\n    setError(err.message || \"Failed to fetch order\");\n    setFilteredOrder(null); // Reset filtered order on error\n  }\n};\nconst handleUpdateStatus = async (orderId) => {\n  try {\n    const updatedOrder = await orderService.updateOrderStatus(orderId, true); // Set status to true\n    \n    setOrders((prevOrders) =>\n      prevOrders.map((order) => (order.orderId === updatedOrder.orderId ? updatedOrder : order))\n    );\n    setStatusMessage(\"Order status updated successfully!\");\n    console.log('Order Staus:', updatedOrder.products);\n    console.log('Order Staus:', updatedOrder.products[0].status); \n\n    // Update the filtered order if it matches the updated order\n    if (filteredOrder && filteredOrder.orderId === updatedOrder.orderId) {\n      setFilteredOrder(updatedOrder); // Update filtered order with the new status\n      setOrders(updatedOrder);\n    }\n    setStatusMessage(\"Order status updated successfully!\");\n    console.log('Updated Order:', updatedOrder);\n    console.log('Updated Order Order', orders);\n    //console.log('Updated Order Advanced', orders.products[0].productId._id);\n    \n  } catch (err) {\n    setError(err.message || \"Failed to update order status\");\n    setStatusMessage(\"\"); // Clear status message on error\n  }\n};\n\nconst toggleStatusFilter = () => {\n  setCurrentStatusFilter((prev) => (prev === \"Received\" ? \"Shipping\" : \"Received\"));\n};\n\nconst ErrorPopup = ({ message, onClose }) => {\n  return (\n    <div className=\"error-popup\">\n      <div className=\"popup-content\">\n        <p>{message}</p>\n        <button onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nconst closePopup = () => {\n  setError(null); // Close the pop-up\n};\n\nconst filteredOrders = currentStatusFilter === \"All\"\n  ? orders\n  : orders.filter(order => order.products[0].status === (currentStatusFilter === \"Received\"));\n\n  if (loading) return <p>Loading orders...</p>;\n  if (error) return <p className=\"error-message\">{error}</p>;\n  if (orders.length === 0) return <p>No orders found</p>;\n\n  return (\n    <div className=\"order-container\">\n      <h1>Order History</h1>\n      {/* Status Filter Button */}\n      <button onClick={toggleStatusFilter}>\n        {currentStatusFilter === \"Received\" ? \"Show Shipping\" : \"Show Received\"}\n      </button>\n      {/* Filter Section */}\n      <div className=\"filter-section\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter Order ID\"\n          value={filterId}\n          onChange={(e) => setFilterId(e.target.value)}\n        />\n        <button onClick={handleFilter}\n                disabled={!filterId.trim()}>Get Order</button>\n      </div>\n      {error && <ErrorPopup message={error} onClose={closePopup} />} {/* Display error pop-up */}\n      {filteredOrder ? (\n        <div className=\"filtered-order\">\n          <h2>Filtered Order Details</h2>\n          <p>Order ID: {filteredOrder.orderId}</p>\n          <p>User ID: {filteredOrder.userId}</p>\n          <p>Total Price: ${filteredOrder.totalPrice.toFixed(2)}</p>\n          <p>Shipping Status: {filteredOrder.products[0].status? 'Received' : 'Shipping'}</p>\n          <p>Order Date: {new Date(filteredOrder.createdAt).toLocaleString()}</p>\n          <h3>Products:</h3>\n          <ul>\n            {filteredOrder.products.map((product, productIndex) => {\n              const productId = filteredOrder.products[0].productId._id || filteredOrder.products[0].productId;\n              const foundProduct = allProducts.find(p => p._id === productId);\n              console.log(\"Filter Order:\",filteredOrder ? 'Received' : 'Shipping');\n              console.log('Check status:', filteredOrder.products[0].status)\n              return (\n                <li key={`${filteredOrder.orderId}-${productIndex}`}>\n                  Product Name: {foundProduct.productName} - Quantity: {product.quantity || 1}\n                </li>\n              );\n            })}\n          </ul>\n          {filteredOrder.products[0].status === false && ( // Hide button when status is true\n            <div className=\"status-update\">\n              <button onClick={() => handleUpdateStatus(filteredOrder.orderId)}>Update Status</button>\n            </div>\n          )}\n          \n          {statusMessage && <p className=\"status-message\">{statusMessage}</p>}\n        </div>\n      ) : (\n      <div className=\"order-list\">\n        {\n        orders.filter(order => {\n          if (currentStatusFilter === \"All\") return true; // Show all orders\n          return order.products[0].status === (currentStatusFilter === \"Received\"); // Filter by status\n        }).\n        // orders.map((order) => (\n        map((order) => (\n          <div key={order.orderId} className=\"order-card\">\n            {/* Order details */}\n            <h2>Order ID: {order.orderId}</h2>\n            <p>User ID: {order.userId}</p>\n            <p>Total Price: ${order.totalPrice.toFixed(2)}</p>\n            <p>Shipping Status: {order.products[0].status ? 'Received' : 'Shipping'}</p>\n            <p>Order Date: {new Date(order.createdAt).toLocaleString()}</p>\n\n            {/* List of products */}\n            <h3>Products:</h3>\n            <ul>  \n            {order.products.map((product, productIndex) => {  \n              const productId = order.products[0].productId._id || order.products[0].productId;\n              const foundProduct = allProducts.find(p => p._id === productId);\n              //console.log('Check product Status:',order.products[0].productId._id);\n              console.log('Check All Product productID:',allProducts[0].productID);\n              console.log('Check All Product ._id:',allProducts[0]._id);\n              console.log('Check All Product:',allProducts);\n              console.log('Check Found Product:',foundProduct);\n              console.log('Check Order .products[0].productId', order.products[0].productId._id);\n              console.log('Check Order', order);\n              \n              return (\n                <li key={`${order.orderId}-${productIndex}`}>\n                  Product Name: {foundProduct.productName} - Quantity: {product.quantity || 1}\n                  {/* Product Name: {order.products[0].productId.productName} - Quantity: ${product.quantity || 1} */}\n                  {/* Show button for each product if the order status is false   .products[0].productId.productName */}\n                  {product.status === false && (\n                    <div className=\"status-update\">\n                      <button onClick={() => handleUpdateStatus(order.orderId)}>Update Status</button>\n                    </div>\n                  )}\n                </li>\n              );\n        })}\n            </ul>\n          </div>\n        ))}\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default Order;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}