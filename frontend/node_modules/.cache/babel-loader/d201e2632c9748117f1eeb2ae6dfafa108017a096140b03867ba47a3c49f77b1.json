{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dunca\\\\OneDrive\\\\\\u684C\\u9762\\\\CSCI 3100 Clone Store\\\\csci3100_D7\\\\frontend\\\\src\\\\components\\\\Order.jsx\",\n  _s = $RefreshSig$();\n// src/components/Order.jsx\nimport React, { useState, useEffect } from \"react\";\nimport orderService from \"../services/orderService\"; // Service to fetch orders\nimport productService from \"../services/productService\"; // Service to fetch orders\nimport \"./Order.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = () => {\n  _s();\n  const [orders, setOrders] = useState([]); // State to store orders\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const [username, setUsername] = useState(null); // State for userId\n  const [token, setToken] = useState(null); // State for token\n  const [allProducts, setAllProducts] = useState([]);\n  const [filterId, setFilterId] = useState(\"\"); // State for filter input\n  const [filteredOrder, setFilteredOrder] = useState(null); // State for filtered order\n  const [statusMessage, setStatusMessage] = useState(\"\"); // State for status\n  const [currentStatusFilter, setCurrentStatusFilter] = useState(\"All\"); // State for status filter\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const userData = JSON.parse(storedUser);\n      console.log(\"User data from local storage:\", userData);\n      setUsername(userData.username); // Set username\n      setToken(userData.token); // Set token\n    } else {\n      console.error(\"No user data found in local storage\");\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"Username before API call:\", username);\n    console.log(\"Username:\", username); // Log username for debugging\n    console.log(\"Token:\", token); // Log token for debugging\n\n    // Ensure username and token are defined\n    if (username && token) {\n      const fetchOrders = async () => {\n        try {\n          const data = await orderService.getOrdersByUserId(username);\n          console.log(\"Fetched orders:\", data);\n          //console.log(\"Check order status:\", data.productId)\n          setOrders(data);\n        } catch (err) {\n          console.error(\"Error fetching orders:\", err.message);\n          setError(err.message || \"Failed to fetch orders\");\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchOrders(); // Call fetch function\n    } else {\n      setLoading(false); // Stop loading if username/token are not set\n    }\n  }, [username, token]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await productService.getAllProducts();\n        console.log(\"Fetched products:\", productsData); // Debugging\n        console.log(\"Check Products:\", productsData.products);\n\n        // Ensure productsData contains a valid products array\n        if (productsData && Array.isArray(productsData.products)) {\n          //setAllProducts(productsData.products); // Store all products\n          setAllProducts(productsData.products); // Store all products\n        } else {\n          console.error(\"Fetched productsData.products is not an array:\", productsData.products);\n          setAllProducts([]); // Fallback to empty array\n        }\n      } catch (err) {\n        console.error(\"Error fetching products:\", err.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleFilter = async () => {\n    if (!filterId.trim()) {\n      setError(\"Please enter a valid Order ID.\"); // Set an error message\n      return; // Exit the function if the input is empty\n    }\n    try {\n      const order = await orderService.getOrderById(filterId);\n      if (!order) {\n        setError(\"Order not found.\"); // Set error if order is not found\n        setFilteredOrder(null); // Reset filtered order\n        return; // Exit the function\n      }\n      setFilteredOrder(order); // Set the filtered order\n      setError(null); // Reset error state\n    } catch (err) {\n      setError(err.message || \"Failed to fetch order\");\n      setFilteredOrder(null); // Reset filtered order on error\n    }\n  };\n  const handleUpdateStatus = async orderId => {\n    try {\n      const updatedOrder = await orderService.updateOrderStatus(orderId, true); // Set status to true\n\n      setOrders(prevOrders => prevOrders.map(order => order.orderId === updatedOrder.orderId ? updatedOrder : order));\n      setStatusMessage(\"Order status updated successfully!\");\n      console.log('Order Staus:', updatedOrder.products);\n      console.log('Order Staus:', updatedOrder.products[0].status);\n\n      // Update the filtered order if it matches the updated order\n      if (filteredOrder && filteredOrder.orderId === updatedOrder.orderId) {\n        setFilteredOrder(updatedOrder); // Update filtered order with the new status\n        setOrders(updatedOrder);\n      }\n      setStatusMessage(\"Order status updated successfully!\");\n      console.log('Updated Order:', updatedOrder);\n      console.log('Updated Order Order', orders);\n      //console.log('Updated Order Advanced', orders.products[0].productId._id);\n    } catch (err) {\n      setError(err.message || \"Failed to update order status\");\n      setStatusMessage(\"\"); // Clear status message on error\n    }\n  };\n  const toggleStatusFilter = () => {\n    setCurrentStatusFilter(prev => prev === \"Received\" ? \"Shipping\" : \"Received\");\n  };\n  const ErrorPopup = ({\n    message,\n    onClose\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this);\n  };\n  const closePopup = () => {\n    setError(null); // Close the pop-up\n  };\n  const filteredOrders = currentStatusFilter === \"All\" ? orders : orders.filter(order => order.products[0].status === (currentStatusFilter === \"Received\"));\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading orders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 21\n  }, this);\n  if (orders.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No orders found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleStatusFilter,\n      children: currentStatusFilter === \"Received\" ? \"Show Shipping\" : \"Show Received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Order ID\",\n        value: filterId,\n        onChange: e => setFilterId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        disabled: !filterId.trim(),\n        children: \"Get Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorPopup, {\n      message: error,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), \" \", filteredOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtered-order\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filtered Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", filteredOrder.orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", filteredOrder.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", filteredOrder.totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shipping Status: \", filteredOrder.products[0].status ? 'Received' : 'Shipping']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Date: \", new Date(filteredOrder.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredOrder.products.map((product, productIndex) => {\n          const productId = filteredOrder.products[0].productId._id || filteredOrder.products[0].productId;\n          const foundProduct = allProducts.find(p => p._id === productId);\n          console.log(\"Filter Order:\", filteredOrder ? 'Received' : 'Shipping');\n          console.log('Check status:', filteredOrder.products[0].status);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Product Name: \", foundProduct.productName, \" - Quantity: \", product.quantity || 1]\n          }, `${filteredOrder.orderId}-${productIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), filteredOrder.products[0].status === false &&\n      /*#__PURE__*/\n      // Hide button when status is true\n      _jsxDEV(\"div\", {\n        className: \"status-update\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateStatus(filteredOrder.orderId),\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: orders.filter(order => {\n        if (currentStatusFilter === \"All\") return true; // Show all orders\n        return order.products[0].status === (currentStatusFilter === \"Received\"); // Filter by status\n      }).\n      // orders.map((order) => (\n      map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Order ID: \", order.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", order.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", order.totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Shipping Status: \", order.products[0].status ? 'Received' : 'Shipping']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order Date: \", new Date(order.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Products:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.products.map((product, productIndex) => {\n            const productId = order.products[0].productId._id || order.products[0].productId;\n            const foundProduct = allProducts.find(p => p._id === productId);\n            //console.log('Check product Status:',order.products[0].productId._id);\n            console.log('Check All Product productID:', allProducts[0].productID);\n            console.log('Check All Product ._id:', allProducts[0]._id);\n            console.log('Check All Product:', allProducts);\n            console.log('Check Found Product:', foundProduct);\n            console.log('Check Order .products[0].productId', order.products[0].productId._id);\n            console.log('Check Order', order);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Product Name: \", foundProduct.productName, \" - Quantity: \", product.quantity || 1, product.status === false && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-update\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateStatus(order.orderId),\n                  children: \"Update Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)]\n            }, `${order.orderId}-${productIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, order.orderId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"CvIyflNIeUhIErVcCJuGujSGRfE=\");\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","orderService","productService","jsxDEV","_jsxDEV","Order","_s","orders","setOrders","loading","setLoading","error","setError","username","setUsername","token","setToken","allProducts","setAllProducts","filterId","setFilterId","filteredOrder","setFilteredOrder","statusMessage","setStatusMessage","currentStatusFilter","setCurrentStatusFilter","storedUser","localStorage","getItem","userData","JSON","parse","console","log","fetchOrders","data","getOrdersByUserId","err","message","fetchProducts","productsData","getAllProducts","products","Array","isArray","handleFilter","trim","order","getOrderById","handleUpdateStatus","orderId","updatedOrder","updateOrderStatus","prevOrders","map","status","toggleStatusFilter","prev","ErrorPopup","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","closePopup","filteredOrders","filter","length","type","placeholder","value","onChange","e","target","disabled","userId","totalPrice","toFixed","Date","createdAt","toLocaleString","product","productIndex","productId","_id","foundProduct","find","p","productName","quantity","productID","_c","$RefreshReg$"],"sources":["C:/Users/Dunca/OneDrive/桌面/CSCI 3100 Clone Store/csci3100_D7/frontend/src/components/Order.jsx"],"sourcesContent":["// src/components/Order.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport orderService from \"../services/orderService\"; // Service to fetch orders\r\nimport productService from \"../services/productService\"; // Service to fetch orders\r\nimport \"./Order.css\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]); // State to store orders\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n  const [username, setUsername] = useState(null); // State for userId\r\n  const [token, setToken] = useState(null); // State for token\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [filterId, setFilterId] = useState(\"\"); // State for filter input\r\n  const [filteredOrder, setFilteredOrder] = useState(null); // State for filtered order\r\n  const [statusMessage, setStatusMessage] = useState(\"\"); // State for status\r\n  const [currentStatusFilter, setCurrentStatusFilter] = useState(\"All\"); // State for status filter\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      const userData = JSON.parse(storedUser);\r\n      console.log(\"User data from local storage:\", userData);\r\n      setUsername(userData.username); // Set username\r\n      setToken(userData.token); // Set token\r\n    } else {\r\n      console.error(\"No user data found in local storage\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Username before API call:\", username);\r\n    console.log(\"Username:\", username); // Log username for debugging\r\n    console.log(\"Token:\", token); // Log token for debugging\r\n\r\n    // Ensure username and token are defined\r\n    if (username && token) {\r\n      const fetchOrders = async () => {\r\n          try {\r\n              const data = await orderService.getOrdersByUserId(username);\r\n              console.log(\"Fetched orders:\", data);\r\n              //console.log(\"Check order status:\", data.productId)\r\n              setOrders(data);\r\n          } catch (err) {\r\n              console.error(\"Error fetching orders:\", err.message);\r\n              setError(err.message || \"Failed to fetch orders\");\r\n          } finally {\r\n              setLoading(false);\r\n          }\r\n      };\r\n\r\n      fetchOrders(); // Call fetch function\r\n  } else {\r\n      setLoading(false); // Stop loading if username/token are not set\r\n  }\r\n}, [username, token]);\r\n\r\nuseEffect(() => {\r\n  const fetchProducts = async () => {\r\n    \r\n      try {\r\n          const productsData = await productService.getAllProducts();\r\n          console.log(\"Fetched products:\", productsData); // Debugging\r\n          console.log(\"Check Products:\", productsData.products)\r\n\r\n          // Ensure productsData contains a valid products array\r\n          if (productsData && Array.isArray(productsData.products)) {\r\n              //setAllProducts(productsData.products); // Store all products\r\n              setAllProducts(productsData.products); // Store all products\r\n\r\n          } else {\r\n              console.error(\"Fetched productsData.products is not an array:\", productsData.products);\r\n              setAllProducts([]); // Fallback to empty array\r\n          }\r\n      } catch (err) {\r\n          console.error(\"Error fetching products:\", err.message);\r\n      }\r\n  \r\n  };\r\n  fetchProducts();\r\n\r\n}, []);\r\n\r\nconst handleFilter = async () => {\r\n  if (!filterId.trim()) {\r\n    setError(\"Please enter a valid Order ID.\"); // Set an error message\r\n    return; // Exit the function if the input is empty\r\n  }\r\n  try {\r\n    const order = await orderService.getOrderById(filterId);\r\n    if (!order) {\r\n      setError(\"Order not found.\"); // Set error if order is not found\r\n      setFilteredOrder(null); // Reset filtered order\r\n      return; // Exit the function\r\n    }\r\n    setFilteredOrder(order); // Set the filtered order\r\n    setError(null); // Reset error state\r\n  } catch (err) {\r\n    setError(err.message || \"Failed to fetch order\");\r\n    setFilteredOrder(null); // Reset filtered order on error\r\n  }\r\n};\r\nconst handleUpdateStatus = async (orderId) => {\r\n  try {\r\n    const updatedOrder = await orderService.updateOrderStatus(orderId, true); // Set status to true\r\n    \r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) => (order.orderId === updatedOrder.orderId ? updatedOrder : order))\r\n    );\r\n    setStatusMessage(\"Order status updated successfully!\");\r\n    console.log('Order Staus:', updatedOrder.products);\r\n    console.log('Order Staus:', updatedOrder.products[0].status); \r\n\r\n    // Update the filtered order if it matches the updated order\r\n    if (filteredOrder && filteredOrder.orderId === updatedOrder.orderId) {\r\n      setFilteredOrder(updatedOrder); // Update filtered order with the new status\r\n      setOrders(updatedOrder);\r\n    }\r\n    setStatusMessage(\"Order status updated successfully!\");\r\n    console.log('Updated Order:', updatedOrder);\r\n    console.log('Updated Order Order', orders);\r\n    //console.log('Updated Order Advanced', orders.products[0].productId._id);\r\n    \r\n  } catch (err) {\r\n    setError(err.message || \"Failed to update order status\");\r\n    setStatusMessage(\"\"); // Clear status message on error\r\n  }\r\n};\r\n\r\nconst toggleStatusFilter = () => {\r\n  setCurrentStatusFilter((prev) => (prev === \"Received\" ? \"Shipping\" : \"Received\"));\r\n};\r\n\r\nconst ErrorPopup = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"error-popup\">\r\n      <div className=\"popup-content\">\r\n        <p>{message}</p>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst closePopup = () => {\r\n  setError(null); // Close the pop-up\r\n};\r\n\r\nconst filteredOrders = currentStatusFilter === \"All\"\r\n  ? orders\r\n  : orders.filter(order => order.products[0].status === (currentStatusFilter === \"Received\"));\r\n\r\n  if (loading) return <p>Loading orders...</p>;\r\n  if (error) return <p className=\"error-message\">{error}</p>;\r\n  if (orders.length === 0) return <p>No orders found</p>;\r\n\r\n  return (\r\n    <div className=\"order-container\">\r\n      <h1>Order History</h1>\r\n      {/* Status Filter Button */}\r\n      <button onClick={toggleStatusFilter}>\r\n        {currentStatusFilter === \"Received\" ? \"Show Shipping\" : \"Show Received\"}\r\n      </button>\r\n      {/* Filter Section */}\r\n      <div className=\"filter-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Order ID\"\r\n          value={filterId}\r\n          onChange={(e) => setFilterId(e.target.value)}\r\n        />\r\n        <button onClick={handleFilter}\r\n                disabled={!filterId.trim()}>Get Order</button>\r\n      </div>\r\n      {error && <ErrorPopup message={error} onClose={closePopup} />} {/* Display error pop-up */}\r\n      {filteredOrder ? (\r\n        <div className=\"filtered-order\">\r\n          <h2>Filtered Order Details</h2>\r\n          <p>Order ID: {filteredOrder.orderId}</p>\r\n          <p>User ID: {filteredOrder.userId}</p>\r\n          <p>Total Price: ${filteredOrder.totalPrice.toFixed(2)}</p>\r\n          <p>Shipping Status: {filteredOrder.products[0].status? 'Received' : 'Shipping'}</p>\r\n          <p>Order Date: {new Date(filteredOrder.createdAt).toLocaleString()}</p>\r\n          <h3>Products:</h3>\r\n          <ul>\r\n            {filteredOrder.products.map((product, productIndex) => {\r\n              const productId = filteredOrder.products[0].productId._id || filteredOrder.products[0].productId;\r\n              const foundProduct = allProducts.find(p => p._id === productId);\r\n              console.log(\"Filter Order:\",filteredOrder ? 'Received' : 'Shipping');\r\n              console.log('Check status:', filteredOrder.products[0].status)\r\n              return (\r\n                <li key={`${filteredOrder.orderId}-${productIndex}`}>\r\n                  Product Name: {foundProduct.productName} - Quantity: {product.quantity || 1}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {filteredOrder.products[0].status === false && ( // Hide button when status is true\r\n            <div className=\"status-update\">\r\n              <button onClick={() => handleUpdateStatus(filteredOrder.orderId)}>Update Status</button>\r\n            </div>\r\n          )}\r\n          \r\n          {statusMessage && <p className=\"status-message\">{statusMessage}</p>}\r\n        </div>\r\n      ) : (\r\n      <div className=\"order-list\">\r\n        {\r\n        orders.filter(order => {\r\n          if (currentStatusFilter === \"All\") return true; // Show all orders\r\n          return order.products[0].status === (currentStatusFilter === \"Received\"); // Filter by status\r\n        }).\r\n        // orders.map((order) => (\r\n        map((order) => (\r\n          <div key={order.orderId} className=\"order-card\">\r\n            {/* Order details */}\r\n            <h2>Order ID: {order.orderId}</h2>\r\n            <p>User ID: {order.userId}</p>\r\n            <p>Total Price: ${order.totalPrice.toFixed(2)}</p>\r\n            <p>Shipping Status: {order.products[0].status ? 'Received' : 'Shipping'}</p>\r\n            <p>Order Date: {new Date(order.createdAt).toLocaleString()}</p>\r\n\r\n            {/* List of products */}\r\n            <h3>Products:</h3>\r\n            <ul>  \r\n            {order.products.map((product, productIndex) => {  \r\n              const productId = order.products[0].productId._id || order.products[0].productId;\r\n              const foundProduct = allProducts.find(p => p._id === productId);\r\n              //console.log('Check product Status:',order.products[0].productId._id);\r\n              console.log('Check All Product productID:',allProducts[0].productID);\r\n              console.log('Check All Product ._id:',allProducts[0]._id);\r\n              console.log('Check All Product:',allProducts);\r\n              console.log('Check Found Product:',foundProduct);\r\n              console.log('Check Order .products[0].productId', order.products[0].productId._id);\r\n              console.log('Check Order', order);\r\n              \r\n              return (\r\n                <li key={`${order.orderId}-${productIndex}`}>\r\n                  Product Name: {foundProduct.productName} - Quantity: {product.quantity || 1}\r\n                  {/* Product Name: {order.products[0].productId.productName} - Quantity: ${product.quantity || 1} */}\r\n                  {/* Show button for each product if the order status is false   .products[0].productId.productName */}\r\n                  {product.status === false && (\r\n                    <div className=\"status-update\">\r\n                      <button onClick={() => handleUpdateStatus(order.orderId)}>Update Status</button>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n              );\r\n        })}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}