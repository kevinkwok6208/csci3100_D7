{"ast":null,"code":"// src/services/authService.js\n\n// Use relative URL since proxy is configured in package.json\nconst API_BASE_URL = '/api/auth';\nconst authService = {\n  // Login function\n  async login(usernameOrEmail, password) {\n    console.log(`Attempting to login with ${usernameOrEmail}`);\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usernameOrEmail,\n          password\n        }),\n        credentials: 'include' // Important for cookies\n      });\n      console.log('Response status:', response.status);\n      const data = await response.json();\n      console.log('Response data:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      return {\n        username: data.username,\n        isadmin: data.isadmin,\n        token: data.token\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  // Register function\n  async register(username, email, password) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  // Logout function\n  async logout() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/logout`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Logout failed');\n      }\n      return data;\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    }\n  },\n  // Check authentication status\n  async checkAuth() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/check-auth`, {\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication check failed');\n      }\n      return data;\n    } catch (error) {\n      console.error('Auth check error:', error);\n      throw error;\n    }\n  },\n  async verifyEmail(email, otp) {\n    try {\n      console.log(\"Sending email and OTP for verification:\", {\n        email,\n        otp\n      }); // Debugging log\n\n      const response = await fetch(`${API_BASE_URL}/verify-email`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        }) // Ensure both values are included\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"OTP verification failed\");\n      }\n      return data;\n    } catch (error) {\n      console.error(\"OTP Verification error:\", error);\n      throw error;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["API_BASE_URL","authService","login","usernameOrEmail","password","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","status","data","json","ok","Error","message","username","isadmin","token","error","register","email","logout","checkAuth","verifyEmail","otp"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\n\r\n// Use relative URL since proxy is configured in package.json\r\nconst API_BASE_URL = '/api/auth';\r\n\r\nconst authService = {\r\n  // Login function\r\n  async login(usernameOrEmail, password) {\r\n    console.log(`Attempting to login with ${usernameOrEmail}`);\r\n    \r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ usernameOrEmail, password }),\r\n        credentials: 'include' // Important for cookies\r\n      });\r\n      \r\n      console.log('Response status:', response.status);\r\n      \r\n      const data = await response.json();\r\n      console.log('Response data:', data);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n      \r\n      return {\r\n        username: data.username,\r\n        isadmin: data.isadmin,\r\n        token: data.token,\r\n      };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Register function\r\n  async register(username, email, password) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Logout function\r\n  async logout() {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/logout`, {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Logout failed');\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Check authentication status\r\n  async checkAuth() {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/check-auth`, {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Authentication check failed');\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async verifyEmail(email, otp) {\r\n    try {\r\n      console.log(\"Sending email and OTP for verification:\", { email, otp }); // Debugging log\r\n  \r\n      const response = await fetch(`${API_BASE_URL}/verify-email`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, otp }), // Ensure both values are included\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"OTP verification failed\");\r\n      }\r\n  \r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"OTP Verification error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,YAAY,GAAG,WAAW;AAEhC,MAAMC,WAAW,GAAG;EAClB;EACA,MAAMC,KAAKA,CAACC,eAAe,EAAEC,QAAQ,EAAE;IACrCC,OAAO,CAACC,GAAG,CAAC,4BAA4BH,eAAe,EAAE,CAAC;IAE1D,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,QAAQ,EAAE;QACpDS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,eAAe;UAAEC;QAAS,CAAC,CAAC;QACnDU,WAAW,EAAE,SAAS,CAAC;MACzB,CAAC,CAAC;MAEFT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACQ,MAAM,CAAC;MAEhD,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEU,IAAI,CAAC;MAEnC,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;MACjD;MAEA,OAAO;QACLC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBC,OAAO,EAAEN,IAAI,CAACM,OAAO;QACrBC,KAAK,EAAEP,IAAI,CAACO;MACd,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMC,QAAQA,CAACJ,QAAQ,EAAEK,KAAK,EAAEtB,QAAQ,EAAE;IACxC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,WAAW,EAAE;QACvDS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEQ,QAAQ;UAAEK,KAAK;UAAEtB;QAAS,CAAC;MACpD,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;MACxD;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMG,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,SAAS,EAAE;QACrDS,MAAM,EAAE,MAAM;QACdK,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAME,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,eAAe,CAAC;MAClD;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMI,SAASA,CAAA,EAAG;IAChB,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,aAAa,EAAE;QACzDc,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAME,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;MAChE;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,WAAWA,CAACH,KAAK,EAAEI,GAAG,EAAE;IAC5B,IAAI;MACFzB,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE;QAAEoB,KAAK;QAAEI;MAAI,CAAC,CAAC,CAAC,CAAC;;MAExE,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,eAAe,EAAE;QAC3DS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEa,KAAK;UAAEI;QAAI,CAAC,CAAC,CAAE;MACxC,CAAC,CAAC;MAEF,MAAMd,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,yBAAyB,CAAC;MAC5D;MAEA,OAAOJ,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAevB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}