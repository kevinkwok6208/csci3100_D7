{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/ProductManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport productService from \"../services/productService\"; // Corrected import path\nimport './ProductManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductManagement = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [addFileError, setAddFileError] = useState(null);\n  const [addingProduct, setAddingProduct] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n  const fileInputRef = useRef(null);\n  const [editingProductId, setEditingProductId] = useState(null); // Track the product being edited\n  const [uploadError, setUploadError] = useState(''); // State for upload error message\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [addLoading, setAddLoading] = useState(false);\n  const [newProduct, setNewProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n  const [addProduct, setAddProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const data = await productService.getAllProducts();\n        setProducts(Array.isArray(data) ? data : data.products || []);\n      } catch (err) {\n        console.error(\"Error fetching products:\", err);\n        setError(err.message || \"Failed to fetch products.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    async function fetchCategories() {\n      try {\n        setCategoriesLoading(true);\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        console.log('Categories data:', data); // Debug log\n\n        // Extract the categories array from the response\n        if (data && data.success && Array.isArray(data.categories)) {\n          setCategories(data.categories);\n        } else {\n          setCategories([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching categories:\", err);\n        setCategories([]);\n      } finally {\n        setCategoriesLoading(false);\n      }\n    }\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  const handleDelete = async productId => {\n    try {\n      // Call the delete API\n      const response = await productService.deleteProduct(productId);\n\n      // Instead of filtering out the product, fetch the updated product list\n      const data = await productService.getAllProducts();\n      setProducts(Array.isArray(data) ? data : data.products || []);\n\n      // Reset editing state if needed\n      if (editingProductId === productId) {\n        setEditingProductId(null);\n      }\n    } catch (err) {\n      console.error(\"Error deleting product:\", err);\n      setError(err.message || \"Failed to delete product.\");\n    }\n  };\n  const handleUpdate = async productId => {\n    setUpdateLoading(true);\n    try {\n      // First, check if category is being updated\n      const originalProduct = products.find(p => p.productID === productId);\n      const originalCategoryName = originalProduct.category ? originalProduct.category.name : '';\n\n      // If category name has changed, update it using the dedicated endpoint\n      if (newProduct.categoryName && newProduct.categoryName !== originalCategoryName) {\n        await productService.updateCategory(productId, newProduct.categoryName);\n      }\n\n      // Create a copy of newProduct without categoryName for the general update\n      const productDataForUpdate = {\n        ...newProduct\n      };\n      delete productDataForUpdate.categoryName; // Remove categoryName as it's handled separately\n\n      // Then update the rest of the product data\n      const response = await productService.updateProduct(productId, productDataForUpdate);\n\n      // Fetch the updated product to ensure we have the latest data\n      const updatedProductResponse = await productService.getProductById(productId);\n      const updatedProduct = updatedProductResponse.product;\n\n      // Update the products list with the updated product\n      setProducts(products.map(product => product.productID === productId ? updatedProduct : product));\n      setEditingProductId(null); // Reset editing state\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error updating product:\", err);\n      setError(err.message || \"Failed to update product.\");\n    }\n    setUpdateLoading(false);\n  };\n  const handleEdit = product => {\n    setNewProduct({\n      productID: product.productID,\n      productName: product.productName,\n      productDescription: product.productDescription,\n      productPrice: product.productPrice,\n      productStorage: product.productStorage,\n      categoryName: product.category ? product.category.name : '',\n      productImage: product.productImages || [] // Reset images array since we can't edit existing images directly\n    });\n    setFileError(null);\n    setEditingProductId(product.productID);\n    setUploadError('');\n  };\n  const handleFileChange = e => {\n    const newFiles = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setFileError(null);\n    if (newFiles.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n    newFiles.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setNewProduct({\n      ...newProduct,\n      productImage: validFiles\n    });\n    // handleUpdate(productId);\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n  const handleFileChangeAdd = e => {\n    const files = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setAddFileError(null);\n    if (files.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setAddFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n    files.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setAddProduct({\n      ...addProduct,\n      productImage: validFiles\n    });\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n  const handleDeleteImage = (imageIndex, isAddForm = false) => {\n    if (isAddForm) {\n      const updatedImages = addProduct.productImage.filter((_, index) => index !== imageIndex);\n      setAddProduct({\n        ...addProduct,\n        productImage: updatedImages\n      });\n    } else {\n      const updatedImages = newProduct.productImage.filter((_, index) => index !== imageIndex);\n      console.log(updatedImages);\n      setNewProduct({\n        ...newProduct,\n        productImage: updatedImages\n      });\n    }\n    setUploadError(''); // Clear error message when an image is deleted\n  };\n  useEffect(() => {\n    console.log('Updated newProduct:', newProduct);\n  }, [newProduct]);\n  const handleAddProduct = async () => {\n    setAddLoading(true);\n    try {\n      const response = await productService.addProduct(addProduct);\n      // Add the new product to the list\n      setProducts([...products, response.product]);\n      // Reset the form\n      setAddProduct({\n        productID: '',\n        productName: '',\n        productDescription: '',\n        productPrice: '',\n        productStorage: '',\n        categoryName: '',\n        productImage: []\n      });\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error adding product:\", err);\n      setError(err.message || \"Failed to add product.\");\n    }\n    setAddLoading(false);\n  };\n  const handleToggleAddProduct = () => {\n    setAddingProduct(prevState => !prevState); // Toggle the state\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleAddProduct,\n      children: addingProduct ? 'Hide Add Product Form' : 'Show Add Product Form'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), addingProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productID,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productID: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productName,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addProduct.productDescription,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productDescription: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: addProduct.productPrice,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productPrice: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: addProduct.productStorage,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          productStorage: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: addProduct.categoryName,\n        onChange: e => setAddProduct({\n          ...addProduct,\n          categoryName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), categories && categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No categories available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/jpeg,image/jpg,image/png\",\n        onChange: handleFileChangeAdd,\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [Array.isArray(addProduct.productImage) && addProduct.productImage.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteImage(index, true),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)), setAddFileError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: addFileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: addLoading ? \"Adding...\" : \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.productStorage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category ? product.category.name : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(product),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(product.productID),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, product.productID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), editingProductId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Update Product: \", newProduct.productName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProduct.productName,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProduct.productDescription,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productDescription: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.productPrice,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productPrice: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.productStorage,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          productStorage: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newProduct.categoryName,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          categoryName: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), categories && categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No categories available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/jpeg,image/jpg,image/png\",\n        onChange: handleFileChange,\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [Array.isArray(newProduct.productImage) && newProduct.productImage.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteImage(index, false),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this)), setFileError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpdate(editingProductId),\n        children: updateLoading ? \"Updating...\" : \"Confirm Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductManagement, \"QX1bbJ72FfM8LXeBnktxX8rwjCg=\");\n_c = ProductManagement;\nexport default ProductManagement;\nvar _c;\n$RefreshReg$(_c, \"ProductManagement\");","map":{"version":3,"names":["React","useRef","useEffect","useState","productService","jsxDEV","_jsxDEV","ProductManagement","_s","products","setProducts","loading","setLoading","error","setError","fileError","setFileError","addFileError","setAddFileError","addingProduct","setAddingProduct","categories","setCategories","categoriesLoading","setCategoriesLoading","fileInputRef","editingProductId","setEditingProductId","uploadError","setUploadError","updateLoading","setUpdateLoading","addLoading","setAddLoading","newProduct","setNewProduct","productID","productName","productDescription","productPrice","productStorage","categoryName","productImage","addProduct","setAddProduct","fetchProducts","data","getAllProducts","Array","isArray","err","console","message","fetchCategories","response","fetch","json","log","success","handleDelete","productId","deleteProduct","handleUpdate","originalProduct","find","p","originalCategoryName","category","name","updateCategory","productDataForUpdate","updateProduct","updatedProductResponse","getProductById","updatedProduct","product","map","handleEdit","productImages","handleFileChange","e","newFiles","from","target","files","validFiles","errorMessage","length","current","value","forEach","file","isValidType","includes","type","isValidSize","size","push","handleFileChangeAdd","handleDeleteImage","imageIndex","isAddForm","updatedImages","filter","_","index","handleAddProduct","handleToggleAddProduct","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange","_id","disabled","multiple","accept","ref","image","src","alt","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/ProductManagement.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport productService from \"../services/productService\"; // Corrected import path\nimport './ProductManagement.css';\n\nconst ProductManagement = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fileError, setFileError] = useState(null);\n  const [addFileError, setAddFileError] = useState(null);\n  const [addingProduct, setAddingProduct] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [categoriesLoading, setCategoriesLoading] = useState(true);\n  const fileInputRef = useRef(null);\n  const [editingProductId, setEditingProductId] = useState(null); // Track the product being edited\n  const [uploadError, setUploadError] = useState(''); // State for upload error message\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [addLoading, setAddLoading] = useState(false);\n  \n  const [newProduct, setNewProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n\n  const [addProduct, setAddProduct] = useState({\n    productID: '',\n    productName: '',\n    productDescription: '',\n    productPrice: '',\n    productStorage: '',\n    categoryName: '',\n    productImage: [] // Keep as is for now to avoid breaking existing code\n  });\n\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const data = await productService.getAllProducts();\n        setProducts(Array.isArray(data) ? data : data.products || []);\n      } catch (err) {\n        console.error(\"Error fetching products:\", err);\n        setError(err.message || \"Failed to fetch products.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    \n    async function fetchCategories() {\n      try {\n        setCategoriesLoading(true);\n        const response = await fetch('/api/categories');\n        const data = await response.json();\n        console.log('Categories data:', data); // Debug log\n        \n        // Extract the categories array from the response\n        if (data && data.success && Array.isArray(data.categories)) {\n          setCategories(data.categories);\n        } else {\n          setCategories([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching categories:\", err);\n        setCategories([]);\n      } finally {\n        setCategoriesLoading(false);\n      }\n    }\n    \n    fetchProducts();\n    fetchCategories();\n  }, []);\n\n  const handleDelete = async (productId) => {\n    try {\n      // Call the delete API\n      const response = await productService.deleteProduct(productId);\n      \n      // Instead of filtering out the product, fetch the updated product list\n      const data = await productService.getAllProducts();\n      setProducts(Array.isArray(data) ? data : data.products || []);\n      \n      // Reset editing state if needed\n      if (editingProductId === productId) {\n        setEditingProductId(null);\n      }\n    } catch (err) {\n      console.error(\"Error deleting product:\", err);\n      setError(err.message || \"Failed to delete product.\");\n    }\n  };\n  \n  \n\n  const handleUpdate = async (productId) => {\n    setUpdateLoading(true);\n    try {\n      // First, check if category is being updated\n      const originalProduct = products.find(p => p.productID === productId);\n      const originalCategoryName = originalProduct.category ? originalProduct.category.name : '';\n      \n      // If category name has changed, update it using the dedicated endpoint\n      if (newProduct.categoryName && newProduct.categoryName !== originalCategoryName) {\n        await productService.updateCategory(productId, newProduct.categoryName);\n      }\n      \n      // Create a copy of newProduct without categoryName for the general update\n      const productDataForUpdate = { ...newProduct };\n      delete productDataForUpdate.categoryName; // Remove categoryName as it's handled separately\n      \n      // Then update the rest of the product data\n      const response = await productService.updateProduct(productId, productDataForUpdate);\n      \n      // Fetch the updated product to ensure we have the latest data\n      const updatedProductResponse = await productService.getProductById(productId);\n      const updatedProduct = updatedProductResponse.product;\n      \n      // Update the products list with the updated product\n      setProducts(products.map(product => \n        product.productID === productId ? updatedProduct : product\n      ));\n      \n      setEditingProductId(null); // Reset editing state\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error updating product:\", err);\n      setError(err.message || \"Failed to update product.\");\n    }\n    setUpdateLoading(false);\n  };\n\n  const handleEdit = (product) => {\n    setNewProduct({\n      productID: product.productID,\n      productName: product.productName,\n      productDescription: product.productDescription,\n      productPrice: product.productPrice,\n      productStorage: product.productStorage,\n      categoryName: product.category ? product.category.name : '',\n      productImage: product.productImages || []// Reset images array since we can't edit existing images directly\n    });\n    setFileError(null);\n    setEditingProductId(product.productID);\n    setUploadError('');\n  };\n\n  const handleFileChange = (e) => {\n    const newFiles = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n        setFileError(null);\n\n    if (newFiles.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n\n    newFiles.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n    setNewProduct({ ...newProduct, productImage: validFiles });\n    // handleUpdate(productId);\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n\n  };\n \n  const handleFileChangeAdd = (e) => {\n    const files = Array.from(e.target.files);\n    const validFiles = [];\n    let errorMessage = '';\n    setAddFileError(null);\n\n    if (files.length > 1) {\n      errorMessage = 'You can only upload ONE image.';\n      setAddFileError(errorMessage);\n      fileInputRef.current.value = '';\n      return;\n    }\n\n    files.forEach(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png'].includes(file.type);\n      const isValidSize = file.size <= 2 * 1024 * 1024; // < 2 MB\n\n      if (isValidType && isValidSize) {\n        validFiles.push(file);\n        console.log(file);\n      } else {\n        errorMessage = 'Invalid file format or size. Please upload JPEG, JPG, or PNG files under 2MB.';\n      }\n    });\n\n    setAddProduct({ ...addProduct, productImage: validFiles });\n    setUploadError(errorMessage); // Set the error message if there are invalid files\n  };\n\n  const handleDeleteImage = (imageIndex, isAddForm = false) => {\n    if (isAddForm) {\n      const updatedImages = addProduct.productImage.filter((_, index) => index !== imageIndex);\n      setAddProduct({ ...addProduct, productImage: updatedImages });\n    } else {\n      const updatedImages = newProduct.productImage.filter((_, index) => index !== imageIndex);\n      console.log(updatedImages);\n      setNewProduct({ ...newProduct, productImage: updatedImages});\n    }\n    setUploadError(''); // Clear error message when an image is deleted\n  };\n\n  useEffect(() => {\n    console.log('Updated newProduct:', newProduct);\n  }, [newProduct]);\n\n  const handleAddProduct = async () => {\n    setAddLoading(true);\n    try {\n      const response = await productService.addProduct(addProduct);\n      // Add the new product to the list\n      setProducts([...products, response.product]);\n      // Reset the form\n      setAddProduct({\n        productID: '',\n        productName: '',\n        productDescription: '',\n        productPrice: '',\n        productStorage: '',\n        categoryName: '',\n        productImage: []\n      });\n      setUploadError(''); // Clear any previous upload error\n    } catch (err) {\n      console.error(\"Error adding product:\", err);\n      setError(err.message || \"Failed to add product.\");\n    }\n    setAddLoading(false);\n  };\n\n  const handleToggleAddProduct = () => {\n    setAddingProduct(prevState => !prevState); // Toggle the state\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"product-management-container\">\n      <h1>Product Management</h1>\n      <button onClick={handleToggleAddProduct}>\n        {addingProduct ? 'Hide Add Product Form' : 'Show Add Product Form'}\n      </button>\n      \n      {/* Add New Product Form */}\n      {addingProduct && (<div className=\"add-product-form\">\n        <h2>Add New Product</h2>\n        <label>Product ID:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productID}\n          onChange={(e) => setAddProduct({ ...addProduct, productID: e.target.value })}\n        />\n        <label>Product Name:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productName}\n          onChange={(e) => setAddProduct({ ...addProduct, productName: e.target.value })}\n        />\n        <label>Product Description:</label>\n        <input\n          type=\"text\"\n          value={addProduct.productDescription}\n          onChange={(e) => setAddProduct({ ...addProduct, productDescription: e.target.value })}\n        />\n        <label>Product Price:</label>\n        <input\n          type=\"number\"\n          value={addProduct.productPrice}\n          onChange={(e) => setAddProduct({ ...addProduct, productPrice: e.target.value })}\n        />\n        <label>Product Stock:</label>\n        <input\n          type=\"number\"\n          value={addProduct.productStorage}\n          onChange={(e) => setAddProduct({ ...addProduct, productStorage: e.target.value })}\n        />\n        \n        <label>Category:</label>\n        <select\n          value={addProduct.categoryName}\n          onChange={(e) => setAddProduct({ ...addProduct, categoryName: e.target.value })}\n        >\n          <option value=\"\">Select a category</option>\n          {categories && categories.length > 0 ? (\n            categories.map(category => (\n              <option key={category._id} value={category.name}>\n                {category.name}\n              </option>\n            ))\n          ) : (\n            <option disabled>No categories available</option>\n          )}\n        </select>\n        \n        <label>Upload Images:</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/jpeg,image/jpg,image/png\"\n          onChange={handleFileChangeAdd}\n          ref={fileInputRef}\n        />\n        <div className=\"image-preview\">\n          {Array.isArray(addProduct.productImage) && addProduct.productImage.map((image, index) => (\n            <div key={index}>\n              <span>{image.name}</span>\n              <button onClick={() => handleDeleteImage(index, true)}>Delete</button>\n            </div>\n          ))}\n        {setAddFileError && <p>{addFileError}</p>}\n        </div>\n\n        {uploadError && <div className=\"error-message\">{uploadError}</div>} {/* Error message for invalid uploads */}\n        \n        <button onClick={handleAddProduct}>{addLoading?\"Adding...\":\"Add Product\"}</button>\n      </div>)}\n\n      {/* Existing Products Table */}\n      <table>\n        <thead>\n          <tr>\n            <th>Product ID</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th>Stock</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map(product => (\n            <tr key={product.productID}>\n              <td>{product.productID}</td>\n              <td>{product.productName}</td>\n              <td>{product.productDescription}</td>\n              <td>{product.productPrice}</td>\n              <td>{product.productStorage}</td>\n              <td>{product.category ? product.category.name : 'None'}</td>\n              <td>\n                <button onClick={() => handleEdit(product)}>Update</button>\n                <button onClick={() => handleDelete(product.productID)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Update Product Form */}\n      {editingProductId && (\n        <div className=\"update-product-form\">\n          <h2>Update Product: {newProduct.productName}</h2>\n          <label>Update Name:</label>\n          <input\n            type=\"text\"\n            value={newProduct.productName}\n            onChange={(e) => setNewProduct({ ...newProduct, productName: e.target.value })}\n          />\n          <label>Update Description:</label>\n          <input\n            type=\"text\"\n            value={newProduct.productDescription}\n            onChange={(e) => setNewProduct({ ...newProduct, productDescription: e.target.value })}\n          />\n          <label>Update Price:</label>\n          <input\n            type=\"number\"\n            value={newProduct.productPrice}\n            onChange={(e) => setNewProduct({ ...newProduct, productPrice: e.target.value })}\n          />\n          <label>Update Stock:</label>\n          <input\n            type=\"number\"\n            value={newProduct.productStorage}\n            onChange={(e) => setNewProduct({ ...newProduct, productStorage: e.target.value })}\n          />\n          \n          <label>Update Category:</label>\n          <select\n            value={newProduct.categoryName}\n            onChange={(e) => setNewProduct({ ...newProduct, categoryName: e.target.value })}\n          >\n            <option value=\"\">Select a category</option>\n            {categories && categories.length > 0 ? (\n              categories.map(category => (\n                <option key={category._id} value={category.name}>\n                  {category.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No categories available</option>\n            )}\n          </select>\n          \n          <label>Upload Images:</label>\n          <input\n            type=\"file\"\n            multiple\n            accept=\"image/jpeg,image/jpg,image/png\"\n            onChange={handleFileChange}\n            ref={fileInputRef}\n          />\n          <div className=\"image-preview\">\n            {Array.isArray(newProduct.productImage) && newProduct.productImage.map((image, index) => (\n              <div key={index}>\n                <p>{index}</p>\n                <img src = {image} alt={image.name}/>\n                <button onClick={() => handleDeleteImage(index, false)}>Delete</button>\n              </div>\n            ))}\n            {setFileError && <p>{fileError}</p>}\n          </div>\n\n          {uploadError && <div className=\"error-message\">{uploadError}</div>} {/* Error message for invalid uploads */}\n          \n          <button onClick={() => handleUpdate(editingProductId)}>{updateLoading ? \"Updating...\":\"Confirm Update\"}</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductManagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,4BAA4B,CAAC,CAAC;AACzD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMsB,YAAY,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC;IAC3CiC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,EAAE;IACtBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC;IAC3CiC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,EAAE;IACtBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC;EAEFxC,SAAS,CAAC,MAAM;IACd,eAAe2C,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAM1C,cAAc,CAAC2C,cAAc,CAAC,CAAC;QAClDrC,WAAW,CAACsC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACrC,QAAQ,IAAI,EAAE,CAAC;MAC/D,CAAC,CAAC,OAAOyC,GAAG,EAAE;QACZC,OAAO,CAACtC,KAAK,CAAC,0BAA0B,EAAEqC,GAAG,CAAC;QAC9CpC,QAAQ,CAACoC,GAAG,CAACE,OAAO,IAAI,2BAA2B,CAAC;MACtD,CAAC,SAAS;QACRxC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,eAAeyC,eAAeA,CAAA,EAAG;MAC/B,IAAI;QACF7B,oBAAoB,CAAC,IAAI,CAAC;QAC1B,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;QAC/C,MAAMT,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCL,OAAO,CAACM,GAAG,CAAC,kBAAkB,EAAEX,IAAI,CAAC,CAAC,CAAC;;QAEvC;QACA,IAAIA,IAAI,IAAIA,IAAI,CAACY,OAAO,IAAIV,KAAK,CAACC,OAAO,CAACH,IAAI,CAACzB,UAAU,CAAC,EAAE;UAC1DC,aAAa,CAACwB,IAAI,CAACzB,UAAU,CAAC;QAChC,CAAC,MAAM;UACLC,aAAa,CAAC,EAAE,CAAC;QACnB;MACF,CAAC,CAAC,OAAO4B,GAAG,EAAE;QACZC,OAAO,CAACtC,KAAK,CAAC,4BAA4B,EAAEqC,GAAG,CAAC;QAChD5B,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,SAAS;QACRE,oBAAoB,CAAC,KAAK,CAAC;MAC7B;IACF;IAEAqB,aAAa,CAAC,CAAC;IACfQ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAG,MAAOC,SAAS,IAAK;IACxC,IAAI;MACF;MACA,MAAMN,QAAQ,GAAG,MAAMlD,cAAc,CAACyD,aAAa,CAACD,SAAS,CAAC;;MAE9D;MACA,MAAMd,IAAI,GAAG,MAAM1C,cAAc,CAAC2C,cAAc,CAAC,CAAC;MAClDrC,WAAW,CAACsC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACrC,QAAQ,IAAI,EAAE,CAAC;;MAE7D;MACA,IAAIiB,gBAAgB,KAAKkC,SAAS,EAAE;QAClCjC,mBAAmB,CAAC,IAAI,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZC,OAAO,CAACtC,KAAK,CAAC,yBAAyB,EAAEqC,GAAG,CAAC;MAC7CpC,QAAQ,CAACoC,GAAG,CAACE,OAAO,IAAI,2BAA2B,CAAC;IACtD;EACF,CAAC;EAID,MAAMU,YAAY,GAAG,MAAOF,SAAS,IAAK;IACxC7B,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAI;MACF;MACA,MAAMgC,eAAe,GAAGtD,QAAQ,CAACuD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7B,SAAS,KAAKwB,SAAS,CAAC;MACrE,MAAMM,oBAAoB,GAAGH,eAAe,CAACI,QAAQ,GAAGJ,eAAe,CAACI,QAAQ,CAACC,IAAI,GAAG,EAAE;;MAE1F;MACA,IAAIlC,UAAU,CAACO,YAAY,IAAIP,UAAU,CAACO,YAAY,KAAKyB,oBAAoB,EAAE;QAC/E,MAAM9D,cAAc,CAACiE,cAAc,CAACT,SAAS,EAAE1B,UAAU,CAACO,YAAY,CAAC;MACzE;;MAEA;MACA,MAAM6B,oBAAoB,GAAG;QAAE,GAAGpC;MAAW,CAAC;MAC9C,OAAOoC,oBAAoB,CAAC7B,YAAY,CAAC,CAAC;;MAE1C;MACA,MAAMa,QAAQ,GAAG,MAAMlD,cAAc,CAACmE,aAAa,CAACX,SAAS,EAAEU,oBAAoB,CAAC;;MAEpF;MACA,MAAME,sBAAsB,GAAG,MAAMpE,cAAc,CAACqE,cAAc,CAACb,SAAS,CAAC;MAC7E,MAAMc,cAAc,GAAGF,sBAAsB,CAACG,OAAO;;MAErD;MACAjE,WAAW,CAACD,QAAQ,CAACmE,GAAG,CAACD,OAAO,IAC9BA,OAAO,CAACvC,SAAS,KAAKwB,SAAS,GAAGc,cAAc,GAAGC,OACrD,CAAC,CAAC;MAEFhD,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC3BE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZC,OAAO,CAACtC,KAAK,CAAC,yBAAyB,EAAEqC,GAAG,CAAC;MAC7CpC,QAAQ,CAACoC,GAAG,CAACE,OAAO,IAAI,2BAA2B,CAAC;IACtD;IACArB,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM8C,UAAU,GAAIF,OAAO,IAAK;IAC9BxC,aAAa,CAAC;MACZC,SAAS,EAAEuC,OAAO,CAACvC,SAAS;MAC5BC,WAAW,EAAEsC,OAAO,CAACtC,WAAW;MAChCC,kBAAkB,EAAEqC,OAAO,CAACrC,kBAAkB;MAC9CC,YAAY,EAAEoC,OAAO,CAACpC,YAAY;MAClCC,cAAc,EAAEmC,OAAO,CAACnC,cAAc;MACtCC,YAAY,EAAEkC,OAAO,CAACR,QAAQ,GAAGQ,OAAO,CAACR,QAAQ,CAACC,IAAI,GAAG,EAAE;MAC3D1B,YAAY,EAAEiC,OAAO,CAACG,aAAa,IAAI,EAAE;IAC3C,CAAC,CAAC;IACF9D,YAAY,CAAC,IAAI,CAAC;IAClBW,mBAAmB,CAACgD,OAAO,CAACvC,SAAS,CAAC;IACtCP,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMkD,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,QAAQ,GAAGjC,KAAK,CAACkC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3C,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IACjBtE,YAAY,CAAC,IAAI,CAAC;IAEtB,IAAIiE,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;MACvBD,YAAY,GAAG,gCAAgC;MAC/CtE,YAAY,CAACsE,YAAY,CAAC;MAC1B7D,YAAY,CAAC+D,OAAO,CAACC,KAAK,GAAG,EAAE;MAC/B;IACF;IAEAR,QAAQ,CAACS,OAAO,CAACC,IAAI,IAAI;MACvB,MAAMC,WAAW,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAACC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC;MAChF,MAAMC,WAAW,GAAGJ,IAAI,CAACK,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;MAElD,IAAIJ,WAAW,IAAIG,WAAW,EAAE;QAC9BV,UAAU,CAACY,IAAI,CAACN,IAAI,CAAC;QACrBxC,OAAO,CAACM,GAAG,CAACkC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLL,YAAY,GAAG,+EAA+E;MAChG;IACF,CAAC,CAAC;IACFnD,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAEQ,YAAY,EAAE2C;IAAW,CAAC,CAAC;IAC1D;IACAxD,cAAc,CAACyD,YAAY,CAAC,CAAC,CAAC;EAEhC,CAAC;EAED,MAAMY,mBAAmB,GAAIlB,CAAC,IAAK;IACjC,MAAMI,KAAK,GAAGpC,KAAK,CAACkC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACxC,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IACrBpE,eAAe,CAAC,IAAI,CAAC;IAErB,IAAIkE,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACpBD,YAAY,GAAG,gCAAgC;MAC/CpE,eAAe,CAACoE,YAAY,CAAC;MAC7B7D,YAAY,CAAC+D,OAAO,CAACC,KAAK,GAAG,EAAE;MAC/B;IACF;IAEAL,KAAK,CAACM,OAAO,CAACC,IAAI,IAAI;MACpB,MAAMC,WAAW,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAACC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC;MAChF,MAAMC,WAAW,GAAGJ,IAAI,CAACK,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;MAElD,IAAIJ,WAAW,IAAIG,WAAW,EAAE;QAC9BV,UAAU,CAACY,IAAI,CAACN,IAAI,CAAC;QACrBxC,OAAO,CAACM,GAAG,CAACkC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLL,YAAY,GAAG,+EAA+E;MAChG;IACF,CAAC,CAAC;IAEF1C,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAED,YAAY,EAAE2C;IAAW,CAAC,CAAC;IAC1DxD,cAAc,CAACyD,YAAY,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAACC,UAAU,EAAEC,SAAS,GAAG,KAAK,KAAK;IAC3D,IAAIA,SAAS,EAAE;MACb,MAAMC,aAAa,GAAG3D,UAAU,CAACD,YAAY,CAAC6D,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKL,UAAU,CAAC;MACxFxD,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAED,YAAY,EAAE4D;MAAc,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL,MAAMA,aAAa,GAAGpE,UAAU,CAACQ,YAAY,CAAC6D,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKL,UAAU,CAAC;MACxFjD,OAAO,CAACM,GAAG,CAAC6C,aAAa,CAAC;MAC1BnE,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAEQ,YAAY,EAAE4D;MAAa,CAAC,CAAC;IAC9D;IACAzE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAED3B,SAAS,CAAC,MAAM;IACdiD,OAAO,CAACM,GAAG,CAAC,qBAAqB,EAAEvB,UAAU,CAAC;EAChD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMwE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCzE,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAMlD,cAAc,CAACuC,UAAU,CAACA,UAAU,CAAC;MAC5D;MACAjC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE6C,QAAQ,CAACqB,OAAO,CAAC,CAAC;MAC5C;MACA/B,aAAa,CAAC;QACZR,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,kBAAkB,EAAE,EAAE;QACtBC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE;MAChB,CAAC,CAAC;MACFb,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZC,OAAO,CAACtC,KAAK,CAAC,uBAAuB,EAAEqC,GAAG,CAAC;MAC3CpC,QAAQ,CAACoC,GAAG,CAACE,OAAO,IAAI,wBAAwB,CAAC;IACnD;IACAnB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAM0E,sBAAsB,GAAGA,CAAA,KAAM;IACnCvF,gBAAgB,CAACwF,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,IAAIjG,OAAO,EAAE,oBAAOL,OAAA;IAAAuG,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIpG,KAAK,EAAE,oBAAOP,OAAA;IAAK4G,SAAS,EAAC,eAAe;IAAAL,QAAA,EAAEhG;EAAK;IAAAiG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE9D,oBACE3G,OAAA;IAAK4G,SAAS,EAAC,8BAA8B;IAAAL,QAAA,gBAC3CvG,OAAA;MAAAuG,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B3G,OAAA;MAAQ6G,OAAO,EAAER,sBAAuB;MAAAE,QAAA,EACrC1F,aAAa,GAAG,uBAAuB,GAAG;IAAuB;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EAGR9F,aAAa,iBAAKb,OAAA;MAAK4G,SAAS,EAAC,kBAAkB;MAAAL,QAAA,gBAClDvG,OAAA;QAAAuG,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB3G,OAAA;QAAAuG,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1B3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXL,KAAK,EAAE9C,UAAU,CAACP,SAAU;QAC5BgF,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEP,SAAS,EAAE4C,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5B3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXL,KAAK,EAAE9C,UAAU,CAACN,WAAY;QAC9B+E,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEN,WAAW,EAAE2C,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnC3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXL,KAAK,EAAE9C,UAAU,CAACL,kBAAmB;QACrC8E,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEL,kBAAkB,EAAE0C,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B3G,OAAA;QACEwF,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAE9C,UAAU,CAACJ,YAAa;QAC/B6E,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEJ,YAAY,EAAEyC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B3G,OAAA;QACEwF,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAE9C,UAAU,CAACH,cAAe;QACjC4E,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEH,cAAc,EAAEwC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAEF3G,OAAA;QAAAuG,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB3G,OAAA;QACEmF,KAAK,EAAE9C,UAAU,CAACF,YAAa;QAC/B2E,QAAQ,EAAGpC,CAAC,IAAKpC,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEF,YAAY,EAAEuC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC,CAAE;QAAAoB,QAAA,gBAEhFvG,OAAA;UAAQmF,KAAK,EAAC,EAAE;UAAAoB,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1C5F,UAAU,IAAIA,UAAU,CAACkE,MAAM,GAAG,CAAC,GAClClE,UAAU,CAACuD,GAAG,CAACT,QAAQ,iBACrB7D,OAAA;UAA2BmF,KAAK,EAAEtB,QAAQ,CAACC,IAAK;UAAAyC,QAAA,EAC7C1C,QAAQ,CAACC;QAAI,GADHD,QAAQ,CAACkD,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT,CAAC,gBAEF3G,OAAA;UAAQgH,QAAQ;UAAAT,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACjD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAET3G,OAAA;QAAAuG,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXyB,QAAQ;QACRC,MAAM,EAAC,gCAAgC;QACvCJ,QAAQ,EAAElB,mBAAoB;QAC9BuB,GAAG,EAAEhG;MAAa;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF3G,OAAA;QAAK4G,SAAS,EAAC,eAAe;QAAAL,QAAA,GAC3B7D,KAAK,CAACC,OAAO,CAACN,UAAU,CAACD,YAAY,CAAC,IAAIC,UAAU,CAACD,YAAY,CAACkC,GAAG,CAAC,CAAC8C,KAAK,EAAEjB,KAAK,kBAClFnG,OAAA;UAAAuG,QAAA,gBACEvG,OAAA;YAAAuG,QAAA,EAAOa,KAAK,CAACtD;UAAI;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB3G,OAAA;YAAQ6G,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACM,KAAK,EAAE,IAAI,CAAE;YAAAI,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF9DR,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN,CAAC,EACH/F,eAAe,iBAAIZ,OAAA;UAAAuG,QAAA,EAAI5F;QAAY;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,EAELrF,WAAW,iBAAItB,OAAA;QAAK4G,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAEjF;MAAW;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAC,eAEpE3G,OAAA;QAAQ6G,OAAO,EAAET,gBAAiB;QAAAG,QAAA,EAAE7E,UAAU,GAAC,WAAW,GAAC;MAAa;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAE,eAGP3G,OAAA;MAAAuG,QAAA,gBACEvG,OAAA;QAAAuG,QAAA,eACEvG,OAAA;UAAAuG,QAAA,gBACEvG,OAAA;YAAAuG,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB3G,OAAA;YAAAuG,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb3G,OAAA;YAAAuG,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB3G,OAAA;YAAAuG,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd3G,OAAA;YAAAuG,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd3G,OAAA;YAAAuG,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB3G,OAAA;YAAAuG,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR3G,OAAA;QAAAuG,QAAA,EACGpG,QAAQ,CAACmE,GAAG,CAACD,OAAO,iBACnBrE,OAAA;UAAAuG,QAAA,gBACEvG,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACvC;UAAS;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5B3G,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACtC;UAAW;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9B3G,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACrC;UAAkB;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrC3G,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACpC;UAAY;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/B3G,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACnC;UAAc;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjC3G,OAAA;YAAAuG,QAAA,EAAKlC,OAAO,CAACR,QAAQ,GAAGQ,OAAO,CAACR,QAAQ,CAACC,IAAI,GAAG;UAAM;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5D3G,OAAA;YAAAuG,QAAA,gBACEvG,OAAA;cAAQ6G,OAAO,EAAEA,CAAA,KAAMtC,UAAU,CAACF,OAAO,CAAE;cAAAkC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3D3G,OAAA;cAAQ6G,OAAO,EAAEA,CAAA,KAAMxD,YAAY,CAACgB,OAAO,CAACvC,SAAS,CAAE;cAAAyE,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC;QAAA,GAVEtC,OAAO,CAACvC,SAAS;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWtB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGPvF,gBAAgB,iBACfpB,OAAA;MAAK4G,SAAS,EAAC,qBAAqB;MAAAL,QAAA,gBAClCvG,OAAA;QAAAuG,QAAA,GAAI,kBAAgB,EAAC3E,UAAU,CAACG,WAAW;MAAA;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjD3G,OAAA;QAAAuG,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXL,KAAK,EAAEvD,UAAU,CAACG,WAAY;QAC9B+E,QAAQ,EAAGpC,CAAC,IAAK7C,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEG,WAAW,EAAE2C,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClC3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXL,KAAK,EAAEvD,UAAU,CAACI,kBAAmB;QACrC8E,QAAQ,EAAGpC,CAAC,IAAK7C,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEI,kBAAkB,EAAE0C,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5B3G,OAAA;QACEwF,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAEvD,UAAU,CAACK,YAAa;QAC/B6E,QAAQ,EAAGpC,CAAC,IAAK7C,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEK,YAAY,EAAEyC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eACF3G,OAAA;QAAAuG,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5B3G,OAAA;QACEwF,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAEvD,UAAU,CAACM,cAAe;QACjC4E,QAAQ,EAAGpC,CAAC,IAAK7C,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEM,cAAc,EAAEwC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAEF3G,OAAA;QAAAuG,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B3G,OAAA;QACEmF,KAAK,EAAEvD,UAAU,CAACO,YAAa;QAC/B2E,QAAQ,EAAGpC,CAAC,IAAK7C,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEO,YAAY,EAAEuC,CAAC,CAACG,MAAM,CAACM;QAAM,CAAC,CAAE;QAAAoB,QAAA,gBAEhFvG,OAAA;UAAQmF,KAAK,EAAC,EAAE;UAAAoB,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1C5F,UAAU,IAAIA,UAAU,CAACkE,MAAM,GAAG,CAAC,GAClClE,UAAU,CAACuD,GAAG,CAACT,QAAQ,iBACrB7D,OAAA;UAA2BmF,KAAK,EAAEtB,QAAQ,CAACC,IAAK;UAAAyC,QAAA,EAC7C1C,QAAQ,CAACC;QAAI,GADHD,QAAQ,CAACkD,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT,CAAC,gBAEF3G,OAAA;UAAQgH,QAAQ;UAAAT,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACjD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAET3G,OAAA;QAAAuG,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B3G,OAAA;QACEwF,IAAI,EAAC,MAAM;QACXyB,QAAQ;QACRC,MAAM,EAAC,gCAAgC;QACvCJ,QAAQ,EAAErC,gBAAiB;QAC3B0C,GAAG,EAAEhG;MAAa;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACF3G,OAAA;QAAK4G,SAAS,EAAC,eAAe;QAAAL,QAAA,GAC3B7D,KAAK,CAACC,OAAO,CAACf,UAAU,CAACQ,YAAY,CAAC,IAAIR,UAAU,CAACQ,YAAY,CAACkC,GAAG,CAAC,CAAC8C,KAAK,EAAEjB,KAAK,kBAClFnG,OAAA;UAAAuG,QAAA,gBACEvG,OAAA;YAAAuG,QAAA,EAAIJ;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd3G,OAAA;YAAKqH,GAAG,EAAID,KAAM;YAACE,GAAG,EAAEF,KAAK,CAACtD;UAAK;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACrC3G,OAAA;YAAQ6G,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACM,KAAK,EAAE,KAAK,CAAE;YAAAI,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAH/DR,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACN,CAAC,EACDjG,YAAY,iBAAIV,OAAA;UAAAuG,QAAA,EAAI9F;QAAS;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EAELrF,WAAW,iBAAItB,OAAA;QAAK4G,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAEjF;MAAW;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAC,eAEpE3G,OAAA;QAAQ6G,OAAO,EAAEA,CAAA,KAAMrD,YAAY,CAACpC,gBAAgB,CAAE;QAAAmF,QAAA,EAAE/E,aAAa,GAAG,aAAa,GAAC;MAAgB;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzG,EAAA,CApbID,iBAAiB;AAAAsH,EAAA,GAAjBtH,iBAAiB;AAsbvB,eAAeA,iBAAiB;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}