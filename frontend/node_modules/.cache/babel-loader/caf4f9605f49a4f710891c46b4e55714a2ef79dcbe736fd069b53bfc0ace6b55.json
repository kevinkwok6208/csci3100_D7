{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamto\\\\OneDrive\\\\\\u684C\\u9762\\\\8april\\\\csci3100_D7\\\\frontend\\\\src\\\\components\\\\Reservations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Reservations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reservations = ({\n  username: propUsername\n}) => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.cartItems) || []);\n  const [username, setUsername] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [checkoutError, setCheckoutError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [timerId, setTimerId] = useState(null);\n  const apiBaseUrl = 'http://localhost:5001'; // Hardcoded for simplicity\n\n  // Add shipping information state\n  const [shippingInfo, setShippingInfo] = useState({\n    name: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: 'USA'\n  });\n\n  // Calculate total with correct calculation using quantity\n  const totalPrice = cartItems.reduce((total, item) => total + item.productPrice * (item.quantity || 1), 0).toFixed(2);\n\n  // Set up username and cart items on component mount\n  useEffect(() => {\n    var _location$state2;\n    // First priority: Use username from props if available\n    if (propUsername) {\n      console.log('Username from props:', propUsername);\n      setUsername(propUsername);\n    }\n    // Second priority: Try from location state\n    else if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.username) {\n      console.log('Username from location state:', location.state.username);\n      setUsername(location.state.username);\n    }\n    // Third priority: Try from localStorage directly\n    else if (localStorage.getItem('username')) {\n      const storedUsername = localStorage.getItem('username');\n      console.log('Username from localStorage:', storedUsername);\n      setUsername(storedUsername);\n    }\n    // If all else fails, use a fallback for development\n    else {\n      console.warn('No username found in props or storage');\n\n      // FALLBACK: If we're in development mode, use a dummy username for testing\n      if (process.env.NODE_ENV === 'development') {\n        const dummyUsername = 'testuser';\n        console.log('Using dummy username for development:', dummyUsername);\n        setUsername(dummyUsername);\n      }\n    }\n\n    // If cartItems is empty and we have items in localStorage, use those\n    if (cartItems.length === 0) {\n      try {\n        const storedCart = JSON.parse(localStorage.getItem('cart') || '[]');\n        if (storedCart.length > 0) {\n          console.log('Using cart from localStorage:', storedCart);\n          setCartItems(storedCart);\n        }\n      } catch (error) {\n        console.error('Error parsing cart from localStorage:', error);\n      }\n    }\n  }, [propUsername, location.state]);\n\n  // Function to start the countdown timer (15 minutes = 900 seconds)\n  const startCheckoutTimer = () => {\n    let secondsLeft = 15 * 60;\n    setTimeLeft(secondsLeft);\n    const timer = setInterval(() => {\n      secondsLeft -= 1;\n      setTimeLeft(secondsLeft);\n      if (secondsLeft <= 0) {\n        clearInterval(timer);\n        removeReservation();\n        alert('Checkout time expired. Your reservation has been released.');\n        navigate('/cart');\n      }\n    }, 1000);\n    setTimerId(timer);\n    return timer;\n  };\n\n  // Function to clear the timer\n  const clearCheckoutTimer = () => {\n    if (timerId) {\n      clearInterval(timerId);\n      setTimerId(null);\n      setTimeLeft(null);\n    }\n  };\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    if (seconds === null) return '';\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Remove reservation if user cancels or timeout\n  const removeReservation = async () => {\n    if (!username) {\n      console.error('Cannot remove reservation: No username available');\n      return;\n    }\n    try {\n      console.log(`Removing reservation for user: ${username}`);\n      await axios.post(`${apiBaseUrl}/api/checkout/remove-reservation/${username}`);\n    } catch (error) {\n      console.error('Failed to remove reservation:', error);\n    }\n  };\n\n  // Helper function to simplify cart items for API\n  const prepareCartItemsForAPI = items => {\n    return items.map(item => {\n      // Create a simplified version of the item\n      return {\n        productId: typeof item.productId === 'object' ? item.productId._id : item.productId,\n        productName: typeof item.productId === 'object' ? item.productId.productName : item.productName,\n        productPrice: Number(item.productPrice) || 0,\n        quantity: Number(item.quantity) || 1\n      };\n    });\n  };\n\n  // Handle shipping form input changes\n  const handleShippingInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setShippingInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Validate shipping form\n  const validateShippingInfo = () => {\n    const {\n      name,\n      address,\n      city,\n      state,\n      zipCode\n    } = shippingInfo;\n    if (!name.trim()) return 'Name is required';\n    if (!address.trim()) return 'Address is required';\n    return null;\n  };\n  const handleCheckout = async () => {\n    // Use the username state which was set from props\n    let checkoutUsername = username;\n    if (!checkoutUsername) {\n      // Prompt the user for their username as a last resort\n      const promptedUsername = prompt('Please enter your username to continue with checkout:');\n      if (promptedUsername && promptedUsername.trim()) {\n        checkoutUsername = promptedUsername.trim();\n        setUsername(checkoutUsername);\n        console.log('Using prompted username:', checkoutUsername);\n      } else {\n        setCheckoutError('No username available. Please log in first.');\n        return;\n      }\n    }\n    if (cartItems.length === 0) {\n      alert('Your cart is empty');\n      return;\n    }\n\n    // Validate shipping information\n    const shippingError = validateShippingInfo();\n    if (shippingError) {\n      setCheckoutError(shippingError);\n      return;\n    }\n    setIsProcessing(true);\n    setCheckoutError(null);\n    try {\n      // Log what we're sending to help debug\n      console.log('Using username for checkout:', checkoutUsername);\n      console.log('Cart items before preparation:', cartItems);\n\n      // Prepare simplified cart items for API\n      const simplifiedCartItems = prepareCartItemsForAPI(cartItems);\n      console.log('Simplified cart items for API:', simplifiedCartItems);\n\n      // Step 1: Initiate checkout to create reservation\n      console.log(`Sending request to: ${apiBaseUrl}/api/checkout/initiate-checkout/${checkoutUsername}`);\n      const initiateResponse = await axios.post(`${apiBaseUrl}/api/checkout/initiate-checkout/${checkoutUsername}`, {\n        items: simplifiedCartItems,\n        totalAmount: parseFloat(totalPrice)\n      });\n      console.log('Initiate checkout response:', initiateResponse.data);\n      if (initiateResponse.data.success) {\n        // Start the 15-minute countdown\n        startCheckoutTimer();\n\n        // Step 2: Create PayPal order with the shipping info from form\n        const formattedShippingInfo = {\n          name: shippingInfo.name,\n          address: shippingInfo.address\n        };\n        console.log('Creating PayPal order with:', {\n          username: checkoutUsername,\n          shippingInfo: formattedShippingInfo\n        });\n        const createOrderResponse = await axios.post(`${apiBaseUrl}/api/checkout/create-paypal-order`, {\n          username: checkoutUsername,\n          shippingInfo: formattedShippingInfo\n        });\n        console.log('Create PayPal order response:', createOrderResponse.data);\n        if (createOrderResponse.data.success) {\n          // Get the PayPal order ID from the response\n          const orderId = createOrderResponse.data.paypalOrderId;\n          if (orderId) {\n            // Determine the PayPal URL\n            let paypalUrl;\n            if (createOrderResponse.data.approvalUrl) {\n              paypalUrl = createOrderResponse.data.approvalUrl;\n            } else {\n              paypalUrl = `https://www.sandbox.paypal.com/checkoutnow?token=${orderId}`;\n            }\n\n            // Open PayPal in a new window instead of redirecting\n            const paypalWindow = window.open(paypalUrl, 'paypal_window', 'width=1000,height=800,status=yes,scrollbars=yes,resizable=yes');\n\n            // If popup is blocked, provide a fallback\n            if (!paypalWindow || paypalWindow.closed || typeof paypalWindow.closed === 'undefined') {\n              setCheckoutError('Popup blocked! Please allow popups, refresh and try again!');\n              // Create a clickable link as fallback\n              const linkElement = document.createElement('a');\n              linkElement.href = paypalUrl;\n              linkElement.target = '_blank';\n              linkElement.textContent = 'Open PayPal in a new window';\n              linkElement.className = 'paypal-fallback-link';\n              const errorDiv = document.querySelector('.error-message');\n              if (errorDiv) {\n                errorDiv.appendChild(document.createElement('br'));\n                errorDiv.appendChild(linkElement);\n              }\n            } else {\n              // Set up polling to check when the PayPal window is closed  **TASK: can I have a automatically close the paypal window after the payment in paypal is done?\n              const pollTimer = setInterval(() => {\n                if (paypalWindow.closed) {\n                  clearInterval(pollTimer);\n\n                  // When PayPal window is closed, check if payment was completed\n                  // We'll do this by attempting to process the payment\n                  processPayment(checkoutUsername, orderId);\n                }\n              }, 1000);\n\n              // Also set a timeout to stop polling after 15 minutes (same as reservation timeout)\n              setTimeout(() => {\n                clearInterval(pollTimer);\n                if (!paypalWindow.closed) {\n                  paypalWindow.close();\n                }\n                setCheckoutError('Payment session timed out. Please try again.');\n                setIsProcessing(false);\n              }, 15 * 60 * 1000); // 15 minutes\n            }\n          } else {\n            throw new Error('No PayPal order ID returned from server');\n          }\n        } else {\n          throw new Error(createOrderResponse.data.message || 'Failed to create PayPal order');\n        }\n      } else {\n        throw new Error(initiateResponse.data.message || 'Failed to initiate checkout');\n      }\n    } catch (error) {\n      console.error('Checkout error:', error);\n\n      // Provide a more detailed error message\n      let errorMessage = 'An error occurred during checkout';\n      if (error.response) {\n        var _error$response$data;\n        console.error('Error response data:', error.response.data);\n        errorMessage = `Server error: ${error.response.status} - ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`;\n      } else if (error.request) {\n        errorMessage = 'No response received from server. Please check your connection.';\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n      setCheckoutError(errorMessage);\n      clearCheckoutTimer();\n      setIsProcessing(false);\n    }\n  };\n\n  // Function to process payment after PayPal window is closed\n  const processPayment = async (checkoutUsername, orderId) => {\n    try {\n      setIsProcessing(true);\n      console.log('Processing payment for:', checkoutUsername, 'with PayPal order ID:', orderId);\n      const processResponse = await axios.post(`${apiBaseUrl}/api/checkout/process-payment`, {\n        username: checkoutUsername,\n        paypalOrderId: orderId\n      });\n      console.log('Process payment response:', processResponse.data);\n      if (processResponse.data.success) {\n        // Payment successfully processed\n        clearCheckoutTimer(); // Clear the reservation timer\n\n        // Clear the cart in localStorage and state\n        localStorage.removeItem('cart');\n        setCartItems([]);\n\n        // Show success message\n        alert('Payment successful! Thank you for your order.');\n\n        // Redirect to order confirmation page\n        setTimeout(() => {\n          navigate('/CheckoutFinish', {\n            state: {\n              orderId: processResponse.data.orderId,\n              orderDetails: processResponse.data.orderDetails // Pass the complete order details\n              // Include any other necessary data\n            },\n            search: `?token=${processResponse.data.orderId}` // Add the token as a query parameter\n          });\n        }, 2000); // Short delay to show success message\n      } else {\n        throw new Error(processResponse.data.message || 'Failed to process payment');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      let errorMessage = 'An error occurred while processing your payment';\n      if (error.response) {\n        var _error$response$data2;\n        errorMessage = `Server error: ${error.response.status} - ${((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || error.message}`;\n      } else if (error.request) {\n        errorMessage = 'No response received from server. Please check your connection.';\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n      setCheckoutError(errorMessage);\n\n      // Attempt to clean up reservations on error\n      try {\n        await axios.post(`${apiBaseUrl}/api/checkout/remove-reservation/${checkoutUsername}`);\n      } catch (cleanupError) {\n        console.error('Failed to clean up reservations:', cleanupError);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Clean up timer when component unmounts\n  useEffect(() => {\n    return () => {\n      clearCheckoutTimer();\n    };\n  }, []);\n\n  // Handle cancellation of checkout\n  const handleCancel = () => {\n    if (window.confirm('Are you sure you want to cancel your reservation?')) {\n      removeReservation();\n      clearCheckoutTimer();\n      navigate('/cart');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        background: '#f0f0f0',\n        padding: '10px',\n        marginBottom: '20px',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", username || 'Not set']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API Base URL: \", apiBaseUrl || 'Not set']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cart Items: \", cartItems.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timer Active: \", timeLeft !== null ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), !username && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Warning: No username found. Please log in to complete checkout.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this), timeLeft && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-timer\",\n      children: [\"Time remaining: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timer\",\n        children: formatTime(timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this), checkoutError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: checkoutError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"cart-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cartItems.map((item, index) => {\n              var _item$productId;\n              const productName = item.productName || ((_item$productId = item.productId) === null || _item$productId === void 0 ? void 0 : _item$productId.productName) || 'Unknown Product';\n              const productPrice = Number(item.productPrice) || 0;\n              const quantity = Number(item.quantity) || 1;\n              const subtotal = (productPrice * quantity).toFixed(2);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", productPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", subtotal]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                className: \"total-label\",\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"total-price\",\n                children: [\"$\", totalPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shipping-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shipping Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Full Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: shippingInfo.name,\n              onChange: handleShippingInfoChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"address\",\n              children: \"Street Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"address\",\n              name: \"address\",\n              value: shippingInfo.address,\n              onChange: handleShippingInfoChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"checkout-button\",\n            onClick: handleCheckout,\n            disabled: isProcessing,\n            children: isProcessing ? 'Processing...' : 'Proceed to PayPal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: handleCancel,\n            disabled: isProcessing,\n            children: \"Cancel Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n};\n_s(Reservations, \"nN8HIIc7yxksmeRIuK50L84fGaE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Reservations;\nexport default Reservations;\nvar _c;\n$RefreshReg$(_c, \"Reservations\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Reservations","username","propUsername","_s","_location$state","location","navigate","cartItems","setCartItems","state","setUsername","isProcessing","setIsProcessing","checkoutError","setCheckoutError","timeLeft","setTimeLeft","timerId","setTimerId","apiBaseUrl","shippingInfo","setShippingInfo","name","address","city","zipCode","country","totalPrice","reduce","total","item","productPrice","quantity","toFixed","_location$state2","console","log","localStorage","getItem","storedUsername","warn","process","env","NODE_ENV","dummyUsername","length","storedCart","JSON","parse","error","startCheckoutTimer","secondsLeft","timer","setInterval","clearInterval","removeReservation","alert","clearCheckoutTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","post","prepareCartItemsForAPI","items","map","productId","_id","productName","Number","handleShippingInfoChange","e","value","target","prev","validateShippingInfo","trim","handleCheckout","checkoutUsername","promptedUsername","prompt","shippingError","simplifiedCartItems","initiateResponse","totalAmount","parseFloat","data","success","formattedShippingInfo","createOrderResponse","orderId","paypalOrderId","paypalUrl","approvalUrl","paypalWindow","window","open","closed","linkElement","document","createElement","href","textContent","className","errorDiv","querySelector","appendChild","pollTimer","processPayment","setTimeout","close","Error","message","errorMessage","response","_error$response$data","status","request","processResponse","removeItem","orderDetails","search","_error$response$data2","cleanupError","handleCancel","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","padding","marginBottom","fontSize","index","_item$productId","subtotal","colSpan","htmlFor","type","id","onChange","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kamto/OneDrive/桌面/8april/csci3100_D7/frontend/src/components/Reservations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Reservations.css';\r\n\r\nconst Reservations = ({ username: propUsername }) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  const [cartItems, setCartItems] = useState(location.state?.cartItems || []);\r\n  const [username, setUsername] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [checkoutError, setCheckoutError] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [timerId, setTimerId] = useState(null);\r\n  const apiBaseUrl = 'http://localhost:5001'; // Hardcoded for simplicity\r\n\r\n  // Add shipping information state\r\n  const [shippingInfo, setShippingInfo] = useState({\r\n    name: '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    country: 'USA'\r\n  });\r\n\r\n  // Calculate total with correct calculation using quantity\r\n  const totalPrice = cartItems.reduce((total, item) => \r\n    total + (item.productPrice * (item.quantity || 1)), 0).toFixed(2);\r\n\r\n  // Set up username and cart items on component mount\r\n  useEffect(() => {\r\n    // First priority: Use username from props if available\r\n    if (propUsername) {\r\n      console.log('Username from props:', propUsername);\r\n      setUsername(propUsername);\r\n    }\r\n    // Second priority: Try from location state\r\n    else if (location.state?.username) {\r\n      console.log('Username from location state:', location.state.username);\r\n      setUsername(location.state.username);\r\n    } \r\n    // Third priority: Try from localStorage directly\r\n    else if (localStorage.getItem('username')) {\r\n      const storedUsername = localStorage.getItem('username');\r\n      console.log('Username from localStorage:', storedUsername);\r\n      setUsername(storedUsername);\r\n    }\r\n    // If all else fails, use a fallback for development\r\n    else {\r\n      console.warn('No username found in props or storage');\r\n      \r\n      // FALLBACK: If we're in development mode, use a dummy username for testing\r\n      if (process.env.NODE_ENV === 'development') {\r\n        const dummyUsername = 'testuser';\r\n        console.log('Using dummy username for development:', dummyUsername);\r\n        setUsername(dummyUsername);\r\n      }\r\n    }\r\n\r\n    // If cartItems is empty and we have items in localStorage, use those\r\n    if (cartItems.length === 0) {\r\n      try {\r\n        const storedCart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n        if (storedCart.length > 0) {\r\n          console.log('Using cart from localStorage:', storedCart);\r\n          setCartItems(storedCart);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing cart from localStorage:', error);\r\n      }\r\n    }\r\n  }, [propUsername, location.state]);\r\n\r\n  // Function to start the countdown timer (15 minutes = 900 seconds)\r\n  const startCheckoutTimer = () => {\r\n    let secondsLeft = 15 * 60;\r\n    setTimeLeft(secondsLeft);\r\n    \r\n    const timer = setInterval(() => {\r\n      secondsLeft -= 1;\r\n      setTimeLeft(secondsLeft);\r\n      \r\n      if (secondsLeft <= 0) {\r\n        clearInterval(timer);\r\n        removeReservation();\r\n        alert('Checkout time expired. Your reservation has been released.');\r\n        navigate('/cart');\r\n      }\r\n    }, 1000);\r\n    \r\n    setTimerId(timer);\r\n    return timer;\r\n  };\r\n\r\n  // Function to clear the timer\r\n  const clearCheckoutTimer = () => {\r\n    if (timerId) {\r\n      clearInterval(timerId);\r\n      setTimerId(null);\r\n      setTimeLeft(null);\r\n    }\r\n  };\r\n\r\n  // Format time as MM:SS\r\n  const formatTime = (seconds) => {\r\n    if (seconds === null) return '';\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Remove reservation if user cancels or timeout\r\n  const removeReservation = async () => {\r\n    if (!username) {\r\n      console.error('Cannot remove reservation: No username available');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(`Removing reservation for user: ${username}`);\r\n      await axios.post(`${apiBaseUrl}/api/checkout/remove-reservation/${username}`);\r\n    } catch (error) {\r\n      console.error('Failed to remove reservation:', error);\r\n    }\r\n  };\r\n\r\n  // Helper function to simplify cart items for API\r\n  const prepareCartItemsForAPI = (items) => {\r\n    return items.map(item => {\r\n      // Create a simplified version of the item\r\n      return {\r\n        productId: typeof item.productId === 'object' ? item.productId._id : item.productId,\r\n        productName: typeof item.productId === 'object' ? item.productId.productName : item.productName,\r\n        productPrice: Number(item.productPrice) || 0,\r\n        quantity: Number(item.quantity) || 1\r\n      };\r\n    });\r\n  };\r\n\r\n  // Handle shipping form input changes\r\n  const handleShippingInfoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setShippingInfo(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Validate shipping form\r\n  const validateShippingInfo = () => {\r\n    const { name, address, city, state, zipCode } = shippingInfo;\r\n    if (!name.trim()) return 'Name is required';\r\n    if (!address.trim()) return 'Address is required';\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleCheckout = async () => {\r\n    // Use the username state which was set from props\r\n    let checkoutUsername = username;\r\n    \r\n    if (!checkoutUsername) {\r\n      // Prompt the user for their username as a last resort\r\n      const promptedUsername = prompt('Please enter your username to continue with checkout:');\r\n      if (promptedUsername && promptedUsername.trim()) {\r\n        checkoutUsername = promptedUsername.trim();\r\n        setUsername(checkoutUsername);\r\n        console.log('Using prompted username:', checkoutUsername);\r\n      } else {\r\n        setCheckoutError('No username available. Please log in first.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (cartItems.length === 0) {\r\n      alert('Your cart is empty');\r\n      return;\r\n    }\r\n\r\n    // Validate shipping information\r\n    const shippingError = validateShippingInfo();\r\n    if (shippingError) {\r\n      setCheckoutError(shippingError);\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setCheckoutError(null);\r\n    \r\n    try {\r\n      // Log what we're sending to help debug\r\n      console.log('Using username for checkout:', checkoutUsername);\r\n      console.log('Cart items before preparation:', cartItems);\r\n      \r\n      // Prepare simplified cart items for API\r\n      const simplifiedCartItems = prepareCartItemsForAPI(cartItems);\r\n      console.log('Simplified cart items for API:', simplifiedCartItems);\r\n      \r\n      // Step 1: Initiate checkout to create reservation\r\n      console.log(`Sending request to: ${apiBaseUrl}/api/checkout/initiate-checkout/${checkoutUsername}`);\r\n      \r\n      const initiateResponse = await axios.post(\r\n        `${apiBaseUrl}/api/checkout/initiate-checkout/${checkoutUsername}`,\r\n        { \r\n          items: simplifiedCartItems,\r\n          totalAmount: parseFloat(totalPrice)\r\n        }\r\n      );\r\n      \r\n      console.log('Initiate checkout response:', initiateResponse.data);\r\n      \r\n      if (initiateResponse.data.success) {\r\n        // Start the 15-minute countdown\r\n        startCheckoutTimer();\r\n        \r\n        // Step 2: Create PayPal order with the shipping info from form\r\n        const formattedShippingInfo = {\r\n          name: shippingInfo.name,\r\n          address: shippingInfo.address\r\n        };\r\n\r\n        console.log('Creating PayPal order with:', {\r\n          username: checkoutUsername,\r\n          shippingInfo: formattedShippingInfo\r\n        });\r\n\r\n        const createOrderResponse = await axios.post(\r\n          `${apiBaseUrl}/api/checkout/create-paypal-order`,\r\n          { \r\n            username: checkoutUsername, \r\n            shippingInfo: formattedShippingInfo\r\n          }\r\n        );\r\n        \r\n        console.log('Create PayPal order response:', createOrderResponse.data);\r\n        \r\n        if (createOrderResponse.data.success) {\r\n          // Get the PayPal order ID from the response\r\n          const orderId = createOrderResponse.data.paypalOrderId;\r\n          \r\n          if (orderId) {\r\n            // Determine the PayPal URL\r\n            let paypalUrl;\r\n            if (createOrderResponse.data.approvalUrl) {\r\n              paypalUrl = createOrderResponse.data.approvalUrl;\r\n            } else {\r\n              paypalUrl = `https://www.sandbox.paypal.com/checkoutnow?token=${orderId}`;\r\n            }\r\n            \r\n            // Open PayPal in a new window instead of redirecting\r\n            const paypalWindow = window.open(paypalUrl, 'paypal_window', \r\n              'width=1000,height=800,status=yes,scrollbars=yes,resizable=yes');\r\n            \r\n            // If popup is blocked, provide a fallback\r\n            if (!paypalWindow || paypalWindow.closed || typeof paypalWindow.closed === 'undefined') {\r\n              setCheckoutError('Popup blocked! Please allow popups, refresh and try again!');\r\n              // Create a clickable link as fallback\r\n              const linkElement = document.createElement('a');\r\n              linkElement.href = paypalUrl;\r\n              linkElement.target = '_blank';\r\n              linkElement.textContent = 'Open PayPal in a new window';\r\n              linkElement.className = 'paypal-fallback-link';\r\n              \r\n              const errorDiv = document.querySelector('.error-message');\r\n              if (errorDiv) {\r\n                errorDiv.appendChild(document.createElement('br'));\r\n                errorDiv.appendChild(linkElement);\r\n              }\r\n            } else {\r\n              // Set up polling to check when the PayPal window is closed  **TASK: can I have a automatically close the paypal window after the payment in paypal is done?\r\n              const pollTimer = setInterval(() => {\r\n                if (paypalWindow.closed) {\r\n                  clearInterval(pollTimer);\r\n                  \r\n                  // When PayPal window is closed, check if payment was completed\r\n                  // We'll do this by attempting to process the payment\r\n                  processPayment(checkoutUsername, orderId);\r\n                }\r\n              }, 1000);\r\n              \r\n              // Also set a timeout to stop polling after 15 minutes (same as reservation timeout)\r\n              setTimeout(() => {\r\n                clearInterval(pollTimer);\r\n                if (!paypalWindow.closed) {\r\n                  paypalWindow.close();\r\n                }\r\n                setCheckoutError('Payment session timed out. Please try again.');\r\n                setIsProcessing(false);\r\n              }, 15 * 60 * 1000); // 15 minutes\r\n            }\r\n          } else {\r\n            throw new Error('No PayPal order ID returned from server');\r\n          }\r\n        } else {\r\n          throw new Error(createOrderResponse.data.message || 'Failed to create PayPal order');\r\n        }\r\n      } else {\r\n        throw new Error(initiateResponse.data.message || 'Failed to initiate checkout');\r\n      }\r\n    } catch (error) {\r\n      console.error('Checkout error:', error);\r\n      \r\n      // Provide a more detailed error message\r\n      let errorMessage = 'An error occurred during checkout';\r\n      if (error.response) {\r\n        console.error('Error response data:', error.response.data);\r\n        errorMessage = `Server error: ${error.response.status} - ${error.response.data?.message || error.message}`;\r\n      } else if (error.request) {\r\n        errorMessage = 'No response received from server. Please check your connection.';\r\n      } else {\r\n        errorMessage = `Error: ${error.message}`;\r\n      }\r\n      \r\n      setCheckoutError(errorMessage);\r\n      clearCheckoutTimer();\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Function to process payment after PayPal window is closed\r\n  const processPayment = async (checkoutUsername, orderId) => {\r\n    try {\r\n      setIsProcessing(true);\r\n      \r\n      console.log('Processing payment for:', checkoutUsername, 'with PayPal order ID:', orderId);\r\n      \r\n      const processResponse = await axios.post(\r\n        `${apiBaseUrl}/api/checkout/process-payment`,\r\n        { \r\n          username: checkoutUsername, \r\n          paypalOrderId: orderId \r\n        }\r\n      );\r\n      \r\n      console.log('Process payment response:', processResponse.data);\r\n      \r\n      if (processResponse.data.success) {\r\n        // Payment successfully processed\r\n        clearCheckoutTimer(); // Clear the reservation timer\r\n        \r\n        // Clear the cart in localStorage and state\r\n        localStorage.removeItem('cart');\r\n        setCartItems([]);\r\n        \r\n        // Show success message\r\n        alert('Payment successful! Thank you for your order.');\r\n        \r\n        // Redirect to order confirmation page\r\n        setTimeout(() => {\r\n          navigate('/CheckoutFinish', { \r\n            state: { \r\n              orderId: processResponse.data.orderId,\r\n              orderDetails: processResponse.data.orderDetails // Pass the complete order details\r\n              // Include any other necessary data\r\n            },\r\n            search: `?token=${processResponse.data.orderId}` // Add the token as a query parameter\r\n          });\r\n        }, 2000); // Short delay to show success message\r\n      } else {\r\n        throw new Error(processResponse.data.message || 'Failed to process payment');\r\n      }\r\n    } catch (error) {\r\n      console.error('Payment processing error:', error);\r\n      \r\n      let errorMessage = 'An error occurred while processing your payment';\r\n      if (error.response) {\r\n        errorMessage = `Server error: ${error.response.status} - ${error.response.data?.message || error.message}`;\r\n      } else if (error.request) {\r\n        errorMessage = 'No response received from server. Please check your connection.';\r\n      } else {\r\n        errorMessage = `Error: ${error.message}`;\r\n      }\r\n      \r\n      setCheckoutError(errorMessage);\r\n      \r\n      // Attempt to clean up reservations on error\r\n      try {\r\n        await axios.post(`${apiBaseUrl}/api/checkout/remove-reservation/${checkoutUsername}`);\r\n      } catch (cleanupError) {\r\n        console.error('Failed to clean up reservations:', cleanupError);\r\n      }\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n\r\n  // Clean up timer when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      clearCheckoutTimer();\r\n    };\r\n  }, []);\r\n\r\n  // Handle cancellation of checkout\r\n  const handleCancel = () => {\r\n    if (window.confirm('Are you sure you want to cancel your reservation?')) {\r\n      removeReservation();\r\n      clearCheckoutTimer();\r\n      navigate('/cart');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservations-container\">\r\n      <h1>Your Reservations</h1>\r\n      \r\n      {/* Debug information section - only show in development */}\r\n      {process.env.NODE_ENV === 'development' && (\r\n        <div className=\"debug-info\" style={{background: '#f0f0f0', padding: '10px', marginBottom: '20px', fontSize: '12px'}}>\r\n          <h4>Debug Info:</h4>\r\n          <p>Username: {username || 'Not set'}</p>\r\n          <p>API Base URL: {apiBaseUrl || 'Not set'}</p>\r\n          <p>Cart Items: {cartItems.length}</p>\r\n          <p>Timer Active: {timeLeft !== null ? 'Yes' : 'No'}</p>\r\n        </div>\r\n      )}\r\n      \r\n      {!username && (\r\n        <div className=\"error-message\">\r\n          Warning: No username found. Please log in to complete checkout.\r\n        </div>\r\n      )}\r\n      \r\n      {timeLeft && (\r\n        <div className=\"checkout-timer\">\r\n          Time remaining: <span className=\"timer\">{formatTime(timeLeft)}</span>\r\n        </div>\r\n      )}\r\n      \r\n      {checkoutError && (\r\n        <div className=\"error-message\">\r\n          {checkoutError}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"cart-summary\">\r\n        <h2>Cart Summary</h2>\r\n        {cartItems.length === 0 ? (\r\n          <p>Your cart is empty</p>\r\n        ) : (\r\n          <>\r\n            <table className=\"cart-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {cartItems.map((item, index) => {\r\n                  const productName = item.productName || (item.productId?.productName || 'Unknown Product');\r\n                  const productPrice = Number(item.productPrice) || 0;\r\n                  const quantity = Number(item.quantity) || 1;\r\n                  const subtotal = (productPrice * quantity).toFixed(2);\r\n                  \r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{productName}</td>\r\n                      <td>${productPrice.toFixed(2)}</td>\r\n                      <td>{quantity}</td>\r\n                      <td>${subtotal}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"total-label\">Total:</td>\r\n                  <td className=\"total-price\">${totalPrice}</td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n            \r\n           {/* Shipping Information Form */}\r\n            <div className=\"shipping-form\">\r\n              <h3>Shipping Information</h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Full Name:</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"name\" \r\n                  name=\"name\" \r\n                  value={shippingInfo.name} \r\n                  onChange={handleShippingInfoChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Street Address:</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"address\" \r\n                  name=\"address\" \r\n                  value={shippingInfo.address} \r\n                  onChange={handleShippingInfoChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            \r\n            <div className=\"checkout-actions\">\r\n              <button \r\n                className=\"checkout-button\" \r\n                onClick={handleCheckout} \r\n                disabled={isProcessing}\r\n              >\r\n                {isProcessing ? 'Processing...' : 'Proceed to PayPal'}\r\n              </button>\r\n              \r\n              <button \r\n                className=\"cancel-button\" \r\n                onClick={handleCancel} \r\n                disabled={isProcessing}\r\n              >\r\n                Cancel Reservation\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reservations;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}