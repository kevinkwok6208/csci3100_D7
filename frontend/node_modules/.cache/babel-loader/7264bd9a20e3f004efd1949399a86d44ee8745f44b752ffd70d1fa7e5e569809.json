{"ast":null,"code":"// src/services/productService.js\nconst productService = {\n  // Get all products\n  getAllProducts: async () => {\n    const response = await fetch('/api/products', {\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to get products');\n    }\n    return response.json();\n  },\n  // Get product by ID\n  getProductById: async productID => {\n    console.log('Fetching product by productID:', productID); // Debugging\n    const response = await fetch(`/api/products/${productID}`, {\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error('API Error:', errorData); // Debugging\n      throw new Error(errorData.message || 'Failed to get product');\n    }\n    return response.json();\n  },\n  // Add a new product\n  addProduct: async productData => {\n    const response = await fetch('/api/products', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to add product');\n    }\n    return response.json();\n  },\n  // Update a product\n  updateProduct: async (productID, productData) => {\n    const response = await fetch(`/api/products/${productID}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update product');\n    }\n    return response.json();\n  },\n  // Update product price\n  updatePrice: async (productID, price) => {\n    const response = await fetch(`/api/products/${productID}/price`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        price\n      }),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update price');\n    }\n    return response.json();\n  },\n  // Update product stock\n  updateStorage: async (productID, stock) => {\n    const response = await fetch(`/api/products/${productID}/stock`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        stock\n      }),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update stock');\n    }\n    return response.json();\n  },\n  // Delete a product\n  deleteProduct: async productID => {\n    const response = await fetch(`/api/products/${productID}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to delete product');\n    }\n    return response.json();\n  }\n};\nexport default productService;","map":{"version":3,"names":["productService","getAllProducts","response","fetch","credentials","ok","errorData","json","Error","message","getProductById","productID","console","log","error","addProduct","productData","method","headers","body","JSON","stringify","updateProduct","updatePrice","price","updateStorage","stock","deleteProduct"],"sources":["C:/Users/kamto/OneDrive/桌面/8april/csci3100_D7/frontend/src/services/productService.js"],"sourcesContent":["\r\n// src/services/productService.js\r\nconst productService = {\r\n    // Get all products\r\n    getAllProducts: async () => {\r\n      const response = await fetch('/api/products', {\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to get products');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    \r\n    // Get product by ID\r\n    getProductById: async (productID) => {\r\n      console.log('Fetching product by productID:', productID); // Debugging\r\n      const response = await fetch(`/api/products/${productID}`, {\r\n        credentials: 'include',\r\n      });\r\n    \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('API Error:', errorData); // Debugging\r\n        throw new Error(errorData.message || 'Failed to get product');\r\n      }\r\n    \r\n      return response.json();\r\n    },\r\n    \r\n    // Add a new product\r\n    addProduct: async (productData) => {\r\n      const response = await fetch('/api/products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(productData),\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to add product');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    \r\n    // Update a product\r\n    updateProduct: async (productID, productData) => {\r\n      const response = await fetch(`/api/products/${productID}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(productData),\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update product');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    \r\n    // Update product price\r\n    updatePrice: async (productID, price) => {\r\n      const response = await fetch(`/api/products/${productID}/price`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ price }),\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update price');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    \r\n    // Update product stock\r\n    updateStorage: async (productID, stock) => {\r\n      const response = await fetch(`/api/products/${productID}/stock`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ stock }),\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update stock');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    \r\n    // Delete a product\r\n    deleteProduct: async (productID) => {\r\n      const response = await fetch(`/api/products/${productID}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to delete product');\r\n      }\r\n      \r\n      return response.json();\r\n    }\r\n  };\r\n  \r\n  export default productService;\r\n  "],"mappings":"AACA;AACA,MAAMA,cAAc,GAAG;EACnB;EACAC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5CC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,wBAAwB,CAAC;IAChE;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAG,cAAc,EAAE,MAAOC,SAAS,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,SAAS,CAAC,CAAC,CAAC;IAC1D,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBQ,SAAS,EAAE,EAAE;MACzDP,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvCK,OAAO,CAACE,KAAK,CAAC,YAAY,EAAER,SAAS,CAAC,CAAC,CAAC;MACxC,MAAM,IAAIE,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,uBAAuB,CAAC;IAC/D;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAQ,UAAU,EAAE,MAAOC,WAAW,IAAK;IACjC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5Cc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC;MACjCZ,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,uBAAuB,CAAC;IAC/D;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAe,aAAa,EAAE,MAAAA,CAAOX,SAAS,EAAEK,WAAW,KAAK;IAC/C,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBQ,SAAS,EAAE,EAAE;MACzDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC;MACjCZ,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,0BAA0B,CAAC;IAClE;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAgB,WAAW,EAAE,MAAAA,CAAOZ,SAAS,EAAEa,KAAK,KAAK;IACvC,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBQ,SAAS,QAAQ,EAAE;MAC/DM,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEG;MAAM,CAAC,CAAC;MAC/BpB,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,wBAAwB,CAAC;IAChE;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAkB,aAAa,EAAE,MAAAA,CAAOd,SAAS,EAAEe,KAAK,KAAK;IACzC,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBQ,SAAS,QAAQ,EAAE;MAC/DM,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEK;MAAM,CAAC,CAAC;MAC/BtB,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,wBAAwB,CAAC;IAChE;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAoB,aAAa,EAAE,MAAOhB,SAAS,IAAK;IAClC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiBQ,SAAS,EAAE,EAAE;MACzDM,MAAM,EAAE,QAAQ;MAChBb,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,0BAA0B,CAAC;IAClE;IAEA,OAAOP,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB;AACF,CAAC;AAED,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}