{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Desktop/Assignment/Year 4 sem 2/CSCI 3100/Project/merge_1504/csci3100_D7/frontend/src/components/Order.jsx\",\n  _s = $RefreshSig$();\n// src/components/Order.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport orderService from \"../services/orderService\";\nimport productService from \"../services/productService\";\nimport \"./Order.css\";\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Order = ({\n  username\n}) => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [allProducts, setAllProducts] = useState([]);\n  const [filterInput, setFilterInput] = useState(\"\");\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [sortField, setSortField] = useState(\"Date\");\n  const [sortOrder, setSortOrder] = useState(\"Ascending\");\n  const [statusFilter, setStatusFilter] = useState(\"All\");\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!username) {\n      navigate(\"/auth\");\n    }\n  }, [username, navigate]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      try {\n        const data = await orderService.getOrdersByUserId(username);\n        if (data && Array.isArray(data)) {\n          const sortedData = sortOrders(data, \"Date\", \"Ascending\");\n          setOrders(sortedData);\n          setFilteredOrders(sortedData);\n        } else {\n          setOrders([]);\n          setFilteredOrders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message || \"Failed to fetch orders\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (username) {\n      fetchOrders();\n    }\n  }, [username]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await productService.getAllProducts();\n        if (productsData && Array.isArray(productsData.products)) {\n          setAllProducts(productsData.products);\n        } else {\n          setAllProducts([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching products:\", err.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const sortOrders = (orders, field, order) => {\n    return [...orders].sort((a, b) => {\n      let comparison = 0;\n      if (field === \"Date\") {\n        comparison = new Date(a.createdAt) - new Date(b.createdAt);\n      } else if (field === \"Price\") {\n        comparison = a.totalPrice - b.totalPrice;\n      } else if (field === \"Product\") {\n        var _a$products$, _a$products$$productI, _b$products$, _b$products$$productI;\n        const nameA = ((_a$products$ = a.products[0]) === null || _a$products$ === void 0 ? void 0 : (_a$products$$productI = _a$products$.productId) === null || _a$products$$productI === void 0 ? void 0 : _a$products$$productI.productName) || \"\";\n        const nameB = ((_b$products$ = b.products[0]) === null || _b$products$ === void 0 ? void 0 : (_b$products$$productI = _b$products$.productId) === null || _b$products$$productI === void 0 ? void 0 : _b$products$$productI.productName) || \"\";\n        comparison = nameA.localeCompare(nameB);\n      }\n      return order === \"Ascending\" ? comparison : -comparison;\n    });\n  };\n  const handleFilter = () => {\n    const query = filterInput.trim().toLowerCase();\n    const filtered = orders.filter(order => {\n      const matchesOrderId = order.orderId.toLowerCase().startsWith(query);\n      const matchesProductName = order.products.some(product => {\n        var _allProducts$find;\n        const productName = product.productId.productName || ((_allProducts$find = allProducts.find(p => p._id === product.productId)) === null || _allProducts$find === void 0 ? void 0 : _allProducts$find.productName);\n        return productName && productName.toLowerCase().startsWith(query);\n      });\n      return query === \"\" || matchesOrderId || matchesProductName;\n    });\n    const filteredByStatus = statusFilter === \"All\" ? filtered : filtered.filter(order => order.products[0].status === (statusFilter === \"Received\"));\n    setFilteredOrders(filteredByStatus);\n  };\n  const handleSort = field => {\n    const newSortOrder = sortField === field && sortOrder === \"Ascending\" ? \"Descending\" : \"Ascending\";\n    setSortField(field);\n    setSortOrder(newSortOrder);\n    const sorted = sortOrders(filteredOrders, field, newSortOrder);\n    setFilteredOrders(sorted);\n  };\n  const handleStatusFilter = status => {\n    setStatusFilter(status);\n    const filteredByStatus = status === \"All\" ? orders : orders.filter(order => order.products[0].status === (status === \"Received\"));\n    setFilteredOrders(filteredByStatus);\n  };\n  const handleUpdateStatus = async orderId => {\n    try {\n      const updatedOrder = await orderService.updateOrderStatus(orderId, true);\n      setOrders(prevOrders => prevOrders.map(order => order.orderId === updatedOrder.orderId ? updatedOrder : order));\n      setFilteredOrders(prevFilteredOrders => prevFilteredOrders.map(order => order.orderId === updatedOrder.orderId ? updatedOrder : order));\n      setStatusMessage(\"Order status updated successfully!\");\n    } catch (err) {\n      setError(err.message || \"Failed to update order status\");\n      setStatusMessage(\"\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n    message: \"Loading your order history...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"order-title\",\n      children: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-sort-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by Order ID or Product Name\",\n            value: filterInput,\n            onChange: e => setFilterInput(e.target.value),\n            className: \"filter-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFilter,\n            className: \"filter-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusFilter(\"All\"),\n          className: `status-filter-button ${statusFilter === \"All\" ? \"active\" : \"\"}`,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusFilter(\"Shipped\"),\n          className: `status-filter-button ${statusFilter === \"Shipped\" ? \"active\" : \"\"}`,\n          children: \"Shipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusFilter(\"Received\"),\n          className: `status-filter-button ${statusFilter === \"Received\" ? \"active\" : \"\"}`,\n          children: \"Received\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-list\",\n      children: [filteredOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-history-message\",\n        children: \"No order history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"Date\"),\n              children: [\"Date \", sortField === \"Date\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"Product\"),\n              children: [\"Product \", sortField === \"Product\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => handleSort(\"Price\"),\n              children: [\"Total Price \", sortField === \"Price\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(order.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"product-list\",\n                children: order.products.map((product, index) => {\n                  var _allProducts$find2;\n                  const productName = product.productId.productName || ((_allProducts$find2 = allProducts.find(p => p._id === product.productId)) === null || _allProducts$find2 === void 0 ? void 0 : _allProducts$find2.productName);\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"product-list-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"product-name\",\n                      children: productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"product-quantity\",\n                      children: [\"(Quantity: \", product.quantity || 1, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${order.orderId}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-id\",\n                children: [\"Order ID: \", order.orderId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.products[0].status ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-received\",\n                children: \"Received\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-shipped\",\n                children: \"Shipped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: !order.products[0].status && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdateStatus(order.orderId),\n                className: \"update-status-button\",\n                children: \"Update Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, order.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"3uN/1aTuAGGN56FiB+ThIiiOOT4=\", false, function () {\n  return [useNavigate];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","orderService","productService","LoadingSpinner","jsxDEV","_jsxDEV","Order","username","_s","orders","setOrders","loading","setLoading","error","setError","allProducts","setAllProducts","filterInput","setFilterInput","filteredOrders","setFilteredOrders","sortField","setSortField","sortOrder","setSortOrder","statusFilter","setStatusFilter","statusMessage","setStatusMessage","navigate","fetchOrders","data","getOrdersByUserId","Array","isArray","sortedData","sortOrders","err","message","fetchProducts","productsData","getAllProducts","products","console","field","order","sort","a","b","comparison","Date","createdAt","totalPrice","_a$products$","_a$products$$productI","_b$products$","_b$products$$productI","nameA","productId","productName","nameB","localeCompare","handleFilter","query","trim","toLowerCase","filtered","filter","matchesOrderId","orderId","startsWith","matchesProductName","some","product","_allProducts$find","find","p","_id","filteredByStatus","status","handleSort","newSortOrder","sorted","handleStatusFilter","handleUpdateStatus","updatedOrder","updateOrderStatus","prevOrders","map","prevFilteredOrders","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","e","target","onClick","length","toLocaleDateString","index","_allProducts$find2","quantity","toFixed","_c","$RefreshReg$"],"sources":["/Users/thomas/Desktop/Assignment/Year 4 sem 2/CSCI 3100/Project/merge_1504/csci3100_D7/frontend/src/components/Order.jsx"],"sourcesContent":["// src/components/Order.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport orderService from \"../services/orderService\";\nimport productService from \"../services/productService\";\nimport \"./Order.css\";\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Order = ({ username }) => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [allProducts, setAllProducts] = useState([]);\n  const [filterInput, setFilterInput] = useState(\"\");\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [sortField, setSortField] = useState(\"Date\");\n  const [sortOrder, setSortOrder] = useState(\"Ascending\");\n  const [statusFilter, setStatusFilter] = useState(\"All\");\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!username) {\n      navigate(\"/auth\");\n    }\n  }, [username, navigate]);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      setLoading(true);\n      try {\n        const data = await orderService.getOrdersByUserId(username);\n        if (data && Array.isArray(data)) {\n          const sortedData = sortOrders(data, \"Date\", \"Ascending\");\n          setOrders(sortedData);\n          setFilteredOrders(sortedData);\n        } else {\n          setOrders([]);\n          setFilteredOrders([]);\n        }\n        setError(null);\n      } catch (err) {\n        setError(err.message || \"Failed to fetch orders\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (username) {\n      fetchOrders();\n    }\n  }, [username]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsData = await productService.getAllProducts();\n        if (productsData && Array.isArray(productsData.products)) {\n          setAllProducts(productsData.products);\n        } else {\n          setAllProducts([]);\n        }\n      } catch (err) {\n        console.error(\"Error fetching products:\", err.message);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  const sortOrders = (orders, field, order) => {\n    return [...orders].sort((a, b) => {\n      let comparison = 0;\n      if (field === \"Date\") {\n        comparison = new Date(a.createdAt) - new Date(b.createdAt);\n      } else if (field === \"Price\") {\n        comparison = a.totalPrice - b.totalPrice;\n      } else if (field === \"Product\") {\n        const nameA = a.products[0]?.productId?.productName || \"\";\n        const nameB = b.products[0]?.productId?.productName || \"\";\n        comparison = nameA.localeCompare(nameB);\n      }\n      return order === \"Ascending\" ? comparison : -comparison;\n    });\n  };\n\n  const handleFilter = () => {\n    const query = filterInput.trim().toLowerCase();\n\n    const filtered = orders.filter((order) => {\n      const matchesOrderId = order.orderId.toLowerCase().startsWith(query);\n      const matchesProductName = order.products.some((product) => {\n        const productName =\n          product.productId.productName ||\n          allProducts.find((p) => p._id === product.productId)?.productName;\n        return productName && productName.toLowerCase().startsWith(query);\n      });\n\n      return query === \"\" || matchesOrderId || matchesProductName;\n    });\n\n    const filteredByStatus =\n      statusFilter === \"All\"\n        ? filtered\n        : filtered.filter((order) =>\n            order.products[0].status === (statusFilter === \"Received\")\n          );\n\n    setFilteredOrders(filteredByStatus);\n  };\n\n  const handleSort = (field) => {\n    const newSortOrder =\n      sortField === field && sortOrder === \"Ascending\" ? \"Descending\" : \"Ascending\";\n    setSortField(field);\n    setSortOrder(newSortOrder);\n\n    const sorted = sortOrders(filteredOrders, field, newSortOrder);\n    setFilteredOrders(sorted);\n  };\n\n  const handleStatusFilter = (status) => {\n    setStatusFilter(status);\n    const filteredByStatus =\n      status === \"All\"\n        ? orders\n        : orders.filter((order) =>\n            order.products[0].status === (status === \"Received\")\n          );\n    setFilteredOrders(filteredByStatus);\n  };\n\n  const handleUpdateStatus = async (orderId) => {\n    try {\n      const updatedOrder = await orderService.updateOrderStatus(orderId, true);\n      setOrders((prevOrders) =>\n        prevOrders.map((order) => (order.orderId === updatedOrder.orderId ? updatedOrder : order))\n      );\n      setFilteredOrders((prevFilteredOrders) =>\n        prevFilteredOrders.map((order) =>\n          order.orderId === updatedOrder.orderId ? updatedOrder : order\n        )\n      );\n      setStatusMessage(\"Order status updated successfully!\");\n    } catch (err) {\n      setError(err.message || \"Failed to update order status\");\n      setStatusMessage(\"\");\n    }\n  };\n\n  if (loading) return <LoadingSpinner message=\"Loading your order history...\" />;\n\n  return (\n    <div className=\"order-container\">\n      <h1 className=\"order-title\">Order History</h1>\n\n      {/* Filters and Sorting Section */}\n      <div className=\"filter-sort-section\">\n        <div className=\"filter-section\">\n          <div className=\"filter-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by Order ID or Product Name\"\n              value={filterInput}\n              onChange={(e) => setFilterInput(e.target.value)}\n              className=\"filter-input\"\n            />\n            <button onClick={handleFilter} className=\"filter-button\">\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"status-filter-section\">\n          <button\n            onClick={() => handleStatusFilter(\"All\")}\n            className={`status-filter-button ${\n              statusFilter === \"All\" ? \"active\" : \"\"\n            }`}\n          >\n            All\n          </button>\n          <button\n            onClick={() => handleStatusFilter(\"Shipped\")}\n            className={`status-filter-button ${\n              statusFilter === \"Shipped\" ? \"active\" : \"\"\n            }`}\n          >\n            Shipped\n          </button>\n          <button\n            onClick={() => handleStatusFilter(\"Received\")}\n            className={`status-filter-button ${\n              statusFilter === \"Received\" ? \"active\" : \"\"\n            }`}\n          >\n            Received\n          </button>\n        </div>\n      </div>\n\n      {/* Order List */}\n      <div className=\"order-list\">\n        {filteredOrders.length === 0 ? (\n          <p className=\"empty-history-message\">No order history available.</p>\n        ) : (\n          <table className=\"order-table\">\n            <thead>\n              <tr>\n                <th onClick={() => handleSort(\"Date\")}>\n                  Date {sortField === \"Date\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")}\n                </th>\n                <th onClick={() => handleSort(\"Product\")}>\n                  Product {sortField === \"Product\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")}\n                </th>\n                <th onClick={() => handleSort(\"Price\")}>\n                  Total Price {sortField === \"Price\" && (sortOrder === \"Ascending\" ? \"↑\" : \"↓\")}\n                </th>\n                <th>Status</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredOrders.map((order) => (\n                <tr key={order.orderId}>\n                  <td>{new Date(order.createdAt).toLocaleDateString()}</td>\n                  <td>\n                    <ol className=\"product-list\">\n                      {order.products.map((product, index) => {\n                        const productName =\n                          product.productId.productName ||\n                          allProducts.find((p) => p._id === product.productId)?.productName;\n                        return (\n                          <li key={`${order.orderId}-${index}`} className=\"product-list-item\">\n                            <span className=\"product-name\">{productName}</span>\n                            <span className=\"product-quantity\">\n                              (Quantity: {product.quantity || 1})\n                            </span>\n                          </li>\n                        );\n                      })}\n                    </ol>\n                    <div className=\"order-id\">Order ID: {order.orderId}</div>\n                  </td>\n                  <td>${order.totalPrice.toFixed(2)}</td>\n                  <td>\n                    {order.products[0].status ? (\n                      <span className=\"status-received\">Received</span>\n                    ) : (\n                      <span className=\"status-shipped\">Shipped</span>\n                    )}\n                  </td>\n                  <td>\n                    {!order.products[0].status && (\n                      <button\n                        onClick={() => handleUpdateStatus(order.orderId)}\n                        className=\"update-status-button\"\n                      >\n                        Update Status\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n        {statusMessage && <p className=\"status-message\">{statusMessage}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Order;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}