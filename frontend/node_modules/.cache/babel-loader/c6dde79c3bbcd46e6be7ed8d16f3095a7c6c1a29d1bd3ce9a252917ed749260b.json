{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Desktop/Assignment/Year 4 sem 2/CSCI 3100/Project/merge/csci3100_D7/frontend/src/components/Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useNavigate } from 'react';\nimport cartService from '../services/cartService';\nimport productService from \"../services/productService\";\nimport CartItem from './CartItem'; // Import the CartItem component\nimport './Cart.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = ({\n  username\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [productStocks, setProductStocks] = useState({}); // To store product stock information\n  const [productPrice, setProductPrice] = useState([]);\n  const [subtotal, setSubtotal] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await cartService.getCart(username);\n        console.log('Cart data:', response); // Log the response data\n        if (response.length > 0 && response[0].cart.items) {\n          setCartItems(response[0].cart.items); // Set cart items from the first element\n          setSubtotal(response[0].subtotal);\n          await fetchProductStocks(response[0].cart.items); // Fetch product stocks\n          await fetchProductPrice(response[0].cart.items);\n        } else {\n          setCartItems([]); // Set to empty array if items are not present \n        }\n      } catch (err) {\n        setCartItems([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCart();\n  }, [username]);\n  const fetchCart = async () => {\n    try {\n      const response = await cartService.getCart(username);\n      console.log('Cart data:', response); // Log the response data\n      if (response.length > 0 && response[0].cart.items) {\n        setCartItems(response[0].cart.items); // Set cart items from the first element\n        setSubtotal(response[0].subtotal);\n        await fetchProductStocks(response[0].cart.items); // Fetch product stocks\n        await fetchProductPrice(response[0].cart.items);\n      } else {\n        setCartItems([]); // Set to empty array if items are not present \n      }\n    } catch (err) {\n      setCartItems([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchProductStocks = async items => {\n    const stocks = {};\n    await Promise.all(items.map(async item => {\n      try {\n        const product = await productService.getProductById(item.productId.productID);\n        stocks[item.productId.productID] = product.product.productStorage - product.product.productReservation;\n      } catch (err) {\n        console.error('Error fetching product stock:', err);\n      }\n    }));\n    setProductStocks(stocks); // Set the stocks state\n  };\n  const fetchProductPrice = async items => {\n    const price = {};\n    await Promise.all(items.map(async item => {\n      try {\n        const product = await productService.getProductById(item.productId.productID);\n        price[item.productId.productID] = product.product.productPrice;\n      } catch (err) {\n        console.error(\"Error fetching product price:\", err);\n      }\n    }));\n    setProductPrice(price);\n    console.log(\"2nd\", price);\n  };\n  const handleRemove = async productId => {\n    console.log('Removing product with ID:', productId);\n    try {\n      const updatedCart = await cartService.removeFromCart(username, productId);\n      setCartItems(updatedCart.items);\n      fetchProductStocks(updatedCart.items); // Update stocks after removal\n      fetchProductPrice(updatedCart.items);\n    } catch (err) {\n      console.error('Error removing from cart:', err);\n      setError(err.message);\n    }\n    const response = await cartService.getCart(username);\n    setSubtotal(response[0].subtotal);\n    fetchCart();\n  };\n  const handleUpdateQuantity = async (productId, quantity) => {\n    try {\n      const updatedCart = await cartService.updateCart(username, productId, quantity);\n      console.log('Updated Cart from DB:', updatedCart); // Log the entire updated cart\n\n      // Update the cart items in the state\n      setCartItems(prevItems => prevItems.map(item => item.productId.productID === productId ? {\n        ...item,\n        quantity\n      } : item));\n    } catch (error) {\n      console.error('Error updating cart:', error);\n    }\n    const response = await cartService.getCart(username);\n    setSubtotal(response[0].subtotal);\n  };\n  const handleBuyNow = async () => {\n    let errorMessage = null;\n    for (const item of cartItems) {\n      const availableStock = productStocks[item.productId.productID] || 0;\n      if (item.quantity > availableStock) {\n        errorMessage = `Out of stock for product ${item.productId.productName}. Available: ${availableStock}, Requested: ${item.quantity}`;\n        break; // Exit loop on first error\n      }\n    }\n    if (errorMessage) {\n      setError(errorMessage); // Set the error message\n    } else {\n      // Proceed with the purchase process\n      try {\n        navigate('/reservations', {\n          state: {\n            cartItems\n          }\n        });\n        console.log(\"Proceeding to buy items:\", cartItems);\n        // Add your purchase logic here\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading cart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 23\n  }, this);\n  if (!cartItems.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Your cart is empty.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"cart-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n          item: {\n            ...item,\n            availableStock: productStocks[item.productId.productID],\n            productPrice: productPrice[item.productId.productID]\n          } // Pass available stock\n          ,\n          onQuantityChange: handleUpdateQuantity // Pass the quantity change handler\n          ,\n          onRemove: handleRemove\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-total\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total: $\", subtotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBuyNow,\n      children: \"Buy Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"1O6vljEIBvvSOI6GPtEjua5mPro=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","cartService","productService","CartItem","jsxDEV","_jsxDEV","Cart","username","_s","cartItems","setCartItems","loading","setLoading","error","setError","productStocks","setProductStocks","productPrice","setProductPrice","subtotal","setSubtotal","navigate","fetchCart","response","getCart","console","log","length","cart","items","fetchProductStocks","fetchProductPrice","err","stocks","Promise","all","map","item","product","getProductById","productId","productID","productStorage","productReservation","price","handleRemove","updatedCart","removeFromCart","message","handleUpdateQuantity","quantity","updateCart","prevItems","handleBuyNow","errorMessage","availableStock","productName","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onQuantityChange","onRemove","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/thomas/Desktop/Assignment/Year 4 sem 2/CSCI 3100/Project/merge/csci3100_D7/frontend/src/components/Cart.jsx"],"sourcesContent":["import React, { useEffect, useState, useNavigate } from 'react';\nimport cartService from '../services/cartService';\nimport productService from \"../services/productService\";\nimport CartItem from './CartItem'; // Import the CartItem component\nimport './Cart.css'; // Import CSS for styling\n\nconst Cart = ({ username }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [productStocks, setProductStocks] = useState({}); // To store product stock information\n  const[productPrice, setProductPrice] = useState([]);\n  const[subtotal, setSubtotal] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await cartService.getCart(username);\n        console.log('Cart data:', response); // Log the response data\n        if (response.length > 0 && response[0].cart.items) {\n          setCartItems(response[0].cart.items); // Set cart items from the first element\n          setSubtotal(response[0].subtotal);\n          await fetchProductStocks(response[0].cart.items); // Fetch product stocks\n          await fetchProductPrice(response[0].cart.items);\n        } else {\n          setCartItems([]); // Set to empty array if items are not present \n        }\n      } catch (err) {\n        setCartItems([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCart();\n  }, [username]);\n\n\n  const fetchCart = async () => {\n    try {\n      const response = await cartService.getCart(username);\n      console.log('Cart data:', response); // Log the response data\n      if (response.length > 0 && response[0].cart.items) {\n        setCartItems(response[0].cart.items); // Set cart items from the first element\n        setSubtotal(response[0].subtotal);\n        await fetchProductStocks(response[0].cart.items); // Fetch product stocks\n        await fetchProductPrice(response[0].cart.items);\n      } else {\n        setCartItems([]); // Set to empty array if items are not present \n      }\n    } catch (err) {\n      setCartItems([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const fetchProductStocks = async (items) => {\n    const stocks = {};\n    await Promise.all(items.map(async (item) => {\n      try {\n        const product = await productService.getProductById(item.productId.productID);\n        stocks[item.productId.productID] = product.product.productStorage - product.product.productReservation;\n      } catch (err) {\n        console.error('Error fetching product stock:', err);\n      }\n    }));\n    setProductStocks(stocks); // Set the stocks state\n  };\n\n  const fetchProductPrice = async (items) => {\n    const price = {};\n    await Promise.all(items.map(async (item) => {\n      try{\n        const product = await productService.getProductById(item.productId.productID);\n        price[item.productId.productID] = product.product.productPrice;\n      } catch (err) {\n        console.error(\"Error fetching product price:\", err)\n      }\n    }));\n    setProductPrice(price);\n    console.log(\"2nd\", price);\n  }\n\n  const handleRemove = async (productId) => {\n    console.log('Removing product with ID:', productId);\n    try {\n      const updatedCart = await cartService.removeFromCart(username, productId);\n      setCartItems(updatedCart.items);\n      fetchProductStocks(updatedCart.items); // Update stocks after removal\n      fetchProductPrice(updatedCart.items);\n    } catch (err) {\n      console.error('Error removing from cart:', err);\n      setError(err.message);\n    }\n    const response = await cartService.getCart(username);\n    setSubtotal(response[0].subtotal);\n    fetchCart();\n  };\n\n  const handleUpdateQuantity = async (productId, quantity) => {\n    try {\n      const updatedCart = await cartService.updateCart(username, productId, quantity);\n      console.log('Updated Cart from DB:', updatedCart); // Log the entire updated cart\n  \n      // Update the cart items in the state\n      setCartItems((prevItems) =>\n        prevItems.map((item) =>\n          item.productId.productID === productId ? { ...item, quantity } : item\n        )\n      );\n    } catch (error) {\n      console.error('Error updating cart:', error);\n    }\n    const response = await cartService.getCart(username);\n    setSubtotal(response[0].subtotal);\n  };\n  \n\n  const handleBuyNow = async () => {\n    let errorMessage = null;\n\n    for (const item of cartItems) {\n      const availableStock = productStocks[item.productId.productID] || 0;\n      if (item.quantity > availableStock) {\n        errorMessage = `Out of stock for product ${item.productId.productName}. Available: ${availableStock}, Requested: ${item.quantity}`;\n        break; // Exit loop on first error\n      }\n    }\n\n    if (errorMessage) {\n      setError(errorMessage); // Set the error message\n    } else {\n      // Proceed with the purchase process\n      try {\n        navigate('/reservations', { state: { cartItems } });\n        console.log(\"Proceeding to buy items:\", cartItems);\n        // Add your purchase logic here\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  };\n\n  if (loading) return <p>Loading cart...</p>;\n  if (!cartItems.length) return <p>Your cart is empty.</p>;\n\n  return (\n    <div className=\"cart-container\">\n      <h1>Your Shopping Cart</h1>\n      <table className=\"cart-table\">\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Quantity</th>\n            <th>Available Stock</th>\n            <th>Price</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cartItems.map((item) => (\n            <CartItem\n              key={item._id}\n              item={{ ...item, availableStock: productStocks[item.productId.productID], productPrice: productPrice[item.productId.productID] }} // Pass available stock\n              onQuantityChange={handleUpdateQuantity} // Pass the quantity change handler\n              onRemove={handleRemove}\n            />\n          ))}\n        </tbody>\n      </table>\n      {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n      <div className=\"cart-total\">\n        <h2>\n          Total: ${subtotal}\n        </h2>\n      </div>\n      <button onClick={handleBuyNow}>Buy Now</button>\n    </div>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}