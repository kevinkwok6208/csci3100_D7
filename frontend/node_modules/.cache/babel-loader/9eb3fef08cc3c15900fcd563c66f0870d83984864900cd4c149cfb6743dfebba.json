{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/SalesAnalytics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './SalesAnalytics.css';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement, ArcElement } from 'chart.js';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement, ArcElement);\nconst SalesAnalytics = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [dateFilterActive, setDateFilterActive] = useState(false);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('https://localhost:5443/api/orderhistories/all');\n        setOrders(response.data);\n        setFilteredOrders(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch orders');\n        setLoading(false);\n      }\n    };\n    fetchOrders();\n  }, []);\n\n  // Apply date filter to orders\n  useEffect(() => {\n    if (startDate && endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      end.setHours(23, 59, 59, 999); // Set to end of day\n\n      const filtered = orders.filter(order => {\n        const orderDate = new Date(order.createdAt);\n        return orderDate >= start && orderDate <= end;\n      });\n      setFilteredOrders(filtered);\n      setDateFilterActive(true);\n    } else {\n      setFilteredOrders(orders);\n      setDateFilterActive(false);\n    }\n  }, [startDate, endDate, orders]);\n  const downloadAllExcel = () => {\n    window.location.href = 'https://localhost:5443/api/orderhistories/export';\n  };\n  const downloadFilteredExcel = () => {\n    if (!startDate || !endDate) {\n      alert('Please select both start and end dates');\n      return;\n    }\n    window.location.href = `https://localhost:5443/api/orderhistories/export-by-date?startDate=${startDate}&endDate=${endDate}`;\n  };\n  const clearDateFilter = () => {\n    setStartDate('');\n    setEndDate('');\n    setDateFilterActive(false);\n  };\n\n  // Calculate analytics data for charts\n  const calculateAnalyticsData = () => {\n    const displayedOrders = dateFilterActive ? filteredOrders : orders;\n\n    // 1. Top Products by Units Sold\n    const productSales = {};\n    displayedOrders.forEach(order => {\n      order.products.forEach(product => {\n        var _product$productId;\n        const productName = ((_product$productId = product.productId) === null || _product$productId === void 0 ? void 0 : _product$productId.productName) || 'Unknown Product';\n        if (!productSales[productName]) {\n          productSales[productName] = 0;\n        }\n        productSales[productName] += product.quantity;\n      });\n    });\n\n    // Sort products by quantity sold and get top 5\n    const topProducts = Object.entries(productSales).sort((a, b) => b[1] - a[1]).slice(0, 5);\n\n    // 2. Average Order Value (AOV)\n    const orderValues = displayedOrders.map(order => order.totalPrice);\n    const averageOrderValue = orderValues.length > 0 ? orderValues.reduce((sum, value) => sum + value, 0) / orderValues.length : 0;\n\n    // 3. Total Sales Revenue\n    const totalRevenue = displayedOrders.reduce((sum, order) => sum + order.totalPrice, 0);\n\n    // 4. Sales Trend (by date)\n    const salesByDate = {};\n    displayedOrders.forEach(order => {\n      const date = new Date(order.createdAt).toLocaleDateString();\n      if (!salesByDate[date]) {\n        salesByDate[date] = 0;\n      }\n      salesByDate[date] += order.totalPrice;\n    });\n\n    // Sort dates chronologically\n    const sortedDates = Object.keys(salesByDate).sort((a, b) => new Date(a) - new Date(b));\n    const salesTrendData = sortedDates.map(date => salesByDate[date]);\n    return {\n      topProducts,\n      averageOrderValue,\n      totalRevenue,\n      salesByDate: {\n        labels: sortedDates,\n        data: salesTrendData\n      }\n    };\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n    message: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 23\n  }, this);\n\n  // Calculate analytics data\n  const analyticsData = calculateAnalyticsData();\n  const displayedOrders = dateFilterActive ? filteredOrders : orders;\n\n  // Chart configurations\n  const topProductsChartData = {\n    labels: analyticsData.topProducts.map(product => product[0]),\n    datasets: [{\n      label: 'Units Sold',\n      data: analyticsData.topProducts.map(product => product[1]),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const salesTrendChartData = {\n    labels: analyticsData.salesByDate.labels,\n    datasets: [{\n      label: 'Daily Sales Revenue',\n      data: analyticsData.salesByDate.data,\n      fill: false,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      tension: 0.1\n    }]\n  };\n\n  // Calculate order counts by month (for yearly trend)\n  const getMonthlyData = () => {\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const monthlySales = Array(12).fill(0);\n    displayedOrders.forEach(order => {\n      const date = new Date(order.createdAt);\n      const month = date.getMonth();\n      monthlySales[month] += order.totalPrice;\n    });\n    return {\n      labels: monthNames,\n      data: monthlySales\n    };\n  };\n  const monthlyData = getMonthlyData();\n  const monthlySalesChartData = {\n    labels: monthlyData.labels,\n    datasets: [{\n      label: 'Monthly Sales Revenue',\n      data: monthlyData.data,\n      backgroundColor: 'rgba(255, 159, 64, 0.6)',\n      borderColor: 'rgba(255, 159, 64, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Average Order Value chart (single value displayed as gauge/pie)\n  const aovChartData = {\n    labels: ['Average Order Value', 'Remaining'],\n    datasets: [{\n      data: [analyticsData.averageOrderValue, 100 - analyticsData.averageOrderValue],\n      backgroundColor: ['rgba(153, 102, 255, 0.6)', 'rgba(201, 203, 207, 0.3)'],\n      borderWidth: 0\n    }]\n  };\n\n  // Add this function at the top of your component\n  const getResponsiveChartOptions = title => {\n    const isMobile = window.innerWidth < 768;\n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: isMobile ? 'bottom' : 'top',\n          labels: {\n            boxWidth: isMobile ? 10 : 40,\n            font: {\n              size: isMobile ? 10 : 12\n            }\n          }\n        },\n        title: {\n          display: true,\n          text: title,\n          font: {\n            size: isMobile ? 14 : 16\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            maxRotation: isMobile ? 90 : 0,\n            minRotation: isMobile ? 90 : 0,\n            font: {\n              size: isMobile ? 8 : 12\n            }\n          }\n        },\n        y: {\n          ticks: {\n            font: {\n              size: isMobile ? 8 : 12\n            }\n          }\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales-analytics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sales Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filter Orders by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), dateFilterActive && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-filter-btn\",\n          onClick: clearDateFilter,\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dateFilterActive ? 'Filtered Orders' : 'Total Orders'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayedOrders.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dateFilterActive ? 'Filtered Revenue' : 'Total Revenue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", analyticsData.totalRevenue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Order Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", analyticsData.averageOrderValue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Products by Units Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), analyticsData.topProducts.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n          data: topProductsChartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: 'Top 5 Products by Units Sold'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No product data available for the selected period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sales Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), analyticsData.salesByDate.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          data: salesTrendChartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: 'Daily Sales Trend'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No sales data available for the selected period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Monthly Sales Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: monthlySalesChartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              title: {\n                display: true,\n                text: 'Sales by Month'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container aov-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Average Order Value (AOV)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aov-display\",\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: aovChartData,\n            options: {\n              responsive: true,\n              plugins: {\n                legend: {\n                  display: false\n                },\n                tooltip: {\n                  callbacks: {\n                    label: function (context) {\n                      if (context.dataIndex === 0) {\n                        return `$${analyticsData.averageOrderValue.toFixed(2)}`;\n                      }\n                      return '';\n                    }\n                  }\n                }\n              },\n              cutout: '70%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aov-center-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"aov-value\",\n              children: [\"$\", analyticsData.averageOrderValue.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"aov-label\",\n              children: \"Avg. Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: downloadAllExcel,\n        children: \"Download All Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: downloadFilteredExcel,\n        disabled: !startDate || !endDate,\n        children: [\"Download \", dateFilterActive ? 'Filtered' : 'Selected Date Range', \" Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: dateFilterActive ? 'Filtered Orders' : 'Recent Orders'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this), displayedOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found for the selected date range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedOrders.slice(0, 10).map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.orderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(order.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 37\n            }, this)]\n          }, order.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 9\n  }, this);\n};\n_s(SalesAnalytics, \"u5OtWIt4FQ1xax17ncfkx4NntJM=\");\n_c = SalesAnalytics;\nexport default SalesAnalytics;\nvar _c;\n$RefreshReg$(_c, \"SalesAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","axios","LoadingSpinner","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","ArcElement","Bar","Line","Pie","jsxDEV","_jsxDEV","register","SalesAnalytics","_s","orders","setOrders","loading","setLoading","error","setError","startDate","setStartDate","endDate","setEndDate","filteredOrders","setFilteredOrders","dateFilterActive","setDateFilterActive","fetchOrders","response","get","data","err","start","Date","end","setHours","filtered","filter","order","orderDate","createdAt","downloadAllExcel","window","location","href","downloadFilteredExcel","alert","clearDateFilter","calculateAnalyticsData","displayedOrders","productSales","forEach","products","product","_product$productId","productName","productId","quantity","topProducts","Object","entries","sort","a","b","slice","orderValues","map","totalPrice","averageOrderValue","length","reduce","sum","value","totalRevenue","salesByDate","date","toLocaleDateString","sortedDates","keys","salesTrendData","labels","message","fileName","_jsxFileName","lineNumber","columnNumber","children","analyticsData","topProductsChartData","datasets","label","backgroundColor","borderColor","borderWidth","salesTrendChartData","fill","tension","getMonthlyData","monthNames","monthlySales","Array","month","getMonth","monthlyData","monthlySalesChartData","aovChartData","getResponsiveChartOptions","title","isMobile","innerWidth","responsive","maintainAspectRatio","plugins","legend","position","boxWidth","font","size","display","text","scales","x","ticks","maxRotation","minRotation","y","className","type","onChange","e","target","onClick","toFixed","options","tooltip","callbacks","context","dataIndex","cutout","disabled","orderId","Name","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/SalesAnalytics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './SalesAnalytics.css';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { \r\n  Chart as ChartJS, \r\n  CategoryScale, \r\n  LinearScale, \r\n  BarElement, \r\n  Title, \r\n  Tooltip, \r\n  Legend,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement\r\n} from 'chart.js';\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale, \r\n  LinearScale, \r\n  BarElement, \r\n  Title, \r\n  Tooltip, \r\n  Legend,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement\r\n);\r\n\r\nconst SalesAnalytics = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [filteredOrders, setFilteredOrders] = useState([]);\r\n    const [dateFilterActive, setDateFilterActive] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        const fetchOrders = async () => {\r\n            try {\r\n                const response = await axios.get('https://localhost:5443/api/orderhistories/all');\r\n                setOrders(response.data);\r\n                setFilteredOrders(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Failed to fetch orders');\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchOrders();\r\n    }, []);\r\n    \r\n    // Apply date filter to orders\r\n    useEffect(() => {\r\n        if (startDate && endDate) {\r\n            const start = new Date(startDate);\r\n            const end = new Date(endDate);\r\n            end.setHours(23, 59, 59, 999); // Set to end of day\r\n            \r\n            const filtered = orders.filter(order => {\r\n                const orderDate = new Date(order.createdAt);\r\n                return orderDate >= start && orderDate <= end;\r\n            });\r\n            \r\n            setFilteredOrders(filtered);\r\n            setDateFilterActive(true);\r\n        } else {\r\n            setFilteredOrders(orders);\r\n            setDateFilterActive(false);\r\n        }\r\n    }, [startDate, endDate, orders]);\r\n    \r\n    const downloadAllExcel = () => {\r\n        window.location.href = 'https://localhost:5443/api/orderhistories/export';\r\n    };\r\n    \r\n    const downloadFilteredExcel = () => {\r\n        if (!startDate || !endDate) {\r\n            alert('Please select both start and end dates');\r\n            return;\r\n        }\r\n        \r\n        window.location.href = `https://localhost:5443/api/orderhistories/export-by-date?startDate=${startDate}&endDate=${endDate}`;\r\n    };\r\n\r\n    \r\n    \r\n    const clearDateFilter = () => {\r\n        setStartDate('');\r\n        setEndDate('');\r\n        setDateFilterActive(false);\r\n    };\r\n    \r\n    // Calculate analytics data for charts\r\n    const calculateAnalyticsData = () => {\r\n        const displayedOrders = dateFilterActive ? filteredOrders : orders;\r\n        \r\n        // 1. Top Products by Units Sold\r\n        const productSales = {};\r\n        displayedOrders.forEach(order => {\r\n            order.products.forEach(product => {\r\n                const productName = product.productId?.productName || 'Unknown Product';\r\n                if (!productSales[productName]) {\r\n                    productSales[productName] = 0;\r\n                }\r\n                productSales[productName] += product.quantity;\r\n            });\r\n        });\r\n\r\n        // Sort products by quantity sold and get top 5\r\n        const topProducts = Object.entries(productSales)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .slice(0, 5);\r\n\r\n        // 2. Average Order Value (AOV)\r\n        const orderValues = displayedOrders.map(order => order.totalPrice);\r\n        const averageOrderValue = orderValues.length > 0 \r\n            ? orderValues.reduce((sum, value) => sum + value, 0) / orderValues.length \r\n            : 0;\r\n\r\n        // 3. Total Sales Revenue\r\n        const totalRevenue = displayedOrders.reduce((sum, order) => sum + order.totalPrice, 0);\r\n\r\n        // 4. Sales Trend (by date)\r\n        const salesByDate = {};\r\n        displayedOrders.forEach(order => {\r\n            const date = new Date(order.createdAt).toLocaleDateString();\r\n            if (!salesByDate[date]) {\r\n                salesByDate[date] = 0;\r\n            }\r\n            salesByDate[date] += order.totalPrice;\r\n        });\r\n\r\n        // Sort dates chronologically\r\n        const sortedDates = Object.keys(salesByDate).sort((a, b) => new Date(a) - new Date(b));\r\n        const salesTrendData = sortedDates.map(date => salesByDate[date]);\r\n\r\n        return {\r\n            topProducts,\r\n            averageOrderValue,\r\n            totalRevenue,\r\n            salesByDate: {\r\n                labels: sortedDates,\r\n                data: salesTrendData\r\n            }\r\n        };\r\n    };\r\n\r\n    if (loading) return <LoadingSpinner message=\"Loading...\" />;\r\n    if (error) return <div>{error}</div>;\r\n    \r\n    // Calculate analytics data\r\n    const analyticsData = calculateAnalyticsData();\r\n    const displayedOrders = dateFilterActive ? filteredOrders : orders;\r\n    \r\n    // Chart configurations\r\n    const topProductsChartData = {\r\n        labels: analyticsData.topProducts.map(product => product[0]),\r\n        datasets: [\r\n            {\r\n                label: 'Units Sold',\r\n                data: analyticsData.topProducts.map(product => product[1]),\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const salesTrendChartData = {\r\n        labels: analyticsData.salesByDate.labels,\r\n        datasets: [\r\n            {\r\n                label: 'Daily Sales Revenue',\r\n                data: analyticsData.salesByDate.data,\r\n                fill: false,\r\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                tension: 0.1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Calculate order counts by month (for yearly trend)\r\n    const getMonthlyData = () => {\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const monthlySales = Array(12).fill(0);\r\n        \r\n        displayedOrders.forEach(order => {\r\n            const date = new Date(order.createdAt);\r\n            const month = date.getMonth();\r\n            monthlySales[month] += order.totalPrice;\r\n        });\r\n        \r\n        return {\r\n            labels: monthNames,\r\n            data: monthlySales\r\n        };\r\n    };\r\n\r\n    const monthlyData = getMonthlyData();\r\n    \r\n    const monthlySalesChartData = {\r\n        labels: monthlyData.labels,\r\n        datasets: [\r\n            {\r\n                label: 'Monthly Sales Revenue',\r\n                data: monthlyData.data,\r\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\r\n                borderColor: 'rgba(255, 159, 64, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Average Order Value chart (single value displayed as gauge/pie)\r\n    const aovChartData = {\r\n        labels: ['Average Order Value', 'Remaining'],\r\n        datasets: [\r\n            {\r\n                data: [analyticsData.averageOrderValue, 100 - analyticsData.averageOrderValue],\r\n                backgroundColor: [\r\n                    'rgba(153, 102, 255, 0.6)',\r\n                    'rgba(201, 203, 207, 0.3)',\r\n                ],\r\n                borderWidth: 0,\r\n            },\r\n        ],\r\n    };\r\n\r\n\r\n    // Add this function at the top of your component\r\n      const getResponsiveChartOptions = (title) => {\r\n        const isMobile = window.innerWidth < 768;\r\n        \r\n        return {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              position: isMobile ? 'bottom' : 'top',\r\n              labels: {\r\n                boxWidth: isMobile ? 10 : 40,\r\n                font: {\r\n                  size: isMobile ? 10 : 12\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: title,\r\n              font: {\r\n                size: isMobile ? 14 : 16\r\n              }\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              ticks: {\r\n                maxRotation: isMobile ? 90 : 0,\r\n                minRotation: isMobile ? 90 : 0,\r\n                font: {\r\n                  size: isMobile ? 8 : 12\r\n                }\r\n              }\r\n            },\r\n            y: {\r\n              ticks: {\r\n                font: {\r\n                  size: isMobile ? 8 : 12\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n\r\n    \r\n    return (\r\n        <div className=\"sales-analytics-container\">\r\n            <section className=\"spacing\"></section>\r\n            <h1>Sales Analytics</h1>\r\n            \r\n            <div className=\"date-filter-container\">\r\n                <h2>Filter Orders by Date</h2>\r\n                <div className=\"date-inputs\">\r\n                    <div className=\"date-input-group\">\r\n                        <label>Start Date:</label>\r\n                        <input \r\n                            type=\"date\" \r\n                            value={startDate} \r\n                            onChange={(e) => setStartDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"date-input-group\">\r\n                        <label>End Date:</label>\r\n                        <input \r\n                            type=\"date\" \r\n                            value={endDate} \r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {dateFilterActive && (\r\n                        <button className=\"clear-filter-btn\" onClick={clearDateFilter}>\r\n                            Clear Filter\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"analytics-summary\">\r\n                <div className=\"summary-card\">\r\n                    <h3>{dateFilterActive ? 'Filtered Orders' : 'Total Orders'}</h3>\r\n                    <p>{displayedOrders.length}</p>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                    <h3>{dateFilterActive ? 'Filtered Revenue' : 'Total Revenue'}</h3>\r\n                    <p>${analyticsData.totalRevenue.toFixed(2)}</p>\r\n                </div>\r\n                <div className=\"summary-card\">\r\n                    <h3>Average Order Value</h3>\r\n                    <p>${analyticsData.averageOrderValue.toFixed(2)}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"analytics-charts\">\r\n                <div className=\"chart-container\">\r\n                    <h2>Top Products by Units Sold</h2>\r\n                    {analyticsData.topProducts.length > 0 ? (\r\n                        <Bar \r\n                            data={topProductsChartData} \r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: 'top',\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Top 5 Products by Units Sold',\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <p>No product data available for the selected period</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"chart-container\">\r\n                    <h2>Sales Trend</h2>\r\n                    {analyticsData.salesByDate.labels.length > 0 ? (\r\n                        <Line \r\n                            data={salesTrendChartData}\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: 'top',\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Daily Sales Trend',\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <p>No sales data available for the selected period</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"chart-container\">\r\n                    <h2>Monthly Sales Distribution</h2>\r\n                    <Bar \r\n                        data={monthlySalesChartData}\r\n                        options={{\r\n                            responsive: true,\r\n                            plugins: {\r\n                                legend: {\r\n                                    position: 'top',\r\n                                },\r\n                                title: {\r\n                                    display: true,\r\n                                    text: 'Sales by Month',\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"chart-container aov-chart\">\r\n                    <h2>Average Order Value (AOV)</h2>\r\n                    <div className=\"aov-display\">\r\n                        <Pie \r\n                            data={aovChartData}\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        display: false,\r\n                                    },\r\n                                    tooltip: {\r\n                                        callbacks: {\r\n                                            label: function(context) {\r\n                                                if (context.dataIndex === 0) {\r\n                                                    return `$${analyticsData.averageOrderValue.toFixed(2)}`;\r\n                                                }\r\n                                                return '';\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                },\r\n                                cutout: '70%',\r\n                            }}\r\n                        />\r\n                        <div className=\"aov-center-text\">\r\n                            <span className=\"aov-value\">${analyticsData.averageOrderValue.toFixed(2)}</span>\r\n                            <span className=\"aov-label\">Avg. Order</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"download-options\">\r\n                <button className=\"download-btn\" onClick={downloadAllExcel}>\r\n                    Download All Orders\r\n                </button>\r\n                \r\n                <button \r\n                    className=\"download-btn\" \r\n                    onClick={downloadFilteredExcel}\r\n                    disabled={!startDate || !endDate}\r\n                >\r\n                    Download {dateFilterActive ? 'Filtered' : 'Selected Date Range'} Orders\r\n                </button>\r\n            </div>\r\n            \r\n            <div className=\"orders-table\">\r\n                <h2>{dateFilterActive ? 'Filtered Orders' : 'Recent Orders'}</h2>\r\n                {displayedOrders.length === 0 ? (\r\n                    <p>No orders found for the selected date range</p>\r\n                ) : (\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Order ID</th>\r\n                                <th>Customer</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayedOrders.slice(0, 10).map(order => (\r\n                                <tr key={order.orderId}>\r\n                                    <td>{order.orderId}</td>\r\n                                    <td>{order.Name}</td>\r\n                                    <td>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                                    <td>${order.totalPrice.toFixed(2)}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesAnalytics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}