{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dunca\\\\OneDrive\\\\\\u684C\\u9762\\\\CSCI 3100 Clone Store\\\\csci3100_D7\\\\frontend\\\\src\\\\components\\\\Auth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth({\n  setIsLoggedIn,\n  setUsername,\n  setIsAdmin\n}) {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(false); // For toggling between login and signup\n  const [username, setLocalUsername] = useState(\"\"); // For signup\n  const [email, setEmail] = useState(\"\"); // For signup and login\n  const [password, setPassword] = useState(\"\"); // For signup and login\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // For signup\n  const [otp, setOtp] = useState(\"\"); // For email verification\n  const [isRegistered, setIsRegistered] = useState(false); // Step tracking for signup verification\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error messages\n  const [statusMessage, setStatusMessage] = useState(\"\"); // Temporary success messages\n  const [successMessage, setSuccessMessage] = useState(\"\"); // Persistent success message for login form\n\n  const navigate = useNavigate();\n\n  // Handle Login\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await authService.login(email, password);\n      console.log(\"Login successful:\", response);\n\n      // Update parent state\n      setIsLoggedIn(true);\n      setUsername(response.username);\n      setIsAdmin(response.isadmin === 1);\n\n      // Store email in localStorage\n      localStorage.setItem(\"userEmail\", email);\n\n      // Redirect to home page\n      navigate(\"/\");\n    } catch (err) {\n      setError(err.message || \"Login failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Registration\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n\n    // Validate password match\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match!\");\n      setLoading(false);\n      return;\n    }\n    try {\n      await authService.register(username, email, password);\n      setStatusMessage(\"Registration successful! Please verify your email.\");\n      setIsRegistered(true); // Proceed to OTP verification step\n    } catch (err) {\n      setError(err.message || \"An error occurred during registration.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Email Verification\n  const handleVerifyEmail = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n\n    // Validate inputs\n    if (!email || !otp) {\n      setError(\"Email and OTP are required.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      await authService.verifyEmail(email, otp);\n      setStatusMessage(\"Email verified successfully! Redirecting to login...\");\n\n      // Slide back to the login form\n      setIsRegistered(false); // Reset registration step\n      setIsSignUp(false); // Slide back to the login form\n      setSuccessMessage(\"Registration successful! You can now log in.\"); // Set persistent success message\n    } catch (err) {\n      setError(err.message || \"An error occurred during email verification.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Resend OTP\n  const handleResendOTP = async () => {\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n    try {\n      await authService.resendEmailOTP(email);\n      setStatusMessage(\"OTP has been resent to your email.\");\n    } catch (err) {\n      setError(err.message || \"Failed to resend OTP.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle Form\n  const toggleForm = () => {\n    setIsSignUp(prevState => !prevState);\n    setError(null); // Clear errors when toggling\n    setStatusMessage(\"\");\n    setSuccessMessage(\"\"); // Clear persistent success message when toggling to signup\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `forms-container ${isSignUp ? \"sign-up-active\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome back! Login to access your account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: \"input-field\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"input-field\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-button\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Logging in...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form signup-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegistered ? \"Verify Email\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), !isRegistered ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            className: \"input-field\",\n            value: username,\n            onChange: e => setLocalUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: \"input-field\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"input-field\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: \"input-field\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-button\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Registering...\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyEmail,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            className: \"input-field\",\n            value: email,\n            disabled: true // Email is pre-filled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            className: \"input-field\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-button\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Verifying...\" : \"Verify Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"auth-button\",\n            onClick: handleResendOTP,\n            disabled: loading,\n            children: loading ? \"Resending...\" : \"Resend OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message success\",\n          children: statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isSignUp ? \"Welcome Back!\" : \"Hello, Friend!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isSignUp ? \"Already have an account? Login to stay connected.\" : \"Don't have an account? Sign up and join us today!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-button toggle-overlay\",\n          onClick: toggleForm,\n          children: isSignUp ? \"Login\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Auth, \"SUnPOrExatG4GUtn7iys3/lFstI=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","Link","useNavigate","authService","jsxDEV","_jsxDEV","Auth","setIsLoggedIn","setUsername","setIsAdmin","_s","isSignUp","setIsSignUp","username","setLocalUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","otp","setOtp","isRegistered","setIsRegistered","loading","setLoading","error","setError","statusMessage","setStatusMessage","successMessage","setSuccessMessage","navigate","handleLogin","e","preventDefault","response","login","console","log","isadmin","localStorage","setItem","err","message","handleRegister","register","handleVerifyEmail","verifyEmail","handleResendOTP","resendEmailOTP","toggleForm","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dunca/OneDrive/桌面/CSCI 3100 Clone Store/csci3100_D7/frontend/src/components/Auth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport authService from \"../services/authService\";\r\nimport \"./Auth.css\";\r\n\r\nfunction Auth({ setIsLoggedIn, setUsername, setIsAdmin }) {\r\n  const [isSignUp, setIsSignUp] = useState(false); // For toggling between login and signup\r\n  const [username, setLocalUsername] = useState(\"\"); // For signup\r\n  const [email, setEmail] = useState(\"\"); // For signup and login\r\n  const [password, setPassword] = useState(\"\"); // For signup and login\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // For signup\r\n  const [otp, setOtp] = useState(\"\"); // For email verification\r\n  const [isRegistered, setIsRegistered] = useState(false); // Step tracking for signup verification\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [error, setError] = useState(null); // Error messages\r\n  const [statusMessage, setStatusMessage] = useState(\"\"); // Temporary success messages\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // Persistent success message for login form\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Handle Login\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n  \r\n    try {\r\n      const response = await authService.login(email, password);\r\n      console.log(\"Login successful:\", response);\r\n  \r\n      // Update parent state\r\n      setIsLoggedIn(true);\r\n      setUsername(response.username);\r\n      setIsAdmin(response.isadmin === 1);\r\n  \r\n      // Store email in localStorage\r\n      localStorage.setItem(\"userEmail\", email);\r\n  \r\n      // Redirect to home page\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      setError(err.message || \"Login failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle Registration\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setStatusMessage(\"\");\r\n\r\n    // Validate password match\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match!\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await authService.register(username, email, password);\r\n      setStatusMessage(\"Registration successful! Please verify your email.\");\r\n      setIsRegistered(true); // Proceed to OTP verification step\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred during registration.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Email Verification\r\n  const handleVerifyEmail = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setStatusMessage(\"\");\r\n\r\n    // Validate inputs\r\n    if (!email || !otp) {\r\n      setError(\"Email and OTP are required.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await authService.verifyEmail(email, otp);\r\n      setStatusMessage(\"Email verified successfully! Redirecting to login...\");\r\n      \r\n      // Slide back to the login form\r\n      setIsRegistered(false); // Reset registration step\r\n      setIsSignUp(false); // Slide back to the login form\r\n      setSuccessMessage(\"Registration successful! You can now log in.\"); // Set persistent success message\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred during email verification.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Resend OTP\r\n  const handleResendOTP = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setStatusMessage(\"\");\r\n\r\n    try {\r\n      await authService.resendEmailOTP(email);\r\n      setStatusMessage(\"OTP has been resent to your email.\");\r\n    } catch (err) {\r\n      setError(err.message || \"Failed to resend OTP.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Toggle Form\r\n  const toggleForm = () => {\r\n    setIsSignUp((prevState) => !prevState);\r\n    setError(null); // Clear errors when toggling\r\n    setStatusMessage(\"\");\r\n    setSuccessMessage(\"\"); // Clear persistent success message when toggling to signup\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      {/* Forms Container */}\r\n      <div className={`forms-container ${isSignUp ? \"sign-up-active\" : \"\"}`}>\r\n        {/* Login Form */}\r\n        <div className=\"form login-form\">\r\n          <h2>Login</h2>\r\n          <p>Welcome back! Login to access your account.</p>\r\n          {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"input-field\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"input-field\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button className=\"auth-button\" type=\"submit\" disabled={loading}>\r\n              {loading ? \"Logging in...\" : \"Login\"}\r\n            </button>\r\n          </form>\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n\r\n        {/* Signup Form */}\r\n        <div className=\"form signup-form\">\r\n          <h2>{isRegistered ? \"Verify Email\" : \"Sign Up\"}</h2>\r\n          {!isRegistered ? (\r\n            <form onSubmit={handleRegister}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                className=\"input-field\"\r\n                value={username}\r\n                onChange={(e) => setLocalUsername(e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"input-field\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"input-field\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                className=\"input-field\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n              <button className=\"auth-button\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"Registering...\" : \"Sign Up\"}\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={handleVerifyEmail}>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"input-field\"\r\n                value={email}\r\n                disabled // Email is pre-filled\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter OTP\"\r\n                className=\"input-field\"\r\n                value={otp}\r\n                onChange={(e) => setOtp(e.target.value)}\r\n                required\r\n              />\r\n              <button className=\"auth-button\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"Verifying...\" : \"Verify Email\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"auth-button\"\r\n                onClick={handleResendOTP}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Resending...\" : \"Resend OTP\"}\r\n              </button>\r\n            </form>\r\n          )}\r\n          {statusMessage && <p className=\"status-message success\">{statusMessage}</p>}\r\n          {error && <p className=\"status-message error\">{error}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Overlay */}\r\n      <div className=\"auth-overlay\">\r\n        <div className=\"overlay-content\">\r\n          <h1>{isSignUp ? \"Welcome Back!\" : \"Hello, Friend!\"}</h1>\r\n          <p>\r\n            {isSignUp\r\n              ? \"Already have an account? Login to stay connected.\"\r\n              : \"Don't have an account? Sign up and join us today!\"}\r\n          </p>\r\n          <button className=\"auth-button toggle-overlay\" onClick={toggleForm}>\r\n            {isSignUp ? \"Login\" : \"Sign Up\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}