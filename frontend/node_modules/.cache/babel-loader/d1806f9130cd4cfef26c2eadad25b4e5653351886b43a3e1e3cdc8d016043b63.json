{"ast":null,"code":"var _jsxFileName = \"/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport \"./Profile.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  username,\n  setIsLoggedIn,\n  setUsername\n}) {\n  _s();\n  const navigate = useNavigate();\n\n  // State for user information\n  const [email, setEmail] = useState(\"\"); // Automatically retrieved email\n  const [otp, setOtp] = useState(\"\"); // OTP for password reset\n  const [newPassword, setNewPassword] = useState(\"\"); // New password\n  const [showResetFields, setShowResetFields] = useState(false); // Toggle reset fields\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // Fetch email from localStorage on component mount\n  useEffect(() => {\n    const storedEmail = localStorage.getItem(\"userEmail\");\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n\n  // Handle OTP Request\n  const handleRequestOtp = async () => {\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n    try {\n      await authService.requestPasswordResetOTP(email);\n      setStatusMessage(\"OTP has been sent to your email.\");\n      setShowResetFields(true); // Show OTP and password fields\n    } catch (err) {\n      setError(err.message || \"Failed to send OTP.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Password Reset\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n    if (!otp || !newPassword) {\n      setError(\"OTP and new password are required.\");\n      setLoading(false);\n      return;\n    }\n    if (newPassword.length < 8) {\n      setError(\"Minimum length of password: 8 characters\");\n      setLoading(false);\n      return;\n    }\n    const letterRegex = /[a-zA-Z]/;\n    const numberRegex = /\\d/;\n    if (!letterRegex.test(newPassword) || !numberRegex.test(newPassword)) {\n      setError(\"Password must include at least one letter and one number.\");\n      setLoading(false);\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match!\");\n      setLoading(false);\n      return;\n    }\n    try {\n      await authService.resetPassword(email, otp, newPassword);\n      setStatusMessage(\"Password reset successfully! You can now log in with your new password.\");\n      setOtp(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n      setShowResetFields(false); // Hide OTP and password fields\n    } catch (err) {\n      setError(err.message || \"Failed to reset password.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"userEmail\");\n    setIsLoggedIn(false);\n    setUsername(\"\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"profile-initial\",\n          children: username.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-username\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"profile-title\",\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), !showResetFields && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"request-otp-button\",\n          onClick: handleRequestOtp,\n          disabled: loading,\n          children: loading ? \"Requesting...\" : \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), showResetFields && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status-message success\",\n            children: \"OTP has been sent to your email.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleResetPassword,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: otp,\n                onChange: e => setOtp(e.target.value),\n                placeholder: \"Enter OTP\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: newPassword,\n                onChange: e => setNewPassword(e.target.value),\n                placeholder: \"Enter new password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                placeholder: \"Confirm new password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"reset-password-button\",\n              disabled: loading,\n              children: loading ? \"Resetting...\" : \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message success\",\n          children: statusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"UaTg+QT5Qcy456nJ/P3uvRVBnu0=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","username","setIsLoggedIn","setUsername","_s","navigate","email","setEmail","otp","setOtp","newPassword","setNewPassword","showResetFields","setShowResetFields","statusMessage","setStatusMessage","loading","setLoading","error","setError","confirmPassword","setConfirmPassword","storedEmail","localStorage","getItem","handleRequestOtp","requestPasswordResetOTP","err","message","handleResetPassword","e","preventDefault","length","letterRegex","numberRegex","test","resetPassword","handleLogout","removeItem","className","children","charAt","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","disabled","onSubmit","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/kachonlai/Desktop/uni_proj/CSCI3100_Project_Demo/csci3100_D7/frontend/src/components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport \"./Profile.css\";\n\nfunction Profile({ username, setIsLoggedIn, setUsername }) {\n  const navigate = useNavigate();\n\n  // State for user information\n  const [email, setEmail] = useState(\"\"); // Automatically retrieved email\n  const [otp, setOtp] = useState(\"\"); // OTP for password reset\n  const [newPassword, setNewPassword] = useState(\"\"); // New password\n  const [showResetFields, setShowResetFields] = useState(false); // Toggle reset fields\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // Fetch email from localStorage on component mount\n  useEffect(() => {\n    const storedEmail = localStorage.getItem(\"userEmail\");\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n\n  // Handle OTP Request\n  const handleRequestOtp = async () => {\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n\n    try {\n      await authService.requestPasswordResetOTP(email);\n      setStatusMessage(\"OTP has been sent to your email.\");\n      setShowResetFields(true); // Show OTP and password fields\n    } catch (err) {\n      setError(err.message || \"Failed to send OTP.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Password Reset\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setStatusMessage(\"\");\n\n    if (!otp || !newPassword) {\n      setError(\"OTP and new password are required.\");\n      setLoading(false);\n      return;\n    }\n\n    if (newPassword.length<8){\n      setError(\"Minimum length of password: 8 characters\");\n      setLoading(false);\n      return;\n    }\n\n    const letterRegex = /[a-zA-Z]/;\n    const numberRegex = /\\d/;\n    if (!letterRegex.test(newPassword) || !numberRegex.test(newPassword)) {\n        setError(\"Password must include at least one letter and one number.\");\n        setLoading(false);\n        return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match!\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await authService.resetPassword(email, otp, newPassword);\n      setStatusMessage(\"Password reset successfully! You can now log in with your new password.\");\n      setOtp(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n      setShowResetFields(false); // Hide OTP and password fields\n    } catch (err) {\n      setError(err.message || \"Failed to reset password.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"userEmail\");\n    setIsLoggedIn(false);\n    setUsername(\"\");\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"profile-page-container\">\n      {/* Left Section */}\n      <div className=\"profile-left\">\n        <div className=\"profile-logo\">\n          {/* Display the first letter of the username */}\n          <span className=\"profile-initial\">{username.charAt(0).toUpperCase()}</span>\n        </div>\n        <div className=\"profile-username\">\n          <p>{username}</p>\n        </div>\n        <button onClick={handleLogout} className=\"logout-button\">\n          Log Out\n        </button>\n      </div>\n\n      {/* Right Section */}\n      <div className=\"profile-right\">\n        <h1 className=\"profile-title\">User Profile</h1>\n        <div className=\"profile-form\">\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input type=\"email\" value={email} disabled />\n          </div>\n\n          {/* Reset Password Button */}\n          {!showResetFields && (\n            <button\n              className=\"request-otp-button\"\n              onClick={handleRequestOtp}\n              disabled={loading}\n            >\n              {loading ? \"Requesting...\" : \"Reset Password\"}\n            </button>\n          )}\n\n          {/* OTP and New Password Fields */}\n          {showResetFields && (\n            <>\n              <p className=\"status-message success\">OTP has been sent to your email.</p>\n              <form onSubmit={handleResetPassword}>\n                <div className=\"form-group\">\n                  <label>OTP</label>\n                  <input\n                    type=\"text\"\n                    value={otp}\n                    onChange={(e) => setOtp(e.target.value)}\n                    placeholder=\"Enter OTP\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>New Password</label>\n                  <input\n                    type=\"password\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    placeholder=\"Enter new password\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    placeholder=\"Confirm new password\"\n                    required\n                    />\n                </div>\n                {error && <div className=\"error-message\">{error}</div>}\n                <button\n                  type=\"submit\"\n                  className=\"reset-password-button\"\n                  disabled={loading}\n                >\n                  {loading ? \"Resetting...\" : \"Reset Password\"}\n                </button>\n              </form>\n            </>\n          )}\n\n          {/* Status and Error Messages */}\n          {statusMessage && (\n            <p className=\"status-message success\">{statusMessage}</p>\n          )}\n          {error && <p className=\"status-message error\">{error}</p>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}